{
  "swagger": "2.0",
  "info": {
    "title": "TaskAgent",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.0"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "agents"
    },
    {
      "name": "azurermsubscriptions"
    },
    {
      "name": "deploymentgroupaccesstoken"
    },
    {
      "name": "deploymentgroups"
    },
    {
      "name": "deploymentmachinejobrequests"
    },
    {
      "name": "deploymentmachinemessages"
    },
    {
      "name": "endpoint"
    },
    {
      "name": "hublicense"
    },
    {
      "name": "icon"
    },
    {
      "name": "inputvalidation"
    },
    {
      "name": "jobrequests"
    },
    {
      "name": "machinegroupaccesstoken"
    },
    {
      "name": "machinegroups"
    },
    {
      "name": "machines"
    },
    {
      "name": "maintenancedefinitions"
    },
    {
      "name": "maintenancejobs"
    },
    {
      "name": "messages"
    },
    {
      "name": "packages"
    },
    {
      "name": "poolroles"
    },
    {
      "name": "pools"
    },
    {
      "name": "queueroles"
    },
    {
      "name": "queues"
    },
    {
      "name": "revisions"
    },
    {
      "name": "securefiles"
    },
    {
      "name": "serviceendpointproxy"
    },
    {
      "name": "serviceendpoints"
    },
    {
      "name": "serviceendpointtypes"
    },
    {
      "name": "sessions"
    },
    {
      "name": "taskgroups"
    },
    {
      "name": "tasks"
    },
    {
      "name": "updates"
    },
    {
      "name": "usercapabilities"
    },
    {
      "name": "variablegroups"
    },
    {
      "name": "vstsaadoauth"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/distributedtask/endpoint": {
      "post": {
        "tags": [
          "endpoint"
        ],
        "summary": "QueryEndpoint",
        "description": "Proxy for a GET request defined by an 'endpoint'. The request is authorized using a service connection. The response is filtered using an XPath/Json based selector.",
        "operationId": "QueryEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Describes the URL to fetch.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskDefinitionEndpoint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
         }
        }
      }
    },
    "/_apis/distributedtask/hublicense/{hubName}": {
      "get": {
        "tags": [
          "hublicense"
        ],
        "summary": "GetTaskHubLicenseDetails",
        "description": "",
        "operationId": "GetTaskHubLicenseDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "hubName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeEnterpriseUsersCount",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeHostedAgentMinutesCount",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskHubLicenseDetails"
            }
         }
        }
      },
      "put": {
        "tags": [
          "hublicense"
        ],
        "summary": "UpdateTaskHubLicenseDetails",
        "description": "",
        "operationId": "UpdateTaskHubLicenseDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskHubLicenseDetails"
            }
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskHubLicenseDetails"
            }
         }
        }
      }
    },
    "/_apis/distributedtask/inputvalidation": {
      "post": {
        "tags": [
          "inputvalidation"
        ],
        "summary": "ValidateInputs",
        "description": "",
        "operationId": "ValidateInputs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputValidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InputValidationRequest"
            }
         }
        }
      }
    },
    "/_apis/distributedtask/packages/{packageType}/{platform}": {
      "get": {
        "tags": [
          "packages"
        ],
        "summary": "GetPackages",
        "description": "",
        "operationId": "GetPackages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "packageType",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "platform",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PackageMetadata"
              }
            }
         }
        }
      }
    },
    "/_apis/distributedtask/packages/{packageType}/{platform}/{version}": {
      "get": {
        "tags": [
          "packages"
        ],
        "summary": "GetPackage",
        "description": "",
        "operationId": "GetPackage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "packageType",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "platform",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PackageMetadata"
            }
         }
        }
      }
    },
    "/_apis/distributedtask/poolroles/{poolId}": {
      "get": {
        "tags": [
          "poolroles"
        ],
        "summary": "GetAgentPoolRoles",
        "description": "",
        "operationId": "GetAgentPoolRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityRef"
              }
            }
         }
        }
      }
    },
    "/_apis/distributedtask/pools": {
      "post": {
        "tags": [
          "pools"
        ],
        "summary": "AddAgentPool",
        "description": "",
        "operationId": "AddAgentPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "pools"
        ],
        "summary": "GetAgentPools",
        "description": "",
        "operationId": "GetAgentPools",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "poolName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "poolType",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TaskAgentPoolType"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TaskAgentPoolActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentPool"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}": {
      "delete": {
        "tags": [
          "pools"
        ],
        "summary": "DeleteAgentPool",
        "description": "",
        "operationId": "DeleteAgentPool",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "pools"
        ],
        "summary": "GetAgentPool",
        "description": "",
        "operationId": "GetAgentPool",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TaskAgentPoolActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "pools"
        ],
        "summary": "UpdateAgentPool",
        "description": "",
        "operationId": "UpdateAgentPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/agents": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "AddAgent",
        "description": "",
        "operationId": "AddAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "GetAgents",
        "description": "",
        "operationId": "GetAgents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "agentName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeCapabilities",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeAssignedRequest",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "demands",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgent"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/agents/{agentId}": {
      "delete": {
        "tags": [
          "agents"
        ],
        "summary": "DeleteAgent",
        "description": "",
        "operationId": "DeleteAgent",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "agentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "GetAgent",
        "description": "",
        "operationId": "GetAgent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "agentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeCapabilities",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeAssignedRequest",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "agents"
        ],
        "summary": "ReplaceAgent",
        "description": "",
        "operationId": "ReplaceAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "agentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "agents"
        ],
        "summary": "UpdateAgent",
        "description": "",
        "operationId": "UpdateAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "agentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/agents/{agentId}/updates": {
      "put": {
        "tags": [
          "updates"
        ],
        "summary": "UpdateAgentUpdateState",
        "description": "",
        "operationId": "UpdateAgentUpdateState",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "agentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "currentState",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/agents/{agentId}/usercapabilities": {
      "put": {
        "tags": [
          "usercapabilities"
        ],
        "summary": "UpdateAgentUserCapabilities",
        "description": "",
        "operationId": "UpdateAgentUserCapabilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "agentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/jobrequests": {
      "get": {
        "tags": [
          "jobrequests"
        ],
        "summary": "GetAgentRequestsForAgent",
        "description": "",
        "operationId": "GetAgentRequestsForAgent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "agentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "completedRequestCount",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentJobRequest"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "jobrequests"
        ],
        "summary": "QueueAgentRequest",
        "description": "",
        "operationId": "QueueAgentRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentJobRequest"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentJobRequest"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}": {
      "delete": {
        "tags": [
          "jobrequests"
        ],
        "summary": "DeleteAgentRequest",
        "description": "",
        "operationId": "DeleteAgentRequest",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "requestId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "lockToken",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "result",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TaskResult"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "jobrequests"
        ],
        "summary": "GetAgentRequest",
        "description": "",
        "operationId": "GetAgentRequest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "requestId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentJobRequest"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "jobrequests"
        ],
        "summary": "UpdateAgentRequest",
        "description": "",
        "operationId": "UpdateAgentRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentJobRequest"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "requestId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "lockToken",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentJobRequest"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/maintenancedefinitions": {
      "post": {
        "tags": [
          "maintenancedefinitions"
        ],
        "summary": "CreateAgentPoolMaintenanceDefinition",
        "description": "",
        "operationId": "CreateAgentPoolMaintenanceDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceDefinition"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceDefinition"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "maintenancedefinitions"
        ],
        "summary": "GetAgentPoolMaintenanceDefinitions",
        "description": "",
        "operationId": "GetAgentPoolMaintenanceDefinitions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentPoolMaintenanceDefinition"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/maintenancedefinitions/{definitionId}": {
      "delete": {
        "tags": [
          "maintenancedefinitions"
        ],
        "summary": "DeleteAgentPoolMaintenanceDefinition",
        "description": "",
        "operationId": "DeleteAgentPoolMaintenanceDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "maintenancedefinitions"
        ],
        "summary": "GetAgentPoolMaintenanceDefinition",
        "description": "",
        "operationId": "GetAgentPoolMaintenanceDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceDefinition"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "maintenancedefinitions"
        ],
        "summary": "UpdateAgentPoolMaintenanceDefinition",
        "description": "",
        "operationId": "UpdateAgentPoolMaintenanceDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceDefinition"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceDefinition"
            }
         }
        }
      }
    },
    "/_apis/distributedtask/pools/{poolId}/maintenancejobs": {
      "get": {
        "tags": [
          "maintenancejobs"
        ],
        "summary": "GetAgentPoolMaintenanceJobs",
        "description": "",
        "operationId": "GetAgentPoolMaintenanceJobs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "definitionId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentPoolMaintenanceJob"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "maintenancejobs"
        ],
        "summary": "QueueAgentPoolMaintenanceJob",
        "description": "",
        "operationId": "QueueAgentPoolMaintenanceJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceJob"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceJob"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/maintenancejobs/{jobId}": {
      "delete": {
        "tags": [
          "maintenancejobs"
        ],
        "summary": "DeleteAgentPoolMaintenanceJob",
        "description": "",
        "operationId": "DeleteAgentPoolMaintenanceJob",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "maintenancejobs"
        ],
        "summary": "GetAgentPoolMaintenanceJob",
        "description": "",
        "operationId": "GetAgentPoolMaintenanceJob",
        "produces": [
          "application/zip",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceJob"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "maintenancejobs"
        ],
        "summary": "UpdateAgentPoolMaintenanceJob",
        "description": "",
        "operationId": "UpdateAgentPoolMaintenanceJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceJob"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "jobId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPoolMaintenanceJob"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/messages": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "GetMessage",
        "description": "",
        "operationId": "GetMessage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sessionId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "lastMessageId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentMessage"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "RefreshAgent",
        "description": "",
        "operationId": "RefreshAgent",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "agentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/messages/{messageId}": {
      "delete": {
        "tags": [
          "messages"
        ],
        "summary": "DeleteMessage",
        "description": "",
        "operationId": "DeleteMessage",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "messageId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sessionId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/sessions": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "CreateAgentSession",
        "description": "",
        "operationId": "CreateAgentSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentSession"
            }
          },
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentSession"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/pools/{poolId}/sessions/{sessionId}": {
      "delete": {
        "tags": [
          "sessions"
        ],
        "summary": "DeleteAgentSession",
        "description": "",
        "operationId": "DeleteAgentSession",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "sessionId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/queueroles/{queueId}": {
      "get": {
        "tags": [
          "queueroles"
        ],
        "summary": "GetAgentQueueRoles",
        "description": "",
        "operationId": "GetAgentQueueRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "queueId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityRef"
              }
            }
         }
        }
      }
    },
    "/_apis/distributedtask/queues": {
      "post": {
        "tags": [
          "queues"
        ],
        "summary": "AddAgentQueue",
        "description": "",
        "operationId": "AddAgentQueue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentQueue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentQueue"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "queues"
        ],
        "summary": "CreateTeamProject",
        "description": "",
        "operationId": "CreateTeamProject",
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "queues"
        ],
        "summary": "GetAgentQueues",
        "description": "",
        "operationId": "GetAgentQueues",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "queueName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TaskAgentQueueActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentQueue"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/queues/{queueId}": {
      "delete": {
        "tags": [
          "queues"
        ],
        "summary": "DeleteAgentQueue",
        "description": "",
        "operationId": "DeleteAgentQueue",
        "parameters": [
          {
            "in": "path",
            "name": "queueId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "queues"
        ],
        "summary": "GetAgentQueue",
        "description": "",
        "operationId": "GetAgentQueue",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "queueId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TaskAgentQueueActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentQueue"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/serviceendpointproxy/azurermsubscriptions": {
      "get": {
        "tags": [
          "azurermsubscriptions"
        ],
        "summary": "GetAzureSubscriptions",
        "description": "Returns list of azure subscriptions",
        "operationId": "GetAzureSubscriptions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzureSubscriptionQueryResult"
            }
         }
        }
      }
    },
    "/_apis/distributedtask/serviceendpointproxy/vstsaadoauth": {
      "post": {
        "tags": [
          "vstsaadoauth"
        ],
        "summary": "AcquireAccessToken",
        "description": "",
        "operationId": "AcquireAccessToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AadOauthTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AadOauthTokenResult"
            }
         }
        }
      },
      "get": {
        "tags": [
          "vstsaadoauth"
        ],
        "summary": "GetVstsAadTenantId",
        "description": "",
        "operationId": "GetVstsAadTenantId",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
         }
        }
      }
    },
    "/_apis/distributedtask/serviceendpointtypes": {
      "get": {
        "tags": [
          "serviceendpointtypes"
        ],
        "summary": "GetServiceEndpointTypes",
        "description": "",
        "operationId": "GetServiceEndpointTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "scheme",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpointType"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/tasks/{taskId}": {
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "DeleteTaskDefinition",
        "description": "",
        "operationId": "DeleteTaskDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "GetTaskDefinitions",
        "description": "",
        "operationId": "GetTaskDefinitions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "visibility",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "scopeLocal",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskDefinition"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/tasks/{taskId}/{versionString}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "GetTaskContentZip",
        "description": "",
        "operationId": "GetTaskContentZip",
        "produces": [
          "application/json",
          "application/zip"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "versionString",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "visibility",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "scopeLocal",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/_apis/distributedtask/tasks/{taskId}/{versionString}/icon": {
      "get": {
        "tags": [
          "icon"
        ],
        "summary": "GetTaskIcon",
        "description": "",
        "operationId": "GetTaskIcon",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "versionString",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "StreamContent"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/distributedtask/deploymentgroupaccesstoken/{deploymentGroupId}": {
      "post": {
        "tags": [
          "deploymentgroupaccesstoken"
        ],
        "summary": "GenerateDeploymentGroupAccessToken",
        "description": "",
        "operationId": "GenerateDeploymentGroupAccessToken",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/deploymentgroups": {
      "post": {
        "tags": [
          "deploymentgroups"
        ],
        "summary": "AddDeploymentGroup",
        "description": "",
        "operationId": "AddDeploymentGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentGroup"
            }
         }
        }
      },
      "get": {
        "tags": [
          "deploymentgroups"
        ],
        "summary": "GetDeploymentGroups",
        "description": "",
        "operationId": "GetDeploymentGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "DeploymentGroupActionFilter"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "DeploymentGroupExpands"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentGroup"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}": {
      "delete": {
        "tags": [
          "deploymentgroups"
        ],
        "summary": "DeleteDeploymentGroup",
        "description": "",
        "operationId": "DeleteDeploymentGroup",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      },
      "get": {
        "tags": [
          "deploymentgroups"
        ],
        "summary": "GetDeploymentGroup",
        "description": "",
        "operationId": "GetDeploymentGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "DeploymentGroupActionFilter"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "DeploymentGroupExpands"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentGroup"
            }
         }
        }
      },
      "patch": {
        "tags": [
          "deploymentgroups"
        ],
        "summary": "UpdateDeploymentGroup",
        "description": "",
        "operationId": "UpdateDeploymentGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentGroup"
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/deploymentmachinejobrequests": {
      "get": {
        "tags": [
          "deploymentmachinejobrequests"
        ],
        "summary": "GetAgentRequestsForDeploymentMachine",
        "description": "",
        "operationId": "GetAgentRequestsForDeploymentMachine",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "machineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "completedRequestCount",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentJobRequest"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/deploymentmachinemessages": {
      "post": {
        "tags": [
          "deploymentmachinemessages"
        ],
        "summary": "RefreshDeploymentMachines",
        "description": "",
        "operationId": "RefreshDeploymentMachines",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/machines": {
      "post": {
        "tags": [
          "machines"
        ],
        "summary": "AddDeploymentMachine",
        "description": "",
        "operationId": "AddDeploymentMachine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentMachine"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentMachine"
            }
         }
        }
      },
      "get": {
        "tags": [
          "machines"
        ],
        "summary": "GetDeploymentMachines",
        "description": "",
        "operationId": "GetDeploymentMachines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "name",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "DeploymentMachineExpands"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentMachine"
              }
            }
         }
        }
      },
      "patch": {
        "tags": [
          "machines"
        ],
        "summary": "UpdateDeploymentMachines",
        "description": "",
        "operationId": "UpdateDeploymentMachines",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentMachine"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentMachine"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/machines/{machineId}": {
      "delete": {
        "tags": [
          "machines"
        ],
        "summary": "DeleteDeploymentMachine",
        "description": "",
        "operationId": "DeleteDeploymentMachine",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "machineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      },
      "get": {
        "tags": [
          "machines"
        ],
        "summary": "GetDeploymentMachine",
        "description": "",
        "operationId": "GetDeploymentMachine",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "machineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "DeploymentMachineExpands"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentMachine"
            }
         }
        }
      },
      "put": {
        "tags": [
          "machines"
        ],
        "summary": "ReplaceDeploymentMachine",
        "description": "",
        "operationId": "ReplaceDeploymentMachine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentMachine"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "machineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentMachine"
            }
         }
        }
      },
      "patch": {
        "tags": [
          "machines"
        ],
        "summary": "UpdateDeploymentMachine",
        "description": "",
        "operationId": "UpdateDeploymentMachine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentMachine"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "machineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentMachine"
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/machinegroupaccesstoken/{machineGroupId}": {
      "post": {
        "tags": [
          "machinegroupaccesstoken"
        ],
        "summary": "GenerateDeploymentMachineGroupAccessToken",
        "description": "",
        "operationId": "GenerateDeploymentMachineGroupAccessToken",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "machineGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/machinegroups": {
      "post": {
        "tags": [
          "machinegroups"
        ],
        "summary": "AddDeploymentMachineGroup",
        "description": "",
        "operationId": "AddDeploymentMachineGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentMachineGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentMachineGroup"
            }
         }
        }
      },
      "get": {
        "tags": [
          "machinegroups"
        ],
        "summary": "GetDeploymentMachineGroups",
        "description": "",
        "operationId": "GetDeploymentMachineGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "machineGroupName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "MachineGroupActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentMachineGroup"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/machinegroups/{machineGroupId}": {
      "delete": {
        "tags": [
          "machinegroups"
        ],
        "summary": "DeleteDeploymentMachineGroup",
        "description": "",
        "operationId": "DeleteDeploymentMachineGroup",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "machineGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      },
      "get": {
        "tags": [
          "machinegroups"
        ],
        "summary": "GetDeploymentMachineGroup",
        "description": "",
        "operationId": "GetDeploymentMachineGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "machineGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "MachineGroupActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentMachineGroup"
            }
         }
        }
      },
      "patch": {
        "tags": [
          "machinegroups"
        ],
        "summary": "UpdateDeploymentMachineGroup",
        "description": "",
        "operationId": "UpdateDeploymentMachineGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentMachineGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "machineGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentMachineGroup"
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/machinegroups/{machineGroupId}/machines": {
      "get": {
        "tags": [
          "machines"
        ],
        "summary": "GetDeploymentMachineGroupMachines",
        "description": "",
        "operationId": "GetDeploymentMachineGroupMachines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "machineGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "tagFilters",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentMachine"
              }
            }
         }
        }
      },
      "patch": {
        "tags": [
          "machines"
        ],
        "summary": "UpdateDeploymentMachineGroupMachines",
        "description": "",
        "operationId": "UpdateDeploymentMachineGroupMachines",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentMachine"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "machineGroupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentMachine"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/queues": {
      "post": {
        "tags": [
          "queues"
        ],
        "summary": "AddAgentQueue",
        "description": "",
        "operationId": "AddAgentQueue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentQueue"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentQueue"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "queues"
        ],
        "summary": "CreateTeamProject",
        "description": "",
        "operationId": "CreateTeamProject",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "queues"
        ],
        "summary": "GetAgentQueues",
        "description": "",
        "operationId": "GetAgentQueues",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queueName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TaskAgentQueueActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentQueue"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/distributedtask/queues/{queueId}": {
      "delete": {
        "tags": [
          "queues"
        ],
        "summary": "DeleteAgentQueue",
        "description": "",
        "operationId": "DeleteAgentQueue",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "queueId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "queues"
        ],
        "summary": "GetAgentQueue",
        "description": "",
        "operationId": "GetAgentQueue",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "queueId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TaskAgentQueueActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentQueue"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.agentpools"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/distributedtask/securefiles": {
      "get": {
        "tags": [
          "securefiles"
        ],
        "summary": "GetSecureFiles",
        "description": "Get secure files",
        "operationId": "GetSecureFiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "namePattern",
            "description": "Name of the secure file to match. Can include wildcards to match multiple files.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeDownloadTickets",
            "description": "If includeDownloadTickets is true and the caller has permissions, a download ticket for each secure file is included in the response.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "Filter by secure file permissions for View, Manage or Use action. Defaults to View.",
            "required": false,
            "type": "string",
            "format": "SecureFileActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecureFile"
              }
            }
         }
        }
      },
      "post": {
        "tags": [
          "securefiles"
        ],
        "summary": "QuerySecureFilesByProperties",
        "description": "Query secure files using a name pattern and a condition on file properties.",
        "operationId": "QuerySecureFilesByProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The main condition syntax is described [here](https://go.microsoft.com/fwlink/?linkid=842996). Use the *property('property-name')* function to access the value of the specified property of a secure file. It returns null if the property is not set. E.g. ``` and( eq( property('devices'), '2' ), in( property('provisioning profile type'), 'ad hoc', 'development' ) ) ```",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "namePattern",
            "description": "Name of the secure file to match. Can include wildcards to match multiple files.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecureFile"
              }
            }
         }
        }
      },
      "patch": {
        "tags": [
          "securefiles"
        ],
        "summary": "UpdateSecureFiles",
        "description": "Update properties and/or names of a set of secure files. Files are identified by their IDs. Properties provided override the existing one entirely, i.e. do not merge.",
        "operationId": "UpdateSecureFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A list of secure file objects. Only three field must be populated Id, Name, and Properties. The rest of fields in the object are ignored.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecureFile"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecureFile"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/securefiles/{secureFileId}": {
      "delete": {
        "tags": [
          "securefiles"
        ],
        "summary": "DeleteSecureFile",
        "description": "Delete a secure file",
        "operationId": "DeleteSecureFile",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "secureFileId",
            "description": "The unique secure file Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      },
      "get": {
        "tags": [
          "securefiles"
        ],
        "summary": "DownloadSecureFile",
        "description": "Download a secure file by Id",
        "operationId": "DownloadSecureFile",
        "produces": [
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "secureFileId",
            "description": "The unique secure file Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ticket",
            "description": "A valid download ticket",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "download",
            "description": "If download is true, the file is sent as attachement in the response body. If download is false, the response body contains the file stream.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
         }
        }
      },
      "patch": {
        "tags": [
          "securefiles"
        ],
        "summary": "UpdateSecureFile",
        "description": "Update the name or properties of an existing secure file",
        "operationId": "UpdateSecureFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The secure file with updated name and/or properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecureFile"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "secureFileId",
            "description": "The unique secure file Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SecureFile"
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/serviceendpointproxy": {
      "post": {
        "tags": [
          "serviceendpointproxy"
        ],
        "summary": "ExecuteServiceEndpointRequest",
        "description": "",
        "operationId": "ExecuteServiceEndpointRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpointRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "endpointId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointRequestResult"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_query"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/distributedtask/serviceendpoints": {
      "post": {
        "tags": [
          "serviceendpoints"
        ],
        "summary": "CreateServiceEndpoint",
        "description": "",
        "operationId": "CreateServiceEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "serviceendpoints"
        ],
        "summary": "GetServiceEndpoints",
        "description": "",
        "operationId": "GetServiceEndpoints",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "authSchemes",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "endpointIds",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (uuid)"
          },
          {
            "in": "query",
            "name": "includeFailed",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "serviceendpoints"
        ],
        "summary": "UpdateServiceEndpoints",
        "description": "",
        "operationId": "UpdateServiceEndpoints",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/distributedtask/serviceendpoints/{endpointId}": {
      "delete": {
        "tags": [
          "serviceendpoints"
        ],
        "summary": "DeleteServiceEndpoint",
        "description": "",
        "operationId": "DeleteServiceEndpoint",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "serviceendpoints"
        ],
        "summary": "GetServiceEndpointDetails",
        "description": "",
        "operationId": "GetServiceEndpointDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "serviceendpoints"
        ],
        "summary": "UpdateServiceEndpoint",
        "description": "",
        "operationId": "UpdateServiceEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "endpointId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.serviceendpoint_manage"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/distributedtask/taskgroups": {
      "post": {
        "tags": [
          "taskgroups"
        ],
        "summary": "AddTaskGroup",
        "description": "",
        "operationId": "AddTaskGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskGroup"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.taskgroups_add"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "taskgroups"
        ],
        "summary": "PublishTaskGroup",
        "description": "",
        "operationId": "PublishTaskGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishTaskGroupMetadata"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "parentTaskGroupId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskGroup"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.taskgroups_manage"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/distributedtask/taskgroups/{taskGroupId}": {
      "delete": {
        "tags": [
          "taskgroups"
        ],
        "summary": "DeleteTaskGroup",
        "description": "",
        "operationId": "DeleteTaskGroup",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "taskGroupId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.taskgroups_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "taskgroups"
        ],
        "summary": "GetTaskGroup",
        "description": "",
        "operationId": "GetTaskGroup",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "taskGroupId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "versionSpec",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expanded",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskGroup"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.taskgroups"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "taskgroups"
        ],
        "summary": "PublishPreviewTaskGroup",
        "description": "",
        "operationId": "PublishPreviewTaskGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "taskGroupId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "disablePriorVersions",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskGroup"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/taskgroups/{taskGroupId}/revisions": {
      "get": {
        "tags": [
          "revisions"
        ],
        "summary": "GetTaskGroupHistory",
        "description": "",
        "operationId": "GetTaskGroupHistory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "taskGroupId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskGroupRevision"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.taskgroups"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/distributedtask/variablegroups": {
      "post": {
        "tags": [
          "variablegroups"
        ],
        "summary": "AddVariableGroup",
        "description": "",
        "operationId": "AddVariableGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VariableGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VariableGroup"
            }
         }
        }
      },
      "get": {
        "tags": [
          "variablegroups"
        ],
        "summary": "GetVariableGroups",
        "description": "",
        "operationId": "GetVariableGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "groupName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "actionFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "VariableGroupActionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariableGroup"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/distributedtask/variablegroups/{groupId}": {
      "delete": {
        "tags": [
          "variablegroups"
        ],
        "summary": "DeleteVariableGroup",
        "description": "",
        "operationId": "DeleteVariableGroup",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      },
      "get": {
        "tags": [
          "variablegroups"
        ],
        "summary": "GetVariableGroup",
        "description": "",
        "operationId": "GetVariableGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VariableGroup"
            }
         }
        }
      },
      "put": {
        "tags": [
          "variablegroups"
        ],
        "summary": "UpdateVariableGroup",
        "description": "",
        "operationId": "UpdateVariableGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VariableGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VariableGroup"
            }
         }
        }
      }
    }
  },
  "definitions": {
    "AadOauthTokenRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "refresh": {
          "type": "boolean"
        },
        "resource": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "AadOauthTokenResult": {
      "description": "",
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshTokenCache": {
          "type": "string"
        }
      }
    },
    "AgentChangeEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/TaskAgent"
        },
        "eventType": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/TaskAgentPoolReference"
        },
        "poolId": {
          "type": "integer",
          "format": "int32"
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AgentJobRequestMessage": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobRequestMessage"
        }
      ],
      "properties": {
        "lockedUntil": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "lockToken": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "requestId": {
          "readOnly": true,
          "type": "integer",
          "format": "int64"
        },
        "tasks": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskInstance"
          }
        }
      }
    },
    "AgentMigrationMessage": {
      "description": "",
      "type": "object",
      "properties": {
        "accessToken": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "AgentPoolEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "eventType": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/TaskAgentPool"
        }
      }
    },
    "AgentQueueEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "eventType": {
          "type": "string"
        },
        "queue": {
          "$ref": "#/definitions/TaskAgentQueue"
        }
      }
    },
    "AgentQueuesEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "eventType": {
          "type": "string"
        },
        "queues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskAgentQueue"
          }
        }
      }
    },
    "AgentRefreshMessage": {
      "description": "",
      "type": "object",
      "properties": {
        "agentId": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "targetVersion": {
          "readOnly": true,
          "type": "string"
        },
        "timeout": {
          "readOnly": true,
          "type": "string",
          "format": "TimeSpan"
        }
      }
    },
    "AgentRequestEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "eventType": {
          "type": "string"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        },
        "poolId": {
          "type": "integer",
          "format": "int32"
        },
        "reservedAgentId": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult"
          }
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AuthorizationHeader": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "AzureKeyVaultVariableGroupProviderData": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VariableGroupProviderData"
        }
      ],
      "properties": {
        "lastRefreshedOn": {
          "type": "string",
          "format": "date-time"
        },
        "serviceEndpointId": {
          "type": "string",
          "format": "uuid"
        },
        "vault": {
          "type": "string"
        }
      }
    },
    "AzureKeyVaultVariableValue": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VariableValue"
        }
      ],
      "properties": {
        "contentType": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "expires": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AzureSpnOperationStatus": {
      "description": "",
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string"
        }
      }
    },
    "AzureSubscription": {
      "description": "",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "subscriptionTenantId": {
          "type": "string"
        },
        "subscriptionTenantName": {
          "type": "string"
        }
      }
    },
    "AzureSubscriptionQueryResult": {
      "description": "",
      "type": "object",
      "properties": {
        "errorMessage": {
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureSubscription"
          }
        }
      }
    },
    "DataSource": {
      "description": "",
      "type": "object",
      "properties": {
        "endpointUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resourceUrl": {
          "type": "string"
        },
        "resultSelector": {
          "type": "string"
        }
      }
    },
    "DataSourceBinding": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataSourceBindingBase"
        }
      ],
      "properties": {
      }
    },
    "DataSourceBindingBase": {
      "description": "",
      "type": "object",
      "properties": {
        "dataSourceName": {
          "type": "string"
        },
        "endpointId": {
          "type": "string"
        },
        "endpointUrl": {
          "type": "string"
        },
        "parameters": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resultSelector": {
          "type": "string"
        },
        "resultTemplate": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "DataSourceDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "dataSourceName": {
          "type": "string"
        },
        "dataSourceUrl": {
          "type": "string"
        },
        "parameters": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceUrl": {
          "type": "string"
        },
        "resultSelector": {
          "type": "string"
        }
      }
    },
    "Demand": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DependencyBinding": {
      "description": "",
      "type": "object",
      "properties": {
        "key": {
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DependencyData": {
      "description": "",
      "type": "object",
      "properties": {
        "input": {
          "type": "string"
        },
        "map": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "DependsOn": {
      "description": "",
      "type": "object",
      "properties": {
        "input": {
          "type": "string"
        },
        "map": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyBinding"
          }
        }
      }
    },
    "DeploymentGroup": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentGroupReference"
        }
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "machineCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "machines": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentMachine"
          }
        }
      }
    },
    "DeploymentGroupReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/TaskAgentPoolReference"
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        }
      }
    },
    "DeploymentMachine": {
      "description": "",
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/TaskAgent"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeploymentMachineGroup": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentMachineGroupReference"
        }
      ],
      "properties": {
        "machines": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentMachine"
          }
        },
        "size": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeploymentMachineGroupReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/TaskAgentPoolReference"
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        }
      }
    },
    "DeploymentMachinesChangeEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "machineGroupReference": {
          "$ref": "#/definitions/DeploymentGroupReference"
        },
        "machines": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentMachine"
          }
        }
      }
    },
    "EndpointAuthorization": {
      "description": "",
      "type": "object",
      "properties": {
        "parameters": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scheme": {
          "type": "string"
        }
      }
    },
    "EndpointUrl": {
      "description": "",
      "type": "object",
      "properties": {
        "dependsOn": {
          "$ref": "#/definitions/DependsOn"
        },
        "displayName": {
          "type": "string"
        },
        "helpText": {
          "type": "string"
        },
        "isVisible": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "EventsConfig": {
      "description": "",
      "type": "object",
      "properties": {
      }
    },
    "HelpLink": {
      "description": "",
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "properties": {
        "directoryAlias": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "InputDescriptor": {
      "description": "Describes an input for subscriptions.",
      "type": "object",
      "properties": {
        "dependencyInputIds": {
          "description": "The ids of all inputs that the value of this input is dependent on.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of what this input is used for",
          "type": "string"
        },
        "groupName": {
          "description": "The group localized name to which this input belongs and can be shown as a header for the container that will include all the inputs in the group.",
          "type": "string"
        },
        "hasDynamicValueInformation": {
          "description": "If true, the value information for this input is dynamic and should be fetched when the value of dependency inputs change.",
          "type": "boolean"
        },
        "id": {
          "description": "Identifier for the subscription input",
          "type": "string"
        },
        "inputMode": {
          "description": "Mode in which the value of this input should be entered",
          "enum": [
            "none",
            "textBox",
            "passwordBox",
            "combo",
            "radioButtons",
            "checkBox",
            "textArea"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.FormInput.InputMode"
          }
        },
        "isConfidential": {
          "description": "Gets whether this input is confidential, such as for a password or application key",
          "type": "boolean"
        },
        "name": {
          "description": "Localized name which can be shown as a label for the subscription input",
          "type": "string"
        },
        "properties": {
          "description": "Custom properties for the input which can be used by the service provider",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "type": {
          "description": "Underlying data type for the input value. When this value is specified, InputMode, Validation and Values are optional.",
          "type": "string"
        },
        "useInDefaultDescription": {
          "description": "Gets whether this input is included in the default generated action description.",
          "type": "boolean"
        },
        "validation": {
          "description": "Information to use to validate this input's value",
          "$ref": "#/definitions/InputValidation"
        },
        "valueHint": {
          "description": "A hint for input value. It can be used in the UI as the input placeholder.",
          "type": "string"
        },
        "values": {
          "description": "Information about possible values for this input",
          "$ref": "#/definitions/InputValues"
        }
      }
    },
    "InputValidation": {
      "description": "Describes what values are valid for a subscription input",
      "type": "object",
      "properties": {
        "dataType": {
          "enum": [
            "none",
            "string",
            "number",
            "boolean",
            "guid",
            "uri"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.FormInput.InputDataType"
          }
        },
        "isRequired": {
          "type": "boolean"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxValue": {
          "type": "string",
          "format": "decimal"
        },
        "minLength": {
          "type": "integer",
          "format": "int32"
        },
        "minValue": {
          "type": "string",
          "format": "decimal"
        },
        "pattern": {
          "type": "string"
        },
        "patternMismatchErrorMessage": {
          "type": "string"
        }
      }
    },
    "InputValidationItem": {
      "description": "",
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "InputValidationRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "inputs": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/InputValidationItem"
          }
        }
      }
    },
    "InputValue": {
      "description": "Information about a single value for an input",
      "type": "object",
      "properties": {
        "data": {
          "description": "Any other data about this input",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "displayValue": {
          "description": "The text to show for the display of this value",
          "type": "string"
        },
        "value": {
          "description": "The value to store for this input",
          "type": "string"
        }
      }
    },
    "InputValues": {
      "description": "Information about the possible/allowed values for a given subscription input",
      "type": "object",
      "properties": {
        "defaultValue": {
          "description": "The default value to use for this input",
          "type": "string"
        },
        "error": {
          "description": "Errors encountered while computing dynamic values.",
          "$ref": "#/definitions/InputValuesError"
        },
        "inputId": {
          "description": "The id of the input",
          "type": "string"
        },
        "isDisabled": {
          "description": "Should this input be disabled",
          "type": "boolean"
        },
        "isLimitedToPossibleValues": {
          "description": "Should the value be restricted to one of the values in the PossibleValues (True) or are the values in PossibleValues just a suggestion (False)",
          "type": "boolean"
        },
        "isReadOnly": {
          "description": "Should this input be made read-only",
          "type": "boolean"
        },
        "possibleValues": {
          "description": "Possible values that this input can take",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputValue"
          }
        }
      }
    },
    "InputValuesError": {
      "description": "Error information related to a subscription input value.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      }
    },
    "Issue": {
      "description": "",
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "data": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "error",
            "warning"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.IssueType"
          }
        }
      }
    },
    "JobAssignedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobEvent"
        }
      ],
      "properties": {
        "request": {
          "$ref": "#/definitions/TaskAgentJobRequest"
        }
      }
    },
    "JobCancelMessage": {
      "description": "",
      "type": "object",
      "properties": {
        "jobId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "timeout": {
          "readOnly": true,
          "type": "string",
          "format": "TimeSpan"
        }
      }
    },
    "JobCompletedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobEvent"
        }
      ],
      "properties": {
        "outputVariables": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableValue"
          }
        },
        "requestId": {
          "type": "integer",
          "format": "int64"
        },
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult"
          }
        }
      }
    },
    "JobEnvironment": {
      "description": "Represents the context of variables and vectors for a job request.",
      "type": "object",
      "properties": {
        "endpoints": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpoint"
          }
        },
        "mask": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaskHint"
          }
        },
        "options": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobOption"
          }
        },
        "secureFiles": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecureFile"
          }
        },
        "systemConnection": {
          "description": "Gets or sets the endpoint used for communicating back to the calling service.",
          "$ref": "#/definitions/ServiceEndpoint"
        },
        "variables": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "JobEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "JobEventConfig": {
      "description": "",
      "type": "object",
      "properties": {
        "timeout": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "JobEventsConfig": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventsConfig"
        }
      ],
      "properties": {
        "jobAssigned": {
          "$ref": "#/definitions/JobEventConfig"
        },
        "jobCompleted": {
          "$ref": "#/definitions/JobEventConfig"
        },
        "jobStarted": {
          "$ref": "#/definitions/JobEventConfig"
        }
      }
    },
    "JObject": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "JContainer"
        }
      ],
      "properties": {
        "item": {
          "$ref": "#/definitions/JToken"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "JobOption": {
      "description": "Represents an option that may affect the way an agent runs the job.",
      "type": "object",
      "properties": {
        "data": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "Gets the id of the option.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "JobRequestMessage": {
      "description": "",
      "type": "object",
      "properties": {
        "environment": {
          "$ref": "#/definitions/JobEnvironment"
        },
        "jobId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "jobName": {
          "readOnly": true,
          "type": "string"
        },
        "jobRefName": {
          "readOnly": true,
          "type": "string"
        },
        "messageType": {
          "readOnly": true,
          "type": "string"
        },
        "plan": {
          "$ref": "#/definitions/TaskOrchestrationPlanReference"
        },
        "timeline": {
          "$ref": "#/definitions/TimelineReference"
        }
      }
    },
    "JobStartedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobEvent"
        }
      ],
      "properties": {
      }
    },
    "JToken": {
      "description": "",
      "type": "object",
      "properties": {
        "first": {
          "$ref": "#/definitions/JToken"
        },
        "hasValues": {
          "readOnly": true,
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/JToken"
        },
        "last": {
          "$ref": "#/definitions/JToken"
        },
        "next": {
          "$ref": "#/definitions/JToken"
        },
        "parent": {
          "readOnly": true,
          "type": "string",
          "format": "JContainer"
        },
        "path": {
          "readOnly": true,
          "type": "string"
        },
        "previous": {
          "$ref": "#/definitions/JToken"
        },
        "root": {
          "$ref": "#/definitions/JToken"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "MaskHint": {
      "description": "",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "variable",
            "regex"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.MaskType"
          }
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PackageMetadata": {
      "description": "Represents a downloadable package.",
      "type": "object",
      "properties": {
        "createdOn": {
          "description": "The date the package was created",
          "type": "string",
          "format": "date-time"
        },
        "downloadUrl": {
          "description": "A direct link to download the package.",
          "type": "string"
        },
        "filename": {
          "description": "The UI uses this to display instructions, i.e. \"unzip MyAgent.zip\"",
          "type": "string"
        },
        "hashValue": {
          "description": "MD5 hash as a base64 string",
          "type": "string"
        },
        "infoUrl": {
          "description": "A link to documentation",
          "type": "string"
        },
        "platform": {
          "description": "The platform (win7, linux, etc.)",
          "type": "string"
        },
        "type": {
          "description": "The type of package (e.g. \"agent\")",
          "type": "string"
        },
        "version": {
          "description": "The package version.",
          "$ref": "#/definitions/PackageVersion"
        }
      }
    },
    "PackageVersion": {
      "description": "",
      "type": "object",
      "properties": {
        "major": {
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PlanEnvironment": {
      "description": "",
      "type": "object",
      "properties": {
        "mask": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaskHint"
          }
        },
        "options": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobOption"
          }
        },
        "variables": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProjectReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PropertiesCollection": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "Implements ICollection<KeyValuePair<String,Object>>.Count/>",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "object"
        },
        "keys": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PublishTaskGroupMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "parentDefinitionRevision": {
          "type": "integer",
          "format": "int32"
        },
        "preview": {
          "type": "boolean"
        },
        "taskGroupId": {
          "type": "string",
          "format": "uuid"
        },
        "taskGroupRevision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.  Example: { self: { href: \"http://localhost:8080/tfs/DefaultCollection/_apis/wit/workItems/1\" } }",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ResultTransformationDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "resultTemplate": {
          "type": "string"
        }
      }
    },
    "SecureFile": {
      "description": "",
      "type": "object",
      "properties": {
        "createdBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "modifiedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ticket": {
          "type": "string"
        }
      }
    },
    "SendJobResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "events": {
          "$ref": "#/definitions/JobEventsConfig"
        },
        "variables": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ServerExecutionDefinition": {
      "description": "",
      "type": "object",
      "properties": {
        "events": {
          "$ref": "#/definitions/EventsConfig"
        },
        "handlerName": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ServerTaskRequestMessage": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobRequestMessage"
        }
      ],
      "properties": {
        "taskDefinition": {
          "$ref": "#/definitions/TaskDefinition"
        },
        "taskInstance": {
          "$ref": "#/definitions/TaskInstance"
        }
      }
    },
    "ServiceEndpoint": {
      "description": "Represents an endpoint which may be used by an orchestration job.",
      "type": "object",
      "properties": {
        "administratorsGroup": {
          "$ref": "#/definitions/IdentityRef"
        },
        "authorization": {
          "description": "Gets or sets the authorization data for talking to the endpoint.",
          "$ref": "#/definitions/EndpointAuthorization"
        },
        "createdBy": {
          "description": "The Gets or sets Identity reference for the user who created the Service endpoint",
          "$ref": "#/definitions/IdentityRef"
        },
        "data": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Gets or Sets description of endpoint",
          "type": "string"
        },
        "groupScopeId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "Gets or sets the identifier of this endpoint.",
          "type": "string",
          "format": "uuid"
        },
        "isReady": {
          "description": "EndPoint state indictor",
          "type": "boolean"
        },
        "name": {
          "description": "Gets or sets the friendly name of the endpoint.",
          "type": "string"
        },
        "operationStatus": {
          "description": "Error message during creation/deletion of endpoint",
          "$ref": "#/definitions/JObject"
        },
        "readersGroup": {
          "$ref": "#/definitions/IdentityRef"
        },
        "type": {
          "description": "Gets or sets the type of the endpoint.",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the url of the endpoint.",
          "type": "string"
        }
      }
    },
    "ServiceEndpointAuthenticationScheme": {
      "description": "",
      "type": "object",
      "properties": {
        "authorizationHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationHeader"
          }
        },
        "displayName": {
          "type": "string"
        },
        "inputDescriptors": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputDescriptor"
          }
        },
        "scheme": {
          "type": "string"
        }
      }
    },
    "ServiceEndpointDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/EndpointAuthorization"
        },
        "data": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ServiceEndpointRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "dataSourceDetails": {
          "$ref": "#/definitions/DataSourceDetails"
        },
        "resultTransformationDetails": {
          "$ref": "#/definitions/ResultTransformationDetails"
        },
        "serviceEndpointDetails": {
          "$ref": "#/definitions/ServiceEndpointDetails"
        }
      }
    },
    "ServiceEndpointRequestResult": {
      "description": "",
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/JToken"
        },
        "statusCode": {
          "enum": [
            "continue",
            "switchingProtocols",
            "oK",
            "created",
            "accepted",
            "nonAuthoritativeInformation",
            "noContent",
            "resetContent",
            "partialContent",
            "multipleChoices",
            "ambiguous",
            "movedPermanently",
            "moved",
            "found",
            "redirect",
            "seeOther",
            "redirectMethod",
            "notModified",
            "useProxy",
            "unused",
            "temporaryRedirect",
            "redirectKeepVerb",
            "badRequest",
            "unauthorized",
            "paymentRequired",
            "forbidden",
            "notFound",
            "methodNotAllowed",
            "notAcceptable",
            "proxyAuthenticationRequired",
            "requestTimeout",
            "conflict",
            "gone",
            "lengthRequired",
            "preconditionFailed",
            "requestEntityTooLarge",
            "requestUriTooLong",
            "unsupportedMediaType",
            "requestedRangeNotSatisfiable",
            "expectationFailed",
            "upgradeRequired",
            "internalServerError",
            "notImplemented",
            "badGateway",
            "serviceUnavailable",
            "gatewayTimeout",
            "httpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "System.Net.HttpStatusCode"
          }
        }
      }
    },
    "ServiceEndpointType": {
      "description": "",
      "type": "object",
      "properties": {
        "authenticationSchemes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpointAuthenticationScheme"
          }
        },
        "dataSources": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSource"
          }
        },
        "dependencyData": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyData"
          }
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "endpointUrl": {
          "$ref": "#/definitions/EndpointUrl"
        },
        "helpLink": {
          "$ref": "#/definitions/HelpLink"
        },
        "helpMarkDown": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "inputDescriptors": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputDescriptor"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TaskAgent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskAgentReference"
        }
      ],
      "properties": {
        "assignedRequest": {
          "description": "Gets the request which is currently assigned to this agent.",
          "$ref": "#/definitions/TaskAgentJobRequest"
        },
        "authorization": {
          "description": "Gets or sets the authorization information for this agent.",
          "$ref": "#/definitions/TaskAgentAuthorization"
        },
        "createdOn": {
          "description": "Gets the date on which this agent was created.",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "maxParallelism": {
          "description": "Gets or sets the maximum job parallelism allowed on this host.",
          "type": "integer",
          "format": "int32"
        },
        "pendingUpdate": {
          "description": "Gets the pending update for this agent.",
          "$ref": "#/definitions/TaskAgentUpdate"
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "statusChangedOn": {
          "description": "Gets the date on which the last connectivity status change occurred.",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "systemCapabilities": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "userCapabilities": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TaskAgentAuthorization": {
      "description": "Provides data necessary for authorizing the agent using OAuth 2.0 authentication flows.",
      "type": "object",
      "properties": {
        "authorizationUrl": {
          "description": "Gets or sets the endpoint used to obtain access tokens from the configured token service.",
          "type": "string"
        },
        "clientId": {
          "description": "Gets or sets the client identifier for this agent.",
          "type": "string",
          "format": "uuid"
        },
        "publicKey": {
          "description": "Gets or sets the public key used to verify the identity of this agent.",
          "$ref": "#/definitions/TaskAgentPublicKey"
        }
      }
    },
    "TaskAgentJobRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "assignTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "data": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "demands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Demand"
          }
        },
        "finishTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "hostId": {
          "type": "string",
          "format": "uuid"
        },
        "jobId": {
          "type": "string",
          "format": "uuid"
        },
        "jobName": {
          "type": "string"
        },
        "lockedUntil": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "matchedAgents": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskAgentReference"
          }
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        },
        "planType": {
          "type": "string"
        },
        "queueTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "receiveTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "requestId": {
          "readOnly": true,
          "type": "integer",
          "format": "int64"
        },
        "reservedAgent": {
          "$ref": "#/definitions/TaskAgentReference"
        },
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult"
          }
        },
        "scopeId": {
          "type": "string",
          "format": "uuid"
        },
        "serviceOwner": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TaskAgentManualUpdate": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskAgentUpdateReason"
        }
      ],
      "properties": {
      }
    },
    "TaskAgentMessage": {
      "description": "Provides a contract for receiving messages from the task orchestrator.",
      "type": "object",
      "properties": {
        "body": {
          "description": "Gets or sets the body of the message. If the IV property is provided the body will need to be decrypted using the TaskAgentSession.EncryptionKey value in addition to the IV.",
          "type": "string"
        },
        "iV": {
          "description": "Gets or sets the intialization vector used to encrypt this message.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "messageId": {
          "description": "Gets or sets the message identifier.",
          "type": "integer",
          "format": "int64"
        },
        "messageType": {
          "description": "Gets or sets the message type, describing the data contract found in TaskAgentMessage.Body.",
          "type": "string"
        }
      }
    },
    "TaskAgentMinAgentVersionRequiredUpdate": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskAgentUpdateReason"
        }
      ],
      "properties": {
        "jobDefinition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "jobOwner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "minAgentVersion": {
          "$ref": "#/definitions/Demand"
        }
      }
    },
    "TaskAgentPool": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskAgentPoolReference"
        }
      ],
      "properties": {
        "administratorsGroup": {
          "description": "Gets the administrators group for this agent pool.",
          "$ref": "#/definitions/IdentityRef"
        },
        "autoProvision": {
          "description": "Gets or sets a value indicating whether or not a queue should be automatically provisioned for each project collection or not.",
          "type": "boolean"
        },
        "createdBy": {
          "description": "Gets the identity who created this pool. The creator of the pool is automatically added into the administrators group for the pool on creation.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Gets the date/time of the pool creation.",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "groupScopeId": {
          "description": "Gets the scope identifier for groups/roles which are owned by this pool.",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "provisioned": {
          "description": "Gets a value indicating whether or not roles have been provisioned for this pool.",
          "readOnly": true,
          "type": "boolean"
        },
        "serviceAccountsGroup": {
          "description": "Gets the service accounts group for this agent pool.",
          "$ref": "#/definitions/IdentityRef"
        },
        "size": {
          "description": "Gets the current size of the pool.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskAgentPoolMaintenanceDefinition": {
      "description": "",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enable maintenance",
          "type": "boolean"
        },
        "id": {
          "description": "Id",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "jobTimeoutInMinutes": {
          "description": "Maintenance job timeout per agent",
          "type": "integer",
          "format": "int32"
        },
        "maxConcurrentAgentsPercentage": {
          "description": "Max percentage of agents within a pool running maintenance job at given time",
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "$ref": "#/definitions/TaskAgentPoolMaintenanceOptions"
        },
        "pool": {
          "description": "Pool reference for the maintenance definition",
          "$ref": "#/definitions/TaskAgentPoolReference"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/TaskAgentPoolMaintenanceRetentionPolicy"
        },
        "scheduleSetting": {
          "$ref": "#/definitions/TaskAgentPoolMaintenanceSchedule"
        }
      }
    },
    "TaskAgentPoolMaintenanceJob": {
      "description": "",
      "type": "object",
      "properties": {
        "definitionId": {
          "description": "The maintenance definition for the maintenance job",
          "type": "integer",
          "format": "int32"
        },
        "errorCount": {
          "description": "The total error counts during the maintenance job",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "finishTime": {
          "description": "Time that the maintenance job was completed",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "jobId": {
          "description": "Id of the maintenance job",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "logsDownloadUrl": {
          "description": "The log download url for the maintenance job",
          "readOnly": true,
          "type": "string"
        },
        "orchestrationId": {
          "description": "Orchestration/Plan Id for the maintenance job",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "pool": {
          "description": "Pool reference for the maintenance job",
          "$ref": "#/definitions/TaskAgentPoolReference"
        },
        "queueTime": {
          "description": "Time that the maintenance job was queued",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "requestedBy": {
          "description": "The identity that queued the maintenance job",
          "$ref": "#/definitions/IdentityRef"
        },
        "result": {
          "description": "The maintenance job result",
          "readOnly": true,
          "enum": [
            "succeeded",
            "failed",
            "canceled"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJobResult"
          }
        },
        "startTime": {
          "description": "Time that the maintenance job was started",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Status of the maintenance job",
          "enum": [
            "inProgress",
            "completed",
            "cancelling",
            "queued"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJobStatus"
          }
        },
        "targetAgents": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskAgentPoolMaintenanceJobTargetAgent"
          }
        },
        "warningCount": {
          "description": "The total warning counts during the maintenance job",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskAgentPoolMaintenanceJobTargetAgent": {
      "description": "",
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/TaskAgentReference"
        },
        "jobId": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "enum": [
            "succeeded",
            "failed",
            "canceled"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJobResult"
          }
        },
        "status": {
          "enum": [
            "inProgress",
            "completed",
            "cancelling",
            "queued"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceJobStatus"
          }
        }
      }
    },
    "TaskAgentPoolMaintenanceOptions": {
      "description": "",
      "type": "object",
      "properties": {
        "workingDirectoryExpirationInDays": {
          "description": "time to consider a System.DefaultWorkingDirectory is stale",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskAgentPoolMaintenanceRetentionPolicy": {
      "description": "",
      "type": "object",
      "properties": {
        "numberOfHistoryRecordsToKeep": {
          "description": "Number of records to keep for maintenance job executed with this definition.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskAgentPoolMaintenanceSchedule": {
      "description": "",
      "type": "object",
      "properties": {
        "daysToBuild": {
          "description": "Days for a build (flags enum for days of the week)",
          "enum": [
            "none",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolMaintenanceScheduleDays"
          }
        },
        "scheduleJobId": {
          "description": "The Job Id of the Scheduled job that will queue the pool maintenance job.",
          "type": "string",
          "format": "uuid"
        },
        "startHours": {
          "description": "Local timezone hour to start",
          "type": "integer",
          "format": "int32"
        },
        "startMinutes": {
          "description": "Local timezone minute to start",
          "type": "integer",
          "format": "int32"
        },
        "timeZoneId": {
          "description": "Time zone of the build schedule (string representation of the time zone id)",
          "type": "string"
        }
      }
    },
    "TaskAgentPoolReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isHosted": {
          "description": "Gets or sets a value indicating whether or not this pool is managed by the service.",
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "poolType": {
          "description": "Gets or sets the type of the pool",
          "enum": [
            "automation",
            "deployment"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentPoolType"
          }
        },
        "scope": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TaskAgentPublicKey": {
      "description": "Represents the public key portion of an RSA asymmetric key.",
      "type": "object",
      "properties": {
        "exponent": {
          "description": "Gets or sets the exponent for the public key.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "modulus": {
          "description": "Gets or sets the modulus for the public key.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "TaskAgentQueue": {
      "description": "",
      "type": "object",
      "properties": {
        "groupScopeId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/TaskAgentPoolReference"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "provisioned": {
          "type": "boolean"
        }
      }
    },
    "TaskAgentReference": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "enabled": {
          "description": "Gets or sets a value indicating whether or not this agent should be enabled for job execution.",
          "type": "boolean"
        },
        "id": {
          "description": "Gets the identifier of the agent.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Gets the name of the agent.",
          "type": "string"
        },
        "status": {
          "description": "Gets the current connectivity status of the agent.",
          "enum": [
            "offline",
            "online"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentStatus"
          }
        },
        "version": {
          "description": "Gets the version of the agent.",
          "type": "string"
        }
      }
    },
    "TaskAgentSession": {
      "description": "Represents a session for performing message exchanges from an agent.",
      "type": "object",
      "properties": {
        "agent": {
          "description": "Gets or sets the agent which is the target of the session.",
          "$ref": "#/definitions/TaskAgentReference"
        },
        "encryptionKey": {
          "description": "Gets the key used to encrypt message traffic for this session.",
          "$ref": "#/definitions/TaskAgentSessionKey"
        },
        "ownerName": {
          "description": "Gets or sets the owner name of this session. Generally this will be the machine of origination.",
          "type": "string"
        },
        "sessionId": {
          "description": "Gets the unique identifier for this session.",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "systemCapabilities": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TaskAgentSessionKey": {
      "description": "Represents a symmetric key used for message-level encryption for communication sent to an agent.",
      "type": "object",
      "properties": {
        "encrypted": {
          "description": "Gets or sets a value indicating whether or not the key value is encrypted. If this value is true, the property should be decrypted using the RSA key exchanged with the server during registration.",
          "type": "boolean"
        },
        "value": {
          "description": "Gets or sets the symmetric key value.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "TaskAgentUpdate": {
      "description": "",
      "type": "object",
      "properties": {
        "currentState": {
          "description": "The current state of this agent update",
          "type": "string"
        },
        "reason": {
          "description": "The reason of this agent update",
          "$ref": "#/definitions/TaskAgentUpdateReason"
        },
        "requestedBy": {
          "description": "The identity that request the agent update",
          "$ref": "#/definitions/IdentityRef"
        },
        "requestTime": {
          "description": "Gets the date on which this agent update was requested.",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "sourceVersion": {
          "description": "Gets or sets the source agent version of the agent update",
          "$ref": "#/definitions/PackageVersion"
        },
        "targetVersion": {
          "description": "Gets or sets the target agent version of the agent update",
          "$ref": "#/definitions/PackageVersion"
        }
      }
    },
    "TaskAgentUpdateReason": {
      "description": "",
      "type": "object",
      "properties": {
        "code": {
          "readOnly": true,
          "enum": [
            "manual",
            "minAgentVersionRequired"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskAgentUpdateReasonType"
          }
        }
      }
    },
    "TaskAssignedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskEvent"
        }
      ],
      "properties": {
      }
    },
    "TaskAttachment": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "createdOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "lastChangedBy": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "lastChangedOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "recordId": {
          "type": "string",
          "format": "uuid"
        },
        "timelineId": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TaskChangeEvent": {
      "description": "",
      "type": "object",
      "properties": {
      }
    },
    "TaskCompletedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskEvent"
        }
      ],
      "properties": {
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult"
          }
        }
      }
    },
    "TaskDefinition": {
      "description": "",
      "type": "object",
      "properties": {
        "agentExecution": {
          "$ref": "#/definitions/TaskExecution"
        },
        "author": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "contentsUploaded": {
          "type": "boolean"
        },
        "contributionIdentifier": {
          "type": "string"
        },
        "contributionVersion": {
          "type": "string"
        },
        "dataSourceBindings": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSourceBinding"
          }
        },
        "definitionType": {
          "type": "string"
        },
        "demands": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Demand"
          }
        },
        "deprecated": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "execution": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JObject"
          }
        },
        "friendlyName": {
          "type": "string"
        },
        "groups": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskGroupDefinition"
          }
        },
        "helpMarkDown": {
          "type": "string"
        },
        "hostType": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "inputs": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskInputDefinition"
          }
        },
        "instanceNameFormat": {
          "type": "string"
        },
        "minimumAgentVersion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "outputVariables": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOutputVariable"
          }
        },
        "packageLocation": {
          "type": "string"
        },
        "packageType": {
          "type": "string"
        },
        "preview": {
          "type": "boolean"
        },
        "releaseNotes": {
          "type": "string"
        },
        "runsOn": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "satisfies": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serverOwned": {
          "type": "boolean"
        },
        "sourceDefinitions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSourceDefinition"
          }
        },
        "sourceLocation": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/TaskVersion"
        },
        "visibility": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TaskDefinitionEndpoint": {
      "description": "",
      "type": "object",
      "properties": {
        "connectionId": {
          "description": "An ID that identifies a service connection to be used for authenticating endpoint requests.",
          "type": "string"
        },
        "keySelector": {
          "description": "An Json based keyselector to filter response returned by fetching the endpoint Url.A Json based keyselector must be prefixed with \"jsonpath:\". KeySelector can be used to specify the filter to get the keys for the values specified with Selector.  The following keyselector defines an Json for extracting nodes named 'ServiceName'.  endpoint.KeySelector = \"jsonpath://ServiceName\";",
          "type": "string"
        },
        "scope": {
          "description": "The scope as understood by Connected Services. Essentialy, a project-id for now.",
          "type": "string"
        },
        "selector": {
          "description": "An XPath/Json based selector to filter response returned by fetching the endpoint Url. An XPath based selector must be prefixed with the string \"xpath:\". A Json based selector must be prefixed with \"jsonpath:\".  The following selector defines an XPath for extracting nodes named 'ServiceName'.  endpoint.Selector = \"xpath://ServiceName\";",
          "type": "string"
        },
        "taskId": {
          "description": "TaskId that this endpoint belongs to.",
          "type": "string"
        },
        "url": {
          "description": "URL to GET.",
          "type": "string"
        }
      }
    },
    "TaskDefinitionReference": {
      "description": "",
      "type": "object",
      "properties": {
        "definitionType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "versionSpec": {
          "type": "string"
        }
      }
    },
    "TaskEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobEvent"
        }
      ],
      "properties": {
        "taskId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TaskExecution": {
      "description": "",
      "type": "object",
      "properties": {
        "execTask": {
          "description": "The utility task to run.  Specifying this means that this task definition is simply a meta task to call another task. This is useful for tasks that call utility tasks like powershell and commandline",
          "$ref": "#/definitions/TaskReference"
        },
        "platformInstructions": {
          "description": "If a task is going to run code, then this provides the type/script etc... information by platform. For example, it might look like. net45: { typeName: \"Microsoft.TeamFoundation.Automation.Tasks.PowerShellTask\", assemblyName: \"Microsoft.TeamFoundation.Automation.Tasks.PowerShell.dll\" } net20: { typeName: \"Microsoft.TeamFoundation.Automation.Tasks.PowerShellTask\", assemblyName: \"Microsoft.TeamFoundation.Automation.Tasks.PowerShell.dll\" } java: { jar: \"powershelltask.tasks.automation.teamfoundation.microsoft.com\", } node: { script: \"powershellhost.js\", }",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "TaskGroup": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskDefinition"
        }
      ],
      "properties": {
        "comment": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "type": "string"
        },
        "parentDefinitionId": {
          "type": "string",
          "format": "uuid"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "tasks": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskGroupStep"
          }
        }
      }
    },
    "TaskGroupDefinition": {
      "description": "",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "isExpanded": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "visibleRule": {
          "type": "string"
        }
      }
    },
    "TaskGroupRevision": {
      "description": "",
      "type": "object",
      "properties": {
        "changedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "changedDate": {
          "type": "string",
          "format": "date-time"
        },
        "changeType": {
          "enum": [
            "add",
            "update",
            "delete"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.Enums.AuditAction"
          }
        },
        "comment": {
          "type": "string"
        },
        "fileId": {
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "taskGroupId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TaskGroupStep": {
      "description": "",
      "type": "object",
      "properties": {
        "alwaysRun": {
          "type": "boolean"
        },
        "continueOnError": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "task": {
          "$ref": "#/definitions/TaskDefinitionReference"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskHubLicenseDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "enterpriseUsersCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "freeLicenseCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "hasLicenseCountEverUpdated": {
          "readOnly": true,
          "type": "boolean"
        },
        "hostedAgentMinutesFreeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "hostedAgentMinutesUsedCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "msdnUsersCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "purchasedHostedLicenseCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "purchasedLicenseCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "totalLicenseCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskInputDefinition": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskInputDefinitionBase"
        }
      ],
      "properties": {
      }
    },
    "TaskInputDefinitionBase": {
      "description": "",
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "helpMarkDown": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "visibleRule": {
          "type": "string"
        }
      }
    },
    "TaskInstance": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskReference"
        }
      ],
      "properties": {
        "alwaysRun": {
          "type": "boolean"
        },
        "condition": {
          "type": "string"
        },
        "continueOnError": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "environment": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "instanceId": {
          "type": "string",
          "format": "uuid"
        },
        "refName": {
          "type": "string"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskLog": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskLogReference"
        }
      ],
      "properties": {
        "createdOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "indexLocation": {
          "type": "string"
        },
        "lastChangedOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "lineCount": {
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "TaskLogReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "TaskOrchestrationContainer": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskOrchestrationItem"
        }
      ],
      "properties": {
        "children": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOrchestrationItem"
          }
        },
        "continueOnError": {
          "type": "boolean"
        },
        "data": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "maxConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "parallel": {
          "type": "boolean"
        },
        "rollback": {
          "$ref": "#/definitions/TaskOrchestrationContainer"
        }
      }
    },
    "TaskOrchestrationItem": {
      "description": "",
      "type": "object",
      "properties": {
        "itemType": {
          "readOnly": true,
          "enum": [
            "container",
            "job"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskOrchestrationItemType"
          }
        }
      }
    },
    "TaskOrchestrationJob": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskOrchestrationItem"
        }
      ],
      "properties": {
        "demands": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Demand"
          }
        },
        "executeAs": {
          "$ref": "#/definitions/IdentityRef"
        },
        "executionMode": {
          "type": "string"
        },
        "executionTimeout": {
          "type": "string",
          "format": "TimeSpan"
        },
        "instanceId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "refName": {
          "type": "string"
        },
        "tasks": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskInstance"
          }
        },
        "variables": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TaskOrchestrationOwner": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TaskOrchestrationPlan": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskOrchestrationPlanReference"
        }
      ],
      "properties": {
        "environment": {
          "$ref": "#/definitions/PlanEnvironment"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "implementation": {
          "$ref": "#/definitions/TaskOrchestrationContainer"
        },
        "planGroup": {
          "type": "string"
        },
        "requestedById": {
          "type": "string",
          "format": "uuid"
        },
        "requestedForId": {
          "type": "string",
          "format": "uuid"
        },
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult"
          }
        },
        "resultCode": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "enum": [
            "inProgress",
            "queued",
            "completed"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskOrchestrationPlanState"
          }
        },
        "timeline": {
          "$ref": "#/definitions/TimelineReference"
        }
      }
    },
    "TaskOrchestrationPlanGroupsQueueMetrics": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "enum": [
            "running",
            "queued",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.PlanGroupStatus"
          }
        }
      }
    },
    "TaskOrchestrationPlanReference": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactLocation": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        },
        "planType": {
          "type": "string"
        },
        "scopeIdentifier": {
          "type": "string",
          "format": "uuid"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskOrchestrationQueuedPlan": {
      "description": "",
      "type": "object",
      "properties": {
        "assignTime": {
          "type": "string",
          "format": "date-time"
        },
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planGroup": {
          "type": "string"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        },
        "poolId": {
          "type": "integer",
          "format": "int32"
        },
        "queuePosition": {
          "type": "integer",
          "format": "int32"
        },
        "queueTime": {
          "type": "string",
          "format": "date-time"
        },
        "scopeIdentifier": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TaskOrchestrationQueuedPlanGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planGroup": {
          "readOnly": true,
          "type": "string"
        },
        "plans": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOrchestrationQueuedPlan"
          }
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "queuePosition": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskOutputVariable": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TaskPackageMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "type": {
          "description": "Gets the name of the package.",
          "readOnly": true,
          "type": "string"
        },
        "url": {
          "description": "Gets the url of the package.",
          "readOnly": true,
          "type": "string"
        },
        "version": {
          "description": "Gets the version of the package.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TaskReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "inputs": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "TaskSourceDefinition": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskSourceDefinitionBase"
        }
      ],
      "properties": {
      }
    },
    "TaskSourceDefinitionBase": {
      "description": "",
      "type": "object",
      "properties": {
        "authKey": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "keySelector": {
          "type": "string"
        },
        "selector": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "TaskStartedEvent": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskEvent"
        }
      ],
      "properties": {
      }
    },
    "TaskVersion": {
      "description": "",
      "type": "object",
      "properties": {
        "isTest": {
          "type": "boolean"
        },
        "major": {
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Timeline": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TimelineReference"
        }
      ],
      "properties": {
        "lastChangedBy": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "lastChangedOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "records": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineRecord"
          }
        }
      }
    },
    "TimelineRecord": {
      "description": "",
      "type": "object",
      "properties": {
        "changeId": {
          "type": "integer",
          "format": "int32"
        },
        "currentOperation": {
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/TimelineReference"
        },
        "errorCount": {
          "type": "integer",
          "format": "int32"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "issues": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "location": {
          "type": "string"
        },
        "log": {
          "$ref": "#/definitions/TaskLogReference"
        },
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "string",
          "format": "uuid"
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "refName": {
          "type": "string"
        },
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult"
          }
        },
        "resultCode": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "enum": [
            "pending",
            "inProgress",
            "completed"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TimelineRecordState"
          }
        },
        "task": {
          "$ref": "#/definitions/TaskReference"
        },
        "type": {
          "type": "string"
        },
        "variables": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableValue"
          }
        },
        "warningCount": {
          "type": "integer",
          "format": "int32"
        },
        "workerName": {
          "type": "string"
        }
      }
    },
    "TimelineReference": {
      "description": "",
      "type": "object",
      "properties": {
        "changeId": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "VariableGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "createdBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "providerData": {
          "$ref": "#/definitions/VariableGroupProviderData"
        },
        "type": {
          "type": "string"
        },
        "variables": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableValue"
          }
        }
      }
    },
    "VariableGroupProviderData": {
      "description": "",
      "type": "object",
      "properties": {
      }
    },
    "VariableValue": {
      "description": "",
      "type": "object",
      "properties": {
        "isSecret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.0-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.agentpools": "Grants the ability to view tasks, pools, queues, agents, and currently running or recently completed jobs for agents",
        "vso.agentpools_manage": "Grants the ability to manage pools, queues, and agents",
        "vso.serviceendpoint_manage": "Grants the ability to read, query and manage service endpoints.",
        "vso.serviceendpoint": "Grants the ability to read service endpoints.",
        "vso.serviceendpoint_query": "Grants the ability to read and query service endpoints.",
        "vso.taskgroups": "Grants the ability to read task groups",
        "vso.taskgroups_manage": "Grants the ability to read, create and manage taskgroups.",
        "vso.taskgroups_add": "Grants the ability to read and create task groups"
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}