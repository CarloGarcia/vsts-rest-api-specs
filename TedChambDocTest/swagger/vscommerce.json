{
  "swagger": "2.0",
  "info": {
    "title": "Commerce",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "offerMeter"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/commerce/offermeter": {
      "post": {
        "tags": [
          "offerMeter"
        ],
        "summary": "CreateOfferMeterDefinition",
        "description": "",
        "operationId": "createOfferMeterDefinition",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferMeter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "offerMeter"
        ],
        "summary": "GetOfferMeters",
        "description": "",
        "operationId": "getOfferMeters",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfferMeter"
              }
            }
          }
        }
      }
    },
    "/_apis/commerce/offermeter/{resourceName}": {
      "get": {
        "tags": [
          "offerMeter"
        ],
        "summary": "GetOfferMeter",
        "description": "Returns resource information like status, committed quantity, included quantity, reset date, etc.",
        "operationId": "getOfferMeter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceNameResolveMethod",
            "description": "Method of how to retreive the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OfferMeter"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "OfferMeter": {
      "type": "object",
      "properties": {
        "absoluteMaximumQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentModel": {
          "type": "string",
          "format": "OfferMeterAssignmentModel"
        },
        "billingEntity": {
          "type": "string",
          "format": "BillingProvider"
        },
        "billingMode": {
          "type": "string",
          "format": "ResourceBillingMode"
        },
        "billingStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "billingState": {
          "type": "string",
          "format": "MeterBillingState"
        },
        "category": {
          "type": "string",
          "format": "MeterCategory"
        },
        "committedQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "currentQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "fixedQuantityPlans": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "AzureOfferPlanDefinition"
          }
        },
        "galleryId": {
          "type": "string"
        },
        "includedInLicenseLevel": {
          "type": "string",
          "format": "MinimumRequiredServiceLevel"
        },
        "includedQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "isFirstParty": {
          "type": "boolean"
        },
        "maximumQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "meterId": {
          "type": "integer",
          "format": "int32"
        },
        "minimumRequiredAccessLevel": {
          "type": "string",
          "format": "MinimumRequiredServiceLevel"
        },
        "name": {
          "type": "string"
        },
        "offerScope": {
          "type": "string",
          "format": "OfferScope"
        },
        "platformMeterId": {
          "type": "string",
          "format": "uuid"
        },
        "previewGraceDays": {
          "type": "string",
          "format": "byte"
        },
        "renewalFrequency": {
          "type": "string",
          "format": "MeterRenewalFrequecy"
        },
        "status": {
          "type": "string",
          "format": "MeterState"
        },
        "trialCycles": {
          "type": "integer",
          "format": "int32"
        },
        "trialDays": {
          "type": "string",
          "format": "byte"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "PurchasableOfferMeter": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "estimatedRenewalDate": {
          "type": "string",
          "format": "date-time"
        },
        "localeCode": {
          "type": "string"
        },
        "meterPricing": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "offerMeterDefinition": {
          "$ref": "#/definitions/OfferMeter"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}