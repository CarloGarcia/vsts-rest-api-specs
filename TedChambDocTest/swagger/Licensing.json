{
  "swagger": "2.0",
  "info": {
    "title": "Licensing",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.2"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "accountAssignedExtensions"
    },
    {
      "name": "certificate"
    },
    {
      "name": "clientRights"
    },
    {
      "name": "entitlements"
    },
    {
      "name": "entitlementsBatch"
    },
    {
      "name": "extensionEntitlements"
    },
    {
      "name": "extensionEntitlementsBatch"
    },
    {
      "name": "extensionRegistration"
    },
    {
      "name": "extensionRights"
    },
    {
      "name": "msdn"
    },
    {
      "name": "usage"
    },
    {
      "name": "usageRights"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/licensing/accountassignedextensions": {
      "get": {
        "tags": [
          "accountAssignedExtensions"
        ],
        "summary": "GetExtensionLicenseUsage",
        "description": "",
        "operationId": "getExtensionLicenseUsage",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountLicenseExtensionUsage"
              }
            }
          }
        }
      }
    },
    "/_apis/licensing/certificate": {
      "get": {
        "tags": [
          "certificate"
        ],
        "summary": "GetCertificate",
        "description": "",
        "operationId": "getCertificate",
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    },
    "/_apis/licensing/clientrights/{rightName}": {
      "get": {
        "tags": [
          "clientRights"
        ],
        "summary": "GetClientRights",
        "description": "",
        "operationId": "getClientRights",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rightName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productVersion",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "edition",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "relType",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeCertificate",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "canary",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "machineId",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ClientRightsContainer"
            }
          }
        }
      }
    },
    "/_apis/licensing/entitlements": {
      "get": {
        "tags": [
          "entitlements"
        ],
        "summary": "GetAccountEntitlements",
        "description": "",
        "operationId": "getAccountEntitlements",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountEntitlement"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.entitlements"
            ]
          }
        ]
      }
    },
    "/_apis/licensing/entitlements/{userId}": {
      "put": {
        "tags": [
          "entitlements"
        ],
        "summary": "AssignAccountEntitlementForUser",
        "description": "Assign an explicit account entitlement",
        "operationId": "assignAccountEntitlementForUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The update model for the entitlement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountEntitlementUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "description": "The id of the user",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccountEntitlement"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "entitlements"
        ],
        "summary": "DeleteUserEntitlements",
        "description": "",
        "operationId": "deleteUserEntitlements",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "entitlements"
        ],
        "summary": "GetAccountEntitlementForUser",
        "description": "Get the entitlements for a user",
        "operationId": "getAccountEntitlementForUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The id of the user",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "determineRights",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccountEntitlement"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.entitlements"
            ]
          }
        ]
      }
    },
    "/_apis/licensing/entitlements/me": {
      "post": {
        "tags": [
          "entitlements"
        ],
        "summary": "AssignAvailableAccountEntitlement",
        "description": "Assign an available entitilement to a user",
        "operationId": "assignAvailableAccountEntitlement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "The user to which to assign the entitilement",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccountEntitlement"
            }
          }
        }
      },
      "get": {
        "tags": [
          "entitlements"
        ],
        "summary": "GetAccountEntitlement",
        "description": "",
        "operationId": "getAccountEntitlement",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccountEntitlement"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.entitlements"
            ]
          }
        ]
      }
    },
    "/_apis/licensing/entitlementsbatch/getavailableusersentitlements": {
      "post": {
        "tags": [
          "entitlementsBatch"
        ],
        "summary": "ObtainAvailableAccountEntitlements",
        "description": "Returns AccountEntitlements that are currently assigned to the given list of users in the account",
        "operationId": "obtainAvailableAccountEntitlements",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user Ids.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountEntitlement"
              }
            }
          }
        }
      }
    },
    "/_apis/licensing/entitlementsbatch/getusersentitlements": {
      "post": {
        "tags": [
          "entitlementsBatch"
        ],
        "summary": "GetAccountEntitlements",
        "description": "Returns AccountEntitlements that are currently assigned to the given list of users in the account",
        "operationId": "getAccountEntitlements",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user Ids.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountEntitlement"
              }
            }
          }
        }
      }
    },
    "/_apis/licensing/extensionentitlements": {
      "put": {
        "tags": [
          "extensionEntitlements"
        ],
        "summary": "AssignExtensionToUsers",
        "description": "Assigns the access to the given extension for a given list of users",
        "operationId": "assignExtensionToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The extension assignment details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtensionOperationResult"
              }
            }
          }
        }
      }
    },
    "/_apis/licensing/extensionentitlements/{userId}": {
      "get": {
        "tags": [
          "extensionEntitlements"
        ],
        "summary": "GetExtensionsAssignedToUser",
        "description": "Returns extensions that are currently assigned to the user in the account",
        "operationId": "getExtensionsAssignedToUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user's identity id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/_apis/licensing/extensionentitlements/all/{extensionId}": {
      "put": {
        "tags": [
          "extensionEntitlements"
        ],
        "summary": "AssignExtensionToAllEligibleUsers",
        "description": "Assigns the access to the given extension for all eligible users in the account that do not already have access to the extension though bundle or account assignment",
        "operationId": "assignExtensionToAllEligibleUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "extensionId",
            "description": "The extension id to assign the access to.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtensionOperationResult"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "extensionEntitlements"
        ],
        "summary": "GetEligibleUsersForExtension",
        "description": "Returns users that are currently eligible to assign the extension to. the list is filtered based on the value of ExtensionFilterOptions",
        "operationId": "getEligibleUsersForExtension",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "extensionId",
            "description": "The extension to check the eligibility of the users for.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "options",
            "description": "The options to filter the list.",
            "required": true,
            "type": "string",
            "format": "ExtensionFilterOptions"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      }
    },
    "/_apis/licensing/extensionentitlementsbatch": {
      "put": {
        "tags": [
          "extensionEntitlementsBatch"
        ],
        "summary": "BulkGetExtensionsAssignedToUsers",
        "description": "Returns extensions that are currrently assigned to the users that are in the account",
        "operationId": "bulkGetExtensionsAssignedToUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array"
              }
            }
          }
        }
      }
    },
    "/_apis/licensing/extensionregistration": {
      "post": {
        "tags": [
          "extensionRegistration"
        ],
        "summary": "RegisterExtensionLicense",
        "description": "",
        "operationId": "registerExtensionLicense",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionLicenseData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/_apis/licensing/extensionregistration/{extensionId}": {
      "get": {
        "tags": [
          "extensionRegistration"
        ],
        "summary": "GetExtensionLicenseData",
        "description": "",
        "operationId": "getExtensionLicenseData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "extensionId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExtensionLicenseData"
            }
          }
        }
      }
    },
    "/_apis/licensing/extensionrights": {
      "post": {
        "tags": [
          "extensionRights"
        ],
        "summary": "ComputeExtensionRights",
        "description": "",
        "operationId": "computeExtensionRights",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "extensionRights"
        ],
        "summary": "GetExtensionRights",
        "description": "",
        "operationId": "getExtensionRights",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExtensionRightsResult"
            }
          }
        }
      }
    },
    "/_apis/licensing/msdn/entitlements/me": {
      "get": {
        "tags": [
          "msdn"
        ],
        "summary": "GetEntitlements",
        "description": "",
        "operationId": "getEntitlements",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MsdnEntitlement"
              }
            }
          }
        }
      }
    },
    "/_apis/licensing/msdn/me": {
      "get": {
        "tags": [
          "msdn"
        ],
        "summary": "GetMsdnPresence",
        "description": "",
        "operationId": "getMsdnPresence",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/licensing/usage": {
      "get": {
        "tags": [
          "usage"
        ],
        "summary": "GetAccountLicensesUsage",
        "description": "",
        "operationId": "getAccountLicensesUsage",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountLicenseUsage"
              }
            }
          }
        }
      }
    },
    "/_apis/licensing/usagerights/{rightName}": {
      "get": {
        "tags": [
          "usageRights"
        ],
        "summary": "GetUsageRights",
        "description": "",
        "operationId": "getUsageRights",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "rightName",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IUsageRight"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountEntitlement": {
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Gets or sets the id of the account to which the license belongs",
          "type": "string",
          "format": "uuid"
        },
        "assignmentDate": {
          "description": "Gets or sets the date the license was assigned",
          "type": "string",
          "format": "date-time"
        },
        "lastAccessedDate": {
          "description": "Gets or sets the date of the user last sign-in to this account",
          "type": "string",
          "format": "date-time"
        },
        "license": {
          "$ref": "#/definitions/License"
        },
        "rights": {
          "description": "The computed rights of this user in the account.",
          "$ref": "#/definitions/AccountRights"
        },
        "status": {
          "description": "The status of the user in the account",
          "enum": [
            "none",
            "active",
            "disabled",
            "deleted",
            "pending",
            "expired",
            "pendingDisabled"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Account.AccountUserStatus"
          }
        },
        "user": {
          "description": "Identity information of the user to which the license belongs",
          "$ref": "#/definitions/IdentityRef"
        },
        "userId": {
          "description": "Gets the id of the user to which the license belongs",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "AccountEntitlementUpdateModel": {
      "type": "object",
      "properties": {
        "license": {
          "description": "Gets or sets the license for the entitlement",
          "$ref": "#/definitions/License"
        }
      }
    },
    "AccountLicenseExtensionUsage": {
      "type": "object",
      "properties": {
        "extensionId": {
          "type": "string"
        },
        "extensionName": {
          "type": "string"
        },
        "includedQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "msdnUsedCount": {
          "type": "integer",
          "format": "int32"
        },
        "provisionedCount": {
          "type": "integer",
          "format": "int32"
        },
        "usedCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountLicenseUsage": {
      "type": "object",
      "properties": {
        "license": {
          "$ref": "#/definitions/AccountUserLicense"
        },
        "provisionedCount": {
          "type": "integer",
          "format": "int32"
        },
        "usedCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountRights": {
      "type": "object",
      "properties": {
        "level": {
          "enum": [
            "none",
            "express",
            "advanced",
            "advancedPlus",
            "stakeholder"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel"
          }
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "AccountUserLicense": {
      "type": "object",
      "properties": {
        "license": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "enum": [
            "none",
            "account",
            "msdn",
            "profile",
            "auto",
            "trial"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.LicensingSource"
          }
        }
      }
    },
    "ClientRightsContainer": {
      "type": "object",
      "properties": {
        "certificateBytes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "token": {
          "type": "string"
        }
      }
    },
    "ExtensionAssignment": {
      "type": "object",
      "properties": {
        "extensionGalleryId": {
          "description": "Gets or sets the extension ID to assign.",
          "type": "string"
        },
        "licensingSource": {
          "description": "Gets or sets the licensing source.",
          "enum": [
            "none",
            "account",
            "msdn",
            "profile",
            "auto",
            "trial"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.LicensingSource"
          }
        },
        "userIds": {
          "description": "Gets or sets the user IDs to assign the extension to.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "ExtensionAssignmentDetails": {
      "type": "object",
      "properties": {
        "assignmentStatus": {
          "enum": [
            "notEligible",
            "notAssigned",
            "accountAssignment",
            "bundleAssignment",
            "implicitAssignment",
            "pendingValidation",
            "trialAssignment",
            "roamingAccountAssignment"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.ExtensionAssignmentStatus"
          }
        },
        "sourceCollectionName": {
          "type": "string"
        }
      }
    },
    "ExtensionLicenseData": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "extensionId": {
          "type": "string"
        },
        "isFree": {
          "type": "boolean"
        },
        "minimumRequiredAccessLevel": {
          "enum": [
            "none",
            "express",
            "advanced",
            "advancedPlus",
            "stakeholder"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel"
          }
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ExtensionOperationResult": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "format": "uuid"
        },
        "extensionId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "operation": {
          "enum": [
            "assign",
            "unassign"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.ExtensionOperation"
          }
        },
        "result": {
          "enum": [
            "success",
            "warning",
            "error"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.OperationResult"
          }
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ExtensionRightsResult": {
      "type": "object",
      "properties": {
        "entitledExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostId": {
          "type": "string",
          "format": "uuid"
        },
        "reason": {
          "type": "string"
        },
        "reasonCode": {
          "enum": [
            "normal",
            "featureFlagSet",
            "nullIdentity",
            "serviceIdentity",
            "errorCallingService"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.ExtensionRightsReasonCode"
          }
        },
        "resultCode": {
          "enum": [
            "normal",
            "allFree",
            "freeExtensionsFree"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.ExtensionRightsResultCode"
          }
        }
      }
    },
    "ExtensionSource": {
      "type": "object",
      "properties": {
        "extensionGalleryId": {
          "description": "extension Identifier",
          "type": "string"
        },
        "licensingSource": {
          "description": "The licensing source of the extension. Account, Msdn, ect.",
          "enum": [
            "none",
            "account",
            "msdn",
            "profile",
            "auto",
            "trial"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.LicensingSource"
          }
        }
      }
    },
    "IdentityRef": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "IUsageRight": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Rights data",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "expirationDate": {
          "description": "Rights expiration",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name, uniquely identifying a usage right",
          "type": "string"
        },
        "version": {
          "description": "Version",
          "type": "string"
        }
      }
    },
    "License": {
      "type": "object",
      "properties": {
        "source": {
          "description": "Gets the source of the license",
          "enum": [
            "none",
            "account",
            "msdn",
            "profile",
            "auto",
            "trial"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.LicensingSource"
          }
        }
      }
    },
    "MsdnEntitlement": {
      "type": "object",
      "properties": {
        "entitlementCode": {
          "description": "Entilement id assigned to Entitlement in Benefits Database.",
          "type": "string"
        },
        "entitlementName": {
          "description": "Entitlement Name e.g. Downloads, Chat.",
          "type": "string"
        },
        "entitlementType": {
          "description": "Type of Entitlement e.g. Downloads, Chat.",
          "type": "string"
        },
        "isActivated": {
          "description": "Entitlement activation status",
          "type": "boolean"
        },
        "isEntitlementAvailable": {
          "description": "Entitlement availability",
          "type": "boolean"
        },
        "subscriptionChannel": {
          "description": "Write MSDN Channel into CRCT (Retail,MPN,VL,BizSpark,DreamSpark,MCT,FTE,Technet,WebsiteSpark,Other)",
          "type": "string"
        },
        "subscriptionExpirationDate": {
          "description": "Subscription Expiration Date.",
          "type": "string",
          "format": "date-time"
        },
        "subscriptionId": {
          "description": "Subscription id which identifies the subscription itself. This is the Benefit Detail Guid from BMS.",
          "type": "string"
        },
        "subscriptionLevelCode": {
          "description": "Identifier of the subscription or benefit level.",
          "type": "string"
        },
        "subscriptionLevelName": {
          "description": "Name of subscription level.",
          "type": "string"
        },
        "subscriptionStatus": {
          "description": "Subscription Status Code (ACT, PND, INA ...).",
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.2-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.entitlements": "Provides read only access to VSTS licensing entitlements endpoint to get account entitlements."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}