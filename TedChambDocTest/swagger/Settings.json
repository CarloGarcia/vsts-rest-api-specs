{
  "swagger": "2.0",
  "info": {
    "title": "Settings",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.0"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "entries"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/settings/{scopeName}/{scopeValue}/entries/{userScope}": {
      "patch": {
        "tags": [
          "entries"
        ],
        "summary": "SetEntriesForScope",
        "description": "Set the specified entries for the given named scope",
        "operationId": "setEntriesForScope",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The entries to set",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          {
            "in": "path",
            "name": "userScope",
            "description": "User-Scope at which to set the values. Should be \"me\" for the current user or \"host\" for all users.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "scopeName",
            "description": "Scope at which to set the settings on (e.g. \"project\" or \"team\")",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "scopeValue",
            "description": "Value of the scope (e.g. the project or team id)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/settings/{scopeName}/{scopeValue}/entries/{userScope}/{*key}": {
      "get": {
        "tags": [
          "entries"
        ],
        "summary": "GetEntriesForScope",
        "description": "Get all setting entries for the given named scope",
        "operationId": "getEntriesForScope",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userScope",
            "description": "User-Scope at which to get the value. Should be \"me\" for the current user or \"host\" for all users.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "scopeName",
            "description": "Scope at which to get the setting for (e.g. \"project\" or \"team\")",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "scopeValue",
            "description": "Value of the scope (e.g. the project or team id)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "key",
            "description": "Optional key under which to filter all the entries",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/_apis/settings/{scopeName}/{scopeValue}/entries/{userScope}/{key}": {
      "delete": {
        "tags": [
          "entries"
        ],
        "summary": "RemoveEntriesForScope",
        "description": "Remove the entry or entries under the specified path",
        "operationId": "removeEntriesForScope",
        "parameters": [
          {
            "in": "path",
            "name": "userScope",
            "description": "User-Scope at which to remove the value. Should be \"me\" for the current user or \"host\" for all users.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "scopeName",
            "description": "Scope at which to get the setting for (e.g. \"project\" or \"team\")",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "scopeValue",
            "description": "Value of the scope (e.g. the project or team id)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "key",
            "description": "Root key of the entry or entries to remove",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/settings/entries/{userScope}": {
      "patch": {
        "tags": [
          "entries"
        ],
        "summary": "SetEntries",
        "description": "Set the specified setting entry values for the given user/all-users scope",
        "operationId": "setEntries",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The entries to set",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          {
            "in": "path",
            "name": "userScope",
            "description": "User-Scope at which to set the values. Should be \"me\" for the current user or \"host\" for all users.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/settings/entries/{userScope}/{*key}": {
      "get": {
        "tags": [
          "entries"
        ],
        "summary": "GetEntries",
        "description": "Get all setting entries for the given user/all-users scope",
        "operationId": "getEntries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userScope",
            "description": "User-Scope at which to get the value. Should be \"me\" for the current user or \"host\" for all users.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "key",
            "description": "Optional key under which to filter all the entries",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/_apis/settings/entries/{userScope}/{key}": {
      "delete": {
        "tags": [
          "entries"
        ],
        "summary": "RemoveEntries",
        "description": "Remove the entry or entries under the specified path",
        "operationId": "removeEntries",
        "parameters": [
          {
            "in": "path",
            "name": "userScope",
            "description": "User-Scope at which to remove the value. Should be \"me\" for the current user or \"host\" for all users.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "key",
            "description": "Root key of the entry or entries to remove",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "VssJsonCollectionWrapper": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.0-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}