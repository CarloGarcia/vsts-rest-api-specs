{
  "swagger": "2.0",
  "info": {
    "title": "Organization",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.2"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "collectionProperties"
    },
    {
      "name": "collections"
    },
    {
      "name": "organizationMigrationBlobs"
    },
    {
      "name": "organizationProperties"
    },
    {
      "name": "organizations"
    },
    {
      "name": "regions"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/organization/collections": {
      "post": {
        "tags": [
          "collections"
        ],
        "summary": "CreateCollection",
        "description": "",
        "operationId": "createCollection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          }
        }
      },
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "GetCollections",
        "description": "",
        "operationId": "getCollections",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Collection"
              }
            }
          }
        }
      }
    },
    "/_apis/organization/collections/{collectionId}": {
      "delete": {
        "tags": [
          "collections"
        ],
        "summary": "DeleteCollection",
        "description": "",
        "operationId": "deleteCollection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collectionId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      },
      "get": {
        "tags": [
          "collections"
        ],
        "summary": "GetCollection",
        "description": "",
        "operationId": "getCollection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collectionId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "propertyNames",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "collections"
        ],
        "summary": "RestoreCollection",
        "description": "",
        "operationId": "restoreCollection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collectionId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "collectionName",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/_apis/organization/Collections/{collectionId}/Properties": {
      "patch": {
        "tags": [
          "collectionProperties"
        ],
        "summary": "UpdateCollectionProperties",
        "description": "",
        "operationId": "updateCollectionProperties",
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "collectionId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/_apis/organization/organizationmigrationblobs": {
      "post": {
        "tags": [
          "organizationMigrationBlobs"
        ],
        "summary": "ImportOrganizationMigrationBlob",
        "description": "",
        "operationId": "importOrganizationMigrationBlob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrganizationMigrationBlob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/organization/organizationmigrationblobs/{organizationId}": {
      "get": {
        "tags": [
          "organizationMigrationBlobs"
        ],
        "summary": "ExportOrganizationMigrationBlob",
        "description": "",
        "operationId": "exportOrganizationMigrationBlob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organizationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrganizationMigrationBlob"
            }
          }
        }
      }
    },
    "/_apis/organization/organizations": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "CreateOrganization",
        "description": "",
        "operationId": "createOrganization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        }
      },
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "GetOrganizations",
        "description": "",
        "operationId": "getOrganizations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "searchKind",
            "description": "",
            "required": true,
            "type": "string",
            "format": "OrganizationSearchKind"
          },
          {
            "in": "query",
            "name": "searchValue",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isActivated",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Organization"
              }
            }
          }
        }
      }
    },
    "/_apis/organization/organizations/{organizationId}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "GetOrganization",
        "description": "",
        "operationId": "getOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organizationId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "propertyNames",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organizations"
        ],
        "summary": "UpdateOrganization",
        "description": "",
        "operationId": "updateOrganization",
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        }
      }
    },
    "/_apis/organization/Organizations/{organizationId}/Properties": {
      "patch": {
        "tags": [
          "organizationProperties"
        ],
        "summary": "UpdateOrganizationProperties",
        "description": "",
        "operationId": "updateOrganizationProperties",
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organizationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/_apis/organization/regions": {
      "get": {
        "tags": [
          "regions"
        ],
        "summary": "GetRegions",
        "description": "",
        "operationId": "getRegions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Region"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Collection": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Identifier for a collection under an organization",
          "type": "string",
          "format": "uuid"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "The unqiue name of collection under an organziation",
          "type": "string"
        },
        "owner": {
          "type": "string",
          "format": "uuid"
        },
        "preferredRegion": {
          "type": "string"
        },
        "properties": {
          "description": "Extended properties",
          "$ref": "#/definitions/PropertiesCollection"
        },
        "status": {
          "enum": [
            "unknown",
            "initial",
            "enabled",
            "logicallyDeleted",
            "markedForPhysicalDelete"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Organization.CollectionStatus"
          }
        }
      }
    },
    "JsonPatchDocument": {
      "type": "object",
      "allOf": [
        {
          "type": "array",
          "items": {
          }
        }
      ],
      "properties": {
      }
    },
    "JsonPatchOperation": {
      "type": "object",
      "properties": {
        "from": {
          "description": "The path to copy from for the Move/Copy operation.",
          "type": "string"
        },
        "op": {
          "description": "The patch operation",
          "enum": [
            "add",
            "remove",
            "replace",
            "move",
            "copy",
            "test"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.WebApi.Patch.Operation"
          }
        },
        "path": {
          "description": "The path for the operation",
          "type": "string"
        },
        "value": {
          "description": "The value for the operation. This is either a primitive or a JToken.",
          "type": "object"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Collection"
          }
        },
        "creatorId": {
          "type": "string",
          "format": "uuid"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Identifier for an Organization",
          "type": "string",
          "format": "uuid"
        },
        "isActivated": {
          "type": "boolean"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "primaryCollection": {
          "$ref": "#/definitions/Collection"
        },
        "properties": {
          "description": "Extended properties",
          "$ref": "#/definitions/PropertiesCollection"
        },
        "status": {
          "enum": [
            "unknown",
            "initial",
            "enabled",
            "markedForDelete"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Organization.OrganizationStatus"
          }
        },
        "tenantId": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "enum": [
            "unknown",
            "personal",
            "work"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Organization.OrganizationType"
          }
        }
      }
    },
    "OrganizationMigrationBlob": {
      "type": "object",
      "properties": {
        "blobAsJson": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Policy": {
      "type": "object",
      "properties": {
        "effectiveValue": {
          "type": "object"
        },
        "enforce": {
          "type": "boolean"
        },
        "isValueUndefined": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parentPolicy": {
          "$ref": "#/definitions/Policy"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "PolicyInfo": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "moreInfoLink": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PropertiesCollection": {
      "type": "object",
      "properties": {
        "count": {
          "description": "Implements ICollection<KeyValuePair<String,Object>>.Count/>",
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "object"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Region": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name for the region.",
          "type": "string"
        },
        "name": {
          "description": "Name identifier for the region.",
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.2-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.profile": "Grants the ability to read your profile, accounts, collections, projects, teams, and other top-level organizational artifacts."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}