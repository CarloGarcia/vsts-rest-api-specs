{
  "swagger": "2.0",
  "info": {
    "title": "Work",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.2"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "backlogconfiguration"
    },
    {
      "name": "boardcolumns"
    },
    {
      "name": "boardfiltersettings"
    },
    {
      "name": "boardparents"
    },
    {
      "name": "boardrows"
    },
    {
      "name": "boards"
    },
    {
      "name": "boardusersettings"
    },
    {
      "name": "capacities"
    },
    {
      "name": "cardrulesettings"
    },
    {
      "name": "cardsettings"
    },
    {
      "name": "charts"
    },
    {
      "name": "columns"
    },
    {
      "name": "deliverytimeline"
    },
    {
      "name": "iterations"
    },
    {
      "name": "plans"
    },
    {
      "name": "processconfiguration"
    },
    {
      "name": "rows"
    },
    {
      "name": "teamdaysoff"
    },
    {
      "name": "teamfieldvalues"
    },
    {
      "name": "teamsettings"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/work/boardcolumns": {
      "get": {
        "tags": [
          "boardcolumns"
        ],
        "summary": "GetColumnSuggestedValues",
        "description": "",
        "operationId": "getColumnSuggestedValues",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardSuggestedValue"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/work/boardrows": {
      "get": {
        "tags": [
          "boardrows"
        ],
        "summary": "GetRowSuggestedValues",
        "description": "",
        "operationId": "getRowSuggestedValues",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardSuggestedValue"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/backlogconfiguration": {
      "get": {
        "tags": [
          "backlogconfiguration"
        ],
        "summary": "GetBacklogConfigurations",
        "description": "",
        "operationId": "getBacklogConfigurations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BacklogConfiguration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boardcolumns": {
      "get": {
        "tags": [
          "boardcolumns"
        ],
        "summary": "GetColumnSuggestedValues",
        "description": "",
        "operationId": "getColumnSuggestedValues",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardSuggestedValue"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boardrows": {
      "get": {
        "tags": [
          "boardrows"
        ],
        "summary": "GetRowSuggestedValues",
        "description": "",
        "operationId": "getRowSuggestedValues",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardSuggestedValue"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "GetBoards",
        "description": "",
        "operationId": "getBoards",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/{board}/boardfiltersettings": {
      "get": {
        "tags": [
          "boardfiltersettings"
        ],
        "summary": "GetBoardFilterSettings",
        "description": "Returns the board filter settings for the given board id or board by name",
        "operationId": "getBoardFilterSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardFilterSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "boardfiltersettings"
        ],
        "summary": "UpdateBoardFilterSettings",
        "description": "Update board filter settings for the board id or board by name",
        "operationId": "updateBoardFilterSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardFilterSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardFilterSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/{board}/boardusersettings": {
      "get": {
        "tags": [
          "boardusersettings"
        ],
        "summary": "GetBoardUserSettings",
        "description": "",
        "operationId": "getBoardUserSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardUserSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "boardusersettings"
        ],
        "summary": "UpdateBoardUserSettings",
        "description": "Update board user settings for the board id",
        "operationId": "updateBoardUserSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardUserSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/{board}/cardrulesettings": {
      "get": {
        "tags": [
          "cardrulesettings"
        ],
        "summary": "GetBoardCardRuleSettings",
        "description": "Get board card Rule settings for the board id or board by name",
        "operationId": "getBoardCardRuleSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "cardrulesettings"
        ],
        "summary": "UpdateBoardCardRuleSettings",
        "description": "Update board card Rule settings for the board id or board by name",
        "operationId": "updateBoardCardRuleSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/{board}/cardsettings": {
      "get": {
        "tags": [
          "cardsettings"
        ],
        "summary": "GetBoardCardSettings",
        "description": "Get board card settings for the board id or board by name",
        "operationId": "getBoardCardSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "cardsettings"
        ],
        "summary": "UpdateBoardCardSettings",
        "description": "Update board card settings for the board id or board by name",
        "operationId": "updateBoardCardSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/{board}/charts": {
      "get": {
        "tags": [
          "charts"
        ],
        "summary": "GetBoardCharts",
        "description": "Get board charts",
        "operationId": "getBoardCharts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardChartReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/{board}/charts/{name}": {
      "get": {
        "tags": [
          "charts"
        ],
        "summary": "GetBoardChart",
        "description": "Get a board chart",
        "operationId": "getBoardChart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The chart name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "charts"
        ],
        "summary": "UpdateBoardChart",
        "description": "Update a board chart",
        "operationId": "updateBoardChart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The chart name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/{board}/columns": {
      "get": {
        "tags": [
          "columns"
        ],
        "summary": "GetBoardColumns",
        "description": "",
        "operationId": "getBoardColumns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "columns"
        ],
        "summary": "UpdateBoardColumns",
        "description": "",
        "operationId": "updateBoardColumns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/{board}/rows": {
      "get": {
        "tags": [
          "rows"
        ],
        "summary": "GetBoardRows",
        "description": "",
        "operationId": "getBoardRows",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "rows"
        ],
        "summary": "UpdateBoardRows",
        "description": "",
        "operationId": "updateBoardRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/{id}": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "GetBoard",
        "description": "Get board",
        "operationId": "getBoard",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "boards"
        ],
        "summary": "SetBoardOptions",
        "description": "Update board options",
        "operationId": "setBoardOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "options to updated",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "identifier for board, either category plural name (Eg:\"Stories\") or guid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/boards/boardparents": {
      "get": {
        "tags": [
          "boardparents"
        ],
        "summary": "GetBoardMappingParentItems",
        "description": "Returns the list of parent field filter model for the given list of workitem ids",
        "operationId": "getBoardMappingParentItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "childBacklogContextCategoryRefName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workitemIds",
            "description": "",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParentChildWIMap"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/plans": {
      "post": {
        "tags": [
          "plans"
        ],
        "summary": "CreatePlan",
        "description": "Add a new plan for the team",
        "operationId": "createPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Plan definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePlan"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      },
      "get": {
        "tags": [
          "plans"
        ],
        "summary": "GetPlans",
        "description": "",
        "operationId": "getPlans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/work/plans/{id}": {
      "delete": {
        "tags": [
          "plans"
        ],
        "summary": "DeletePlan",
        "description": "Delete the specified plan",
        "operationId": "deletePlan",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the plan",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "plans"
        ],
        "summary": "GetPlan",
        "description": "Get the information for the specified plan",
        "operationId": "getPlan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the plan",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      },
      "put": {
        "tags": [
          "plans"
        ],
        "summary": "UpdatePlan",
        "description": "Update the information for the specified plan",
        "operationId": "updatePlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Plan definition to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePlan"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the plan",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      }
    },
    "/{project}/_apis/work/plans/{id}/deliverytimeline": {
      "get": {
        "tags": [
          "deliverytimeline"
        ],
        "summary": "GetDeliveryTimelineData",
        "description": "Get Delivery View Data",
        "operationId": "getDeliveryTimelineData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier for delivery view",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "revision",
            "description": "Revision of the plan for which you want data. If the current plan is a different revision you will get an ViewRevisionMismatchException exception. If you do not supply a revision you will get data for the latest revision.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "The start date of timeline",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "The end date of timeline",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeliveryViewData"
            }
          }
        }
      }
    },
    "/{project}/_apis/work/processconfiguration": {
      "get": {
        "tags": [
          "processconfiguration"
        ],
        "summary": "GetProcessConfiguration",
        "description": "",
        "operationId": "getProcessConfiguration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessConfiguration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/teamsettings": {
      "get": {
        "tags": [
          "teamsettings"
        ],
        "summary": "GetTeamSettings",
        "description": "",
        "operationId": "getTeamSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSetting"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "teamsettings"
        ],
        "summary": "UpdateTeamSettings",
        "description": "",
        "operationId": "updateTeamSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSetting"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/teamsettings/iterations": {
      "get": {
        "tags": [
          "iterations"
        ],
        "summary": "GetTeamIterations",
        "description": "",
        "operationId": "getTeamIterations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "timeframe",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamSettingsIteration"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "iterations"
        ],
        "summary": "PostTeamIteration",
        "description": "",
        "operationId": "postTeamIteration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/teamsettings/iterations/{id}": {
      "delete": {
        "tags": [
          "iterations"
        ],
        "summary": "DeleteTeamIteration",
        "description": "",
        "operationId": "deleteTeamIteration",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "iterations"
        ],
        "summary": "GetTeamIteration",
        "description": "",
        "operationId": "getTeamIteration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/teamsettings/iterations/{iterationId}/capacities": {
      "get": {
        "tags": [
          "capacities"
        ],
        "summary": "GetCapacities",
        "description": "",
        "operationId": "getCapacities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacity"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "capacities"
        ],
        "summary": "ReplaceCapacities",
        "description": "",
        "operationId": "replaceCapacities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacity"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacity"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/teamsettings/iterations/{iterationId}/capacities/{teamMemberId}": {
      "get": {
        "tags": [
          "capacities"
        ],
        "summary": "GetCapacity",
        "description": "",
        "operationId": "getCapacity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "teamMemberId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamMemberCapacity"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "capacities"
        ],
        "summary": "UpdateCapacity",
        "description": "",
        "operationId": "updateCapacity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CapacityPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "teamMemberId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamMemberCapacity"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/teamsettings/iterations/{iterationId}/teamdaysoff": {
      "get": {
        "tags": [
          "teamdaysoff"
        ],
        "summary": "GetTeamDaysOff",
        "description": "",
        "operationId": "getTeamDaysOff",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOff"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "teamdaysoff"
        ],
        "summary": "UpdateTeamDaysOff",
        "description": "",
        "operationId": "updateTeamDaysOff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOffPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOff"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/work/teamsettings/teamfieldvalues": {
      "get": {
        "tags": [
          "teamfieldvalues"
        ],
        "summary": "GetTeamFieldValues",
        "description": "",
        "operationId": "getTeamFieldValues",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamFieldValues"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "teamfieldvalues"
        ],
        "summary": "UpdateTeamFieldValues",
        "description": "",
        "operationId": "updateTeamFieldValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamFieldValuesPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamFieldValues"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/backlogconfiguration": {
      "get": {
        "tags": [
          "backlogconfiguration"
        ],
        "summary": "GetBacklogConfigurations",
        "description": "",
        "operationId": "getBacklogConfigurations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BacklogConfiguration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "GetBoards",
        "description": "",
        "operationId": "getBoards",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/{board}/boardfiltersettings": {
      "get": {
        "tags": [
          "boardfiltersettings"
        ],
        "summary": "GetBoardFilterSettings",
        "description": "Returns the board filter settings for the given board id or board by name",
        "operationId": "getBoardFilterSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardFilterSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "boardfiltersettings"
        ],
        "summary": "UpdateBoardFilterSettings",
        "description": "Update board filter settings for the board id or board by name",
        "operationId": "updateBoardFilterSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardFilterSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardFilterSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/{board}/boardusersettings": {
      "get": {
        "tags": [
          "boardusersettings"
        ],
        "summary": "GetBoardUserSettings",
        "description": "",
        "operationId": "getBoardUserSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardUserSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "boardusersettings"
        ],
        "summary": "UpdateBoardUserSettings",
        "description": "Update board user settings for the board id",
        "operationId": "updateBoardUserSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardUserSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/{board}/cardrulesettings": {
      "get": {
        "tags": [
          "cardrulesettings"
        ],
        "summary": "GetBoardCardRuleSettings",
        "description": "Get board card Rule settings for the board id or board by name",
        "operationId": "getBoardCardRuleSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "cardrulesettings"
        ],
        "summary": "UpdateBoardCardRuleSettings",
        "description": "Update board card Rule settings for the board id or board by name",
        "operationId": "updateBoardCardRuleSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/{board}/cardsettings": {
      "get": {
        "tags": [
          "cardsettings"
        ],
        "summary": "GetBoardCardSettings",
        "description": "Get board card settings for the board id or board by name",
        "operationId": "getBoardCardSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "cardsettings"
        ],
        "summary": "UpdateBoardCardSettings",
        "description": "Update board card settings for the board id or board by name",
        "operationId": "updateBoardCardSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/{board}/charts": {
      "get": {
        "tags": [
          "charts"
        ],
        "summary": "GetBoardCharts",
        "description": "Get board charts",
        "operationId": "getBoardCharts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardChartReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/{board}/charts/{name}": {
      "get": {
        "tags": [
          "charts"
        ],
        "summary": "GetBoardChart",
        "description": "Get a board chart",
        "operationId": "getBoardChart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The chart name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "charts"
        ],
        "summary": "UpdateBoardChart",
        "description": "Update a board chart",
        "operationId": "updateBoardChart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The chart name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/{board}/columns": {
      "get": {
        "tags": [
          "columns"
        ],
        "summary": "GetBoardColumns",
        "description": "",
        "operationId": "getBoardColumns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "columns"
        ],
        "summary": "UpdateBoardColumns",
        "description": "",
        "operationId": "updateBoardColumns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/{board}/rows": {
      "get": {
        "tags": [
          "rows"
        ],
        "summary": "GetBoardRows",
        "description": "",
        "operationId": "getBoardRows",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "rows"
        ],
        "summary": "UpdateBoardRows",
        "description": "",
        "operationId": "updateBoardRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "board",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/{id}": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "GetBoard",
        "description": "Get board",
        "operationId": "getBoard",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "boards"
        ],
        "summary": "SetBoardOptions",
        "description": "Update board options",
        "operationId": "setBoardOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "options to updated",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "identifier for board, either category plural name (Eg:\"Stories\") or guid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/boards/boardparents": {
      "get": {
        "tags": [
          "boardparents"
        ],
        "summary": "GetBoardMappingParentItems",
        "description": "Returns the list of parent field filter model for the given list of workitem ids",
        "operationId": "getBoardMappingParentItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "childBacklogContextCategoryRefName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workitemIds",
            "description": "",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParentChildWIMap"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/plans": {
      "post": {
        "tags": [
          "plans"
        ],
        "summary": "CreatePlan",
        "description": "Add a new plan for the team",
        "operationId": "createPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Plan definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePlan"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      },
      "get": {
        "tags": [
          "plans"
        ],
        "summary": "GetPlans",
        "description": "",
        "operationId": "getPlans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        }
      }
    },
    "/{project}/{team}/_apis/work/plans/{id}": {
      "delete": {
        "tags": [
          "plans"
        ],
        "summary": "DeletePlan",
        "description": "Delete the specified plan",
        "operationId": "deletePlan",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the plan",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "plans"
        ],
        "summary": "GetPlan",
        "description": "Get the information for the specified plan",
        "operationId": "getPlan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the plan",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      },
      "put": {
        "tags": [
          "plans"
        ],
        "summary": "UpdatePlan",
        "description": "Update the information for the specified plan",
        "operationId": "updatePlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Plan definition to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePlan"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier of the plan",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      }
    },
    "/{project}/{team}/_apis/work/plans/{id}/deliverytimeline": {
      "get": {
        "tags": [
          "deliverytimeline"
        ],
        "summary": "GetDeliveryTimelineData",
        "description": "Get Delivery View Data",
        "operationId": "getDeliveryTimelineData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Identifier for delivery view",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "revision",
            "description": "Revision of the plan for which you want data. If the current plan is a different revision you will get an ViewRevisionMismatchException exception. If you do not supply a revision you will get data for the latest revision.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "The start date of timeline",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "The end date of timeline",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeliveryViewData"
            }
          }
        }
      }
    },
    "/{project}/{team}/_apis/work/teamsettings": {
      "get": {
        "tags": [
          "teamsettings"
        ],
        "summary": "GetTeamSettings",
        "description": "",
        "operationId": "getTeamSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSetting"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "teamsettings"
        ],
        "summary": "UpdateTeamSettings",
        "description": "",
        "operationId": "updateTeamSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSetting"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/teamsettings/iterations": {
      "get": {
        "tags": [
          "iterations"
        ],
        "summary": "GetTeamIterations",
        "description": "",
        "operationId": "getTeamIterations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "timeframe",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamSettingsIteration"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "iterations"
        ],
        "summary": "PostTeamIteration",
        "description": "",
        "operationId": "postTeamIteration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/teamsettings/iterations/{id}": {
      "delete": {
        "tags": [
          "iterations"
        ],
        "summary": "DeleteTeamIteration",
        "description": "",
        "operationId": "deleteTeamIteration",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "iterations"
        ],
        "summary": "GetTeamIteration",
        "description": "",
        "operationId": "getTeamIteration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities": {
      "get": {
        "tags": [
          "capacities"
        ],
        "summary": "GetCapacities",
        "description": "",
        "operationId": "getCapacities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacity"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "capacities"
        ],
        "summary": "ReplaceCapacities",
        "description": "",
        "operationId": "replaceCapacities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacity"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacity"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities/{teamMemberId}": {
      "get": {
        "tags": [
          "capacities"
        ],
        "summary": "GetCapacity",
        "description": "",
        "operationId": "getCapacity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "teamMemberId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamMemberCapacity"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "capacities"
        ],
        "summary": "UpdateCapacity",
        "description": "",
        "operationId": "updateCapacity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CapacityPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "teamMemberId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamMemberCapacity"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/teamdaysoff": {
      "get": {
        "tags": [
          "teamdaysoff"
        ],
        "summary": "GetTeamDaysOff",
        "description": "",
        "operationId": "getTeamDaysOff",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOff"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "teamdaysoff"
        ],
        "summary": "UpdateTeamDaysOff",
        "description": "",
        "operationId": "updateTeamDaysOff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOffPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOff"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/work/teamsettings/teamfieldvalues": {
      "get": {
        "tags": [
          "teamfieldvalues"
        ],
        "summary": "GetTeamFieldValues",
        "description": "",
        "operationId": "getTeamFieldValues",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamFieldValues"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "teamfieldvalues"
        ],
        "summary": "UpdateTeamFieldValues",
        "description": "",
        "operationId": "updateTeamFieldValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamFieldValuesPatch"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamFieldValues"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Activity": {
      "type": "object",
      "properties": {
        "capacityPerDay": {
          "type": "string",
          "format": "Single"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "attribute": {
      "type": "object",
      "allOf": [
        {
          "type": "object"
        }
      ],
      "properties": {
      }
    },
    "BacklogColumn": {
      "type": "object",
      "properties": {
        "columnFieldReference": {
          "$ref": "#/definitions/WorkItemFieldReference"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BacklogConfiguration": {
      "type": "object",
      "properties": {
        "backlogFields": {
          "description": "Behavior/type field mapping",
          "$ref": "#/definitions/BacklogFields"
        },
        "bugsBehavior": {
          "description": "Bugs behavior",
          "enum": [
            "off",
            "asRequirements",
            "asTasks"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.BugsBehavior"
          }
        },
        "hiddenBacklogs": {
          "description": "Hidden Backlog",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "portfolioBacklogs": {
          "description": "Portfolio backlog descriptors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BacklogLevelConfiguration"
          }
        },
        "requirementBacklog": {
          "description": "Requirement backlog",
          "$ref": "#/definitions/BacklogLevelConfiguration"
        },
        "taskBacklog": {
          "description": "Task backlog",
          "$ref": "#/definitions/BacklogLevelConfiguration"
        },
        "url": {
          "type": "string"
        },
        "workItemTypeMappedStates": {
          "description": "Mapped states for work item types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeStateInfo"
          }
        }
      }
    },
    "BacklogFields": {
      "type": "object",
      "properties": {
        "typeFields": {
          "description": "Field Type (e.g. Order, Activity) to Field Reference Name map",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BacklogLevel": {
      "type": "object",
      "properties": {
        "categoryReferenceName": {
          "description": "Reference name of the corresponding WIT category",
          "type": "string"
        },
        "pluralName": {
          "description": "Plural name for the backlog level",
          "type": "string"
        },
        "workItemStates": {
          "description": "Collection of work item states that are included in the plan. The server will filter to only these work item types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workItemTypes": {
          "description": "Collection of valid workitem type names for the given backlog level",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BacklogLevelConfiguration": {
      "type": "object",
      "properties": {
        "addPanelFields": {
          "description": "List of fields to include in Add Panel",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "color": {
          "description": "Color for the backlog level",
          "type": "string"
        },
        "columnFields": {
          "description": "Default list of columns for the backlog",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BacklogColumn"
          }
        },
        "defaultWorkItemType": {
          "description": "Defaulst Work Item Type for the backlog",
          "$ref": "#/definitions/WorkItemTypeReference"
        },
        "id": {
          "description": "Backlog Id (for Legacy Backlog Level from process config it can be categoryref name)",
          "type": "string"
        },
        "name": {
          "description": "Backlog Name",
          "type": "string"
        },
        "rank": {
          "description": "Backlog Rank (Taskbacklog is 0)",
          "type": "integer",
          "format": "int32"
        },
        "workItemCountLimit": {
          "description": "Max number of work items to show in the given backlog",
          "type": "integer",
          "format": "int32"
        },
        "workItemTypes": {
          "description": "Work Item types participating in this backlog as known by the project/Process, can be overridden by team settings for bugs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeReference"
          }
        }
      }
    },
    "Board": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BoardReference"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "allowedMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "canEdit": {
          "type": "boolean"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardColumn"
          }
        },
        "fields": {
          "$ref": "#/definitions/BoardFields"
        },
        "isValid": {
          "type": "boolean"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardRow"
          }
        }
      }
    },
    "BoardCardRuleSettings": {
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "rules": {
          "type": "object",
          "additionalProperties": {
            "type": "array"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "BoardCardSettings": {
      "type": "object",
      "properties": {
        "cards": {
          "type": "object",
          "additionalProperties": {
            "type": "array"
          }
        }
      }
    },
    "BoardChart": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BoardChartReference"
        }
      ],
      "properties": {
        "_links": {
          "description": "The links for the resource",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "settings": {
          "description": "The settings for the resource",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "BoardChartReference": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "BoardColumn": {
      "type": "object",
      "properties": {
        "columnType": {
          "enum": [
            "incoming",
            "inProgress",
            "outgoing"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.BoardColumnType"
          }
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isSplit": {
          "type": "boolean"
        },
        "itemLimit": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "stateMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BoardFields": {
      "type": "object",
      "properties": {
        "columnField": {
          "$ref": "#/definitions/FieldReference"
        },
        "doneField": {
          "$ref": "#/definitions/FieldReference"
        },
        "rowField": {
          "$ref": "#/definitions/FieldReference"
        }
      }
    },
    "BoardFilterSettings": {
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/FilterModel"
        },
        "parentWorkItemIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "queryText": {
          "type": "string"
        }
      }
    },
    "BoardReference": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "BoardRow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "BoardSuggestedValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "BoardUserSettings": {
      "type": "object",
      "properties": {
        "autoRefreshState": {
          "type": "boolean"
        }
      }
    },
    "CapacityPatch": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "daysOff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "CardFieldSettings": {
      "type": "object",
      "properties": {
        "additionalFields": {
          "description": "A collection of field information of additional fields on cards. The index in the collection signifies the order of the field among the additional fields. Currently unused. Should be used with User Story 691539: Card setting: additional fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldInfo"
          }
        },
        "assignedToDisplayFormat": {
          "description": "Display format for the assigned to field",
          "enum": [
            "avatarOnly",
            "fullName",
            "avatarAndFullName"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.IdentityDisplayFormat"
          }
        },
        "coreFields": {
          "description": "A collection of field information of rendered core fields on cards.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldInfo"
          }
        },
        "showAssignedTo": {
          "description": "Flag indicating whether to show assigned to field on cards. When true, AssignedToDisplayFormat will determine how the field will be displayed",
          "type": "boolean"
        },
        "showEmptyFields": {
          "description": "Flag indicating whether to show empty fields on cards",
          "type": "boolean"
        },
        "showId": {
          "description": "Flag indicating whether to show ID on cards",
          "type": "boolean"
        },
        "showState": {
          "description": "Flag indicating whether to show state field on cards",
          "type": "boolean"
        },
        "showTags": {
          "description": "Flag indicating whether to show tags on cards",
          "type": "boolean"
        }
      }
    },
    "CardSettings": {
      "type": "object",
      "properties": {
        "fields": {
          "description": "A collection of settings related to rendering of fields on cards",
          "$ref": "#/definitions/CardFieldSettings"
        }
      }
    },
    "CategoryConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "referenceName": {
          "description": "Category Reference Name",
          "type": "string"
        },
        "workItemTypes": {
          "description": "Work item types for the backlog category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeReference"
          }
        }
      }
    },
    "CreatePlan": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "name": {
          "description": "Name of the plan to create.",
          "type": "string"
        },
        "properties": {
          "description": "Plan properties.",
          "type": "object"
        },
        "type": {
          "description": "Type of plan to create.",
          "enum": [
            "deliveryTimelineView"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.PlanType"
          }
        }
      }
    },
    "DateRange": {
      "type": "object",
      "properties": {
        "end": {
          "description": "End of the date range.",
          "type": "string",
          "format": "date-time"
        },
        "start": {
          "description": "Start of the date range.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeliveryViewData": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PlanViewData"
        }
      ],
      "properties": {
        "childIdToParentIdMap": {
          "description": "Work item child id to parenet id map",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "criteriaStatus": {
          "description": "Filter criteria status of the timeline",
          "$ref": "#/definitions/TimelineCriteriaStatus"
        },
        "endDate": {
          "description": "The end date of the delivery view data",
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "description": "The start date for the delivery view data",
          "type": "string",
          "format": "date-time"
        },
        "teams": {
          "description": "All the team data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineTeamData"
          }
        }
      }
    },
    "DeliveryViewPropertyCollection": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PlanPropertyCollection"
        }
      ],
      "properties": {
        "criteria": {
          "description": "Filter Criteria",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterClause"
          }
        },
        "teamBacklogMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamBacklogMapping"
          }
        }
      }
    },
    "FieldInfo": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The additional field display name",
          "type": "string"
        },
        "fieldType": {
          "description": "The additional field type",
          "enum": [
            "string",
            "plainText",
            "integer",
            "dateTime",
            "treePath",
            "boolean",
            "double"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.FieldType"
          }
        },
        "isIdentity": {
          "description": "Indicates if the field definition is for an identity field.",
          "type": "boolean"
        },
        "referenceName": {
          "description": "The additional field reference name",
          "type": "string"
        }
      }
    },
    "FieldReference": {
      "type": "object",
      "properties": {
        "referenceName": {
          "description": "fieldRefName for the field",
          "type": "string"
        },
        "url": {
          "description": "Full http link to more information about the field",
          "type": "string"
        }
      }
    },
    "FieldSetting": {
      "type": "object",
      "allOf": [
        {
          "type": "object"
        }
      ],
      "properties": {
      }
    },
    "FilterClause": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "logicalOperator": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FilterGroup": {
      "type": "object",
      "properties": {
        "end": {
          "type": "integer",
          "format": "int32"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FilterModel": {
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterClause"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterGroup"
          }
        },
        "maxGroupLevel": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Member": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "imageUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ParentChildWIMap": {
      "type": "object",
      "properties": {
        "childWorkItemIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "cardSettings": {
          "description": "Card settings such as fields and rules",
          "$ref": "#/definitions/CardSettings"
        },
        "createdBy": {
          "description": "Identity when the plan was created. Default to Empty Guid for the existing records before upgrading to ScaledAgileViewComponent4, which means we do not know the identity that created this resource.",
          "type": "string",
          "format": "uuid"
        },
        "createdDate": {
          "description": "Date when the plan was created",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "id": {
          "description": "Id of the plan",
          "type": "string",
          "format": "uuid"
        },
        "modifiedBy": {
          "description": "Identity when the plan was last modified.  Default to Empty Guid for the existing records before upgrading to ScaledAgileViewComponent4, which means we do not know the identity that last modified this resource.",
          "type": "string",
          "format": "uuid"
        },
        "modifiedDate": {
          "description": "Date when the plan was last modified. Default to CreatedDate when the plan is first created.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of the plan",
          "type": "string"
        },
        "ownerId": {
          "description": "OwnerId of the plan, typically same as the TFID of the team under which this plan has been created",
          "type": "string",
          "format": "uuid"
        },
        "permissions": {
          "description": "Permissions object bag with relevant plan permissions",
          "$ref": "#/definitions/PlanPermissions"
        },
        "properties": {
          "description": "The PlanPropertyCollection instance associated with the plan. These are dependent on the type of the plan. For example, DeliveryTimelineView, it would be of type DeliveryViewPropertyCollection.",
          "type": "object"
        },
        "revision": {
          "description": "Revision of the plan. Used to safeguard users from overwriting each other's changes.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Type of the plan",
          "enum": [
            "deliveryTimelineView"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.PlanType"
          }
        },
        "url": {
          "description": "The resource url to locate the plan via rest api",
          "type": "string"
        }
      }
    },
    "PlanMetadata": {
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "TFID of the creator of the plan",
          "type": "string",
          "format": "uuid"
        },
        "description": {
          "description": "Description of plan",
          "type": "string"
        },
        "modifiedDate": {
          "description": "Last modified date of the plan",
          "type": "string",
          "format": "date-time"
        },
        "permissions": {
          "description": "Permissions object bag with relevant plan permissions",
          "$ref": "#/definitions/PlanPermissions"
        }
      }
    },
    "PlanPermissions": {
      "type": "object",
      "properties": {
        "delete": {
          "description": "Whether the user has permission to delete this plan",
          "type": "boolean"
        },
        "edit": {
          "description": "Whether the user has permission to edit this plan",
          "type": "boolean"
        }
      }
    },
    "PlanPropertyCollection": {
      "type": "object",
      "properties": {
      }
    },
    "PlanViewData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProcessConfiguration": {
      "type": "object",
      "properties": {
        "bugWorkItems": {
          "description": "Details about bug work items",
          "$ref": "#/definitions/CategoryConfiguration"
        },
        "portfolioBacklogs": {
          "description": "Details about portfolio backlogs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryConfiguration"
          }
        },
        "requirementBacklog": {
          "description": "Details of requirement backlog",
          "$ref": "#/definitions/CategoryConfiguration"
        },
        "taskBacklog": {
          "description": "Details of task backlog",
          "$ref": "#/definitions/CategoryConfiguration"
        },
        "typeFields": {
          "description": "Type fields for the process configuration",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "Rule": {
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterClause"
          }
        },
        "filter": {
          "type": "string"
        },
        "isEnabled": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/attribute"
        }
      }
    },
    "TeamBacklogMapping": {
      "type": "object",
      "properties": {
        "categoryReferenceName": {
          "type": "string"
        },
        "teamId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TeamContext": {
      "type": "object",
      "properties": {
        "project": {
          "description": "The team project Id or name.  Ignored if ProjectId is set.",
          "type": "string"
        },
        "projectId": {
          "description": "The Team Project ID.  Required if Project is not set.",
          "type": "string",
          "format": "uuid"
        },
        "team": {
          "description": "The Team Id or name.  Ignored if TeamId is set.",
          "type": "string"
        },
        "teamId": {
          "description": "The Team Id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TeamFieldValue": {
      "type": "object",
      "properties": {
        "includeChildren": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TeamFieldValues": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "defaultValue": {
          "description": "The default team field value",
          "type": "string"
        },
        "field": {
          "description": "Shallow ref to the field being used as a team field",
          "$ref": "#/definitions/FieldReference"
        },
        "values": {
          "description": "Collection of all valid team field values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamFieldValue"
          }
        }
      }
    },
    "TeamFieldValuesPatch": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamFieldValue"
          }
        }
      }
    },
    "TeamIterationAttributes": {
      "type": "object",
      "properties": {
        "finishDate": {
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TeamMemberCapacity": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "activities": {
          "description": "Collection of capacities associated with the team member",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "daysOff": {
          "description": "The days off associated with the team member",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        },
        "teamMember": {
          "description": "Shallow Ref to the associated team member",
          "$ref": "#/definitions/Member"
        }
      }
    },
    "TeamSetting": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "backlogIteration": {
          "description": "Backlog Iteration",
          "$ref": "#/definitions/TeamSettingsIteration"
        },
        "backlogVisibilities": {
          "description": "Information about categories that are visible on the backlog.",
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "bugsBehavior": {
          "description": "BugsBehavior (Off, AsTasks, AsRequirements, ...)",
          "enum": [
            "off",
            "asRequirements",
            "asTasks"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.BugsBehavior"
          }
        },
        "defaultIteration": {
          "description": "Default Iteration, the iteration used when creating a new work item on the queries page.",
          "$ref": "#/definitions/TeamSettingsIteration"
        },
        "defaultIterationMacro": {
          "description": "Default Iteration macro (if any)",
          "type": "string"
        },
        "workingDays": {
          "description": "Days that the team is working",
          "type": "array",
          "items": {
            "type": "string",
            "format": "DayOfWeek"
          }
        }
      }
    },
    "TeamSettingsDataContractBase": {
      "type": "object",
      "properties": {
        "_links": {
          "description": "Collection of links relevant to resource",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "TeamSettingsDaysOff": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "daysOff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "TeamSettingsDaysOffPatch": {
      "type": "object",
      "properties": {
        "daysOff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateRange"
          }
        }
      }
    },
    "TeamSettingsIteration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TeamSettingsDataContractBase"
        }
      ],
      "properties": {
        "attributes": {
          "description": "Attributes such as start and end date",
          "$ref": "#/definitions/TeamIterationAttributes"
        },
        "id": {
          "description": "Id of the resource",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "path": {
          "description": "Relative path of the iteration",
          "type": "string"
        }
      }
    },
    "TeamSettingsPatch": {
      "type": "object",
      "properties": {
        "backlogIteration": {
          "type": "string",
          "format": "uuid"
        },
        "backlogVisibilities": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "bugsBehavior": {
          "enum": [
            "off",
            "asRequirements",
            "asTasks"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.BugsBehavior"
          }
        },
        "defaultIteration": {
          "type": "string",
          "format": "uuid"
        },
        "defaultIterationMacro": {
          "type": "string"
        },
        "workingDays": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "DayOfWeek"
          }
        }
      }
    },
    "TimelineCriteriaStatus": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "oK",
            "invalidFilterClause",
            "unknown"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.TimelineCriteriaStatusCode"
          }
        }
      }
    },
    "TimelineIterationStatus": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "oK",
            "isOverlapping"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.TimelineIterationStatusCode"
          }
        }
      }
    },
    "TimelineTeamData": {
      "type": "object",
      "properties": {
        "backlog": {
          "description": "Backlog matching the mapped backlog associated with this team.",
          "$ref": "#/definitions/BacklogLevel"
        },
        "fieldReferenceNames": {
          "description": "The field reference names of the work item data",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "The id of the team",
          "type": "string",
          "format": "uuid"
        },
        "isExpanded": {
          "description": "Was iteration and work item data retrieved for this team.  Teams with IsExpanded false have not had their iteration, work item, and field related data queried and will never contain this data. If true then these items are queried and, if there are items in the queried range, there will be data.",
          "type": "boolean"
        },
        "iterations": {
          "description": "The iteration data, including the work items, in the queried date range.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineTeamIteration"
          }
        },
        "name": {
          "description": "The name of the team",
          "type": "string"
        },
        "orderByField": {
          "description": "The order by field name of this team",
          "type": "string"
        },
        "partiallyPagedFieldReferenceNames": {
          "description": "The field reference names of the partially paged work items, such as ID, WorkItemType",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projectId": {
          "description": "The project id the team belongs team",
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "description": "Status for this team.",
          "$ref": "#/definitions/TimelineTeamStatus"
        },
        "teamFieldDefaultValue": {
          "description": "The team field default value",
          "type": "string"
        },
        "teamFieldName": {
          "description": "The team field name of this team",
          "type": "string"
        },
        "teamFieldValues": {
          "description": "The team field values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamFieldValue"
          }
        },
        "workItemTypeColors": {
          "description": "Colors for the work item types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemColor"
          }
        }
      }
    },
    "TimelineTeamIteration": {
      "type": "object",
      "properties": {
        "finishDate": {
          "description": "The end date of the iteration",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "The iteration name",
          "type": "string"
        },
        "partiallyPagedWorkItems": {
          "description": "All the partially paged workitems in this iteration.",
          "type": "array",
          "items": {
            "type": "array"
          }
        },
        "path": {
          "description": "The iteration path",
          "type": "string"
        },
        "startDate": {
          "description": "The start date of the iteration",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "The status of this iteration",
          "$ref": "#/definitions/TimelineIterationStatus"
        },
        "workItems": {
          "description": "The work items that have been paged in this iteration",
          "type": "array",
          "items": {
            "type": "array"
          }
        }
      }
    },
    "TimelineTeamStatus": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "oK",
            "doesntExistOrAccessDenied",
            "maxTeamsExceeded",
            "maxTeamFieldsExceeded",
            "backlogInError",
            "missingTeamFieldValue",
            "noIterationsExist"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.TimelineTeamStatusCode"
          }
        }
      }
    },
    "UpdatePlan": {
      "type": "object",
      "properties": {
        "cardSettings": {
          "description": "Card settings such as fields and rules",
          "$ref": "#/definitions/CardSettings"
        },
        "description": {
          "description": "Description of the plan",
          "type": "string"
        },
        "name": {
          "description": "Name of the plan to create.",
          "type": "string"
        },
        "properties": {
          "description": "Plan properties.",
          "type": "object"
        },
        "revision": {
          "description": "Revision of the plan that was updated - the value used here should match the one the server gave the client in the Plan.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Type of the plan",
          "enum": [
            "deliveryTimelineView"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Work.WebApi.PlanType"
          }
        }
      }
    },
    "WorkItemColor": {
      "type": "object",
      "properties": {
        "primaryColor": {
          "type": "string"
        },
        "workItemTypeName": {
          "type": "string"
        }
      }
    },
    "WorkItemFieldReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "referenceName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeReference": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeStateInfo": {
      "type": "object",
      "properties": {
        "states": {
          "description": "State name to state category map",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "workItemTypeName": {
          "description": "Work Item type name",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.2-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.work": "Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries and to receive notifications about work item events via service hooks.",
        "vso.work_write": "Grants the ability to read, create, and update work items and queries, update board metadata, read area and iterations paths other work item tracking related metadata, execute queries, and to receive notifications about work item events via service hooks."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}