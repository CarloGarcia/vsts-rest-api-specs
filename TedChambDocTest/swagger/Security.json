{
    "swagger": "2.0",
    "info": {
        "title": "Security",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "fabrikam-fiber-inc.visualstudio.com",
    "basePath": "/",
    "tags": [
        {
            "name": "accessControlEntries"
        },
        {
            "name": "accessControlLists"
        },
        {
            "name": "permissionEvaluationBatch"
        },
        {
            "name": "permissions"
        },
        {
            "name": "securityNamespaces"
        }
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "pat": {
            "type": "basic",
            "description": "Personal access token"
        }
    },
    "security": [
        {
            "pat": []
        }
    ], 
    "paths": {
        "/_apis/accesscontrolentries/{securityNamespaceId}": {
            "delete": {
                "tags": [
                    "accessControlEntries"
                ],
                "summary": "RemoveAccessControlEntries",
                "description": "",
                "operationId": "removeAccessControlEntries",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "securityNamespaceId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "token",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "descriptors",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "accessControlEntries"
                ],
                "summary": "SetAccessControlEntries",
                "description": "",
                "operationId": "setAccessControlEntries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jObject"
                        }
                    },
                    {
                        "in": "path",
                        "name": "securityNamespaceId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/accessControlEntry"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/accesscontrollists/{securityNamespaceId}": {
            "get": {
                "tags": [
                    "accessControlLists"
                ],
                "summary": "QueryAccessControlLists",
                "description": "",
                "operationId": "queryAccessControlLists",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "securityNamespaceId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "token",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "descriptors",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "includeExtendedInfo",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "recurse",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/accessControlList"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "accessControlLists"
                ],
                "summary": "RemoveAccessControlLists",
                "description": "",
                "operationId": "removeAccessControlLists",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "securityNamespaceId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "tokens",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "recurse",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "accessControlLists"
                ],
                "summary": "SetAccessControlLists",
                "description": "",
                "operationId": "setAccessControlLists",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "generic"
                        }
                    },
                    {
                        "in": "path",
                        "name": "securityNamespaceId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/permissions/{securityNamespaceId}/{permissions}": {
            "get": {
                "tags": [
                    "permissions"
                ],
                "summary": "HasPermissions",
                "description": "",
                "operationId": "hasPermissions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "securityNamespaceId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "path",
                        "name": "permissions",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "tokens",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "alwaysAllowAdministrators",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "delimiter",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "permissions"
                ],
                "summary": "RemovePermission",
                "description": "",
                "operationId": "removePermission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "securityNamespaceId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "path",
                        "name": "permissions",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "token",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "descriptor",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/accessControlEntry"
                        }
                    }
                }
            }
        },
        "/_apis/security/permissionevaluationbatch": {
            "post": {
                "tags": [
                    "permissionEvaluationBatch"
                ],
                "summary": "HasPermissionsBatch",
                "description": "Perform a batch of \"has permission\" checks. This methods does not aggregate the results nor does it shortcircut if one of the permissions evaluates to false.",
                "operationId": "hasPermissionsBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/permissionEvaluationBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/permissionEvaluationBatch"
                        }
                    }
                }
            }
        },
        "/_apis/securitynamespaces/{securityNamespaceId}": {
            "get": {
                "tags": [
                    "securityNamespaces"
                ],
                "summary": "QuerySecurityNamespaces",
                "description": "",
                "operationId": "querySecurityNamespaces",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "securityNamespaceId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "localOnly",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/securityNamespaceDescription"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "securityNamespaces"
                ],
                "summary": "SetInheritFlag",
                "description": "",
                "operationId": "setInheritFlag",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jObject"
                        }
                    },
                    {
                        "in": "path",
                        "name": "securityNamespaceId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "definitions": {
        "accessControlEntriesCollection": {
            "type": "object",
            "allOf": [
                {
                    "type": "array"
                }
            ],
            "properties": {
            }
        },
        "accessControlEntry": {
            "type": "object",
            "properties": {
                "allow": {
                    "description": "The set of permission bits that represent the actions that the associated descriptor is allowed to perform.",
                    "type": "integer",
                    "format": "int32"
                },
                "deny": {
                    "description": "The set of permission bits that represent the actions that the associated descriptor is not allowed to perform.",
                    "type": "integer",
                    "format": "int32"
                },
                "descriptor": {
                    "description": "The descriptor for the user this AccessControlEntry applies to.",
                    "$ref": "#/definitions/identityDescriptor"
                },
                "extendedInfo": {
                    "description": "This value, when set, reports the inherited and effective information for the associated descriptor. This value is only set on AccessControlEntries returned by the QueryAccessControlList(s) call when its includeExtendedInfo parameter is set to true.",
                    "$ref": "#/definitions/aceExtendedInformation"
                }
            }
        },
        "accessControlList": {
            "type": "object",
            "properties": {
                "acesDictionary": {
                    "description": "Storage of permissions keyed on the identity the permission is for.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/accessControlEntry"
                    }
                },
                "includeExtendedInfo": {
                    "description": "True if this ACL holds ACEs that have extended information.",
                    "type": "boolean"
                },
                "inheritPermissions": {
                    "description": "True if the given token inherits permissions from parents.",
                    "type": "boolean"
                },
                "token": {
                    "description": "The token that this AccessControlList is for.",
                    "type": "string"
                }
            }
        },
        "accessControlListsCollection": {
            "type": "object",
            "allOf": [
                {
                    "type": "array"
                }
            ],
            "properties": {
            }
        },
        "aceExtendedInformation": {
            "type": "object",
            "properties": {
                "effectiveAllow": {
                    "description": "This is the combination of all of the explicit and inherited permissions for this identity on this token.  These are the permissions used when determining if a given user has permission to perform an action.",
                    "type": "integer",
                    "format": "int32"
                },
                "effectiveDeny": {
                    "description": "This is the combination of all of the explicit and inherited permissions for this identity on this token.  These are the permissions used when determining if a given user has permission to perform an action.",
                    "type": "integer",
                    "format": "int32"
                },
                "inheritedAllow": {
                    "description": "These are the permissions that are inherited for this identity on this token.  If the token does not inherit permissions this will be 0.  Note that any permissions that have been explicitly set on this token for this identity, or any groups that this identity is a part of, are not included here.",
                    "type": "integer",
                    "format": "int32"
                },
                "inheritedDeny": {
                    "description": "These are the permissions that are inherited for this identity on this token.  If the token does not inherit permissions this will be 0.  Note that any permissions that have been explicitly set on this token for this identity, or any groups that this identity is a part of, are not included here.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "actionDefinition": {
            "type": "object",
            "properties": {
                "bit": {
                    "description": "The bit mask integer for this action. Must be a power of 2.",
                    "type": "integer",
                    "format": "int32"
                },
                "displayName": {
                    "description": "The localized display name for this action.",
                    "type": "string"
                },
                "name": {
                    "description": "The non-localized name for this action.",
                    "type": "string"
                },
                "namespaceId": {
                    "description": "The namespace that this action belongs to.  This will only be used for reading from the database.",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "identityDescriptor": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "identityType": {
                    "type": "string"
                }
            }
        },
        "jObject": {
            "type": "object",
            "allOf": [
                {
                    "type": "string",
                    "format": "jContainer"
                }
            ],
            "properties": {
                "item": {
                    "type": "string",
                    "format": "jToken"
                },
                "type": {
                    "type": "string",
                    "format": "jTokenType"
                }
            }
        },
        "permissionEvaluation": {
            "type": "object",
            "properties": {
                "permissions": {
                    "description": "Permission bit for this evaluated permission.",
                    "type": "integer",
                    "format": "int32"
                },
                "securityNamespaceId": {
                    "description": "Security namespace identifier for this evaluated permission.",
                    "type": "string",
                    "format": "uuid"
                },
                "token": {
                    "description": "Security namespace-specific token for this evaluated permission.",
                    "type": "string"
                },
                "value": {
                    "description": "Permission evaluation value.",
                    "type": "boolean"
                }
            }
        },
        "permissionEvaluationBatch": {
            "type": "object",
            "properties": {
                "alwaysAllowAdministrators": {
                    "type": "boolean"
                },
                "evaluations": {
                    "description": "Array of permission evaluations to evaluate.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/permissionEvaluation"
                    }
                }
            }
        },
        "remoteBackingStoreAccessControlEntry": {
            "type": "object",
            "properties": {
                "allow": {
                    "description": "The set of permission bits that represent the actions that the associated descriptor is allowed to perform.",
                    "type": "integer",
                    "format": "int32"
                },
                "deny": {
                    "description": "The set of permission bits that represent the actions that the associated descriptor is not allowed to perform.",
                    "type": "integer",
                    "format": "int32"
                },
                "identityId": {
                    "description": "The identity for which the access control entry is allowing / denying permission.",
                    "type": "string",
                    "format": "uuid"
                },
                "token": {
                    "description": "The token of the access control list in which this access control entry belongs.",
                    "type": "string"
                }
            }
        },
        "removeAccessControlListsRequest": {
            "type": "object",
            "properties": {
                "recurse": {
                    "type": "boolean"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "removePermissionsRequest": {
            "type": "object",
            "properties": {
                "identityIds": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "renameTokensRequest": {
            "type": "object",
            "properties": {
                "renames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tokenRename"
                    }
                }
            }
        },
        "securityNamespaceData": {
            "type": "object",
            "properties": {
                "accessControlEntries": {
                    "description": "The access control entries in this snapshot of the security namespace data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/remoteBackingStoreAccessControlEntry"
                    }
                },
                "aclStoreId": {
                    "description": "Indicates the ACL store whose data is persisted in this SecurityNamespaceData object.",
                    "type": "string",
                    "format": "uuid"
                },
                "identityDomain": {
                    "description": "The identity domain for the service host on which this security namespace resides.",
                    "type": "string",
                    "format": "uuid"
                },
                "newSequenceId": {
                    "description": "The sequence ID for this snapshot of or incremental update to the security namespace data.",
                    "type": "integer",
                    "format": "int32"
                },
                "noInheritTokens": {
                    "description": "The list of tokens in the security namespace which have inheritance disabled.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oldSequenceId": {
                    "description": "If this is a full snapshot of the security namespace data, this value is -1. Otherwise, this instance represents the delta from OldSequenceId to NewSequenceId.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "securityNamespaceDescription": {
            "type": "object",
            "properties": {
                "actions": {
                    "description": "The list of actions that this Security Namespace is responsible for securing.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/actionDefinition"
                    }
                },
                "dataspaceCategory": {
                    "description": "This is the dataspace category that describes where the security information for this SecurityNamespace should be stored.",
                    "type": "string"
                },
                "displayName": {
                    "description": "This localized name for this namespace.",
                    "type": "string"
                },
                "elementLength": {
                    "description": "If the security tokens this namespace will be operating on need to be split on certain character lengths to determine its elements, that length should be specified here. If not, this value will be -1.",
                    "type": "integer",
                    "format": "int32"
                },
                "extensionType": {
                    "description": "This is the type of the extension that should be loaded from the plugins directory for extending this security namespace.",
                    "type": "string"
                },
                "isRemotable": {
                    "description": "If true, the security namespace is remotable, allowing another service to proxy the namespace.",
                    "type": "boolean"
                },
                "name": {
                    "description": "This non-localized for this namespace.",
                    "type": "string"
                },
                "namespaceId": {
                    "description": "The unique identifier for this namespace.",
                    "type": "string",
                    "format": "uuid"
                },
                "readPermission": {
                    "description": "The permission bits needed by a user in order to read security data on the Security Namespace.",
                    "type": "integer",
                    "format": "int32"
                },
                "separatorValue": {
                    "description": "If the security tokens this namespace will be operating on need to be split on certain characters to determine its elements that character should be specified here. If not, this value will be the null character.",
                    "type": "string",
                    "format": "char"
                },
                "structureValue": {
                    "description": "Used to send information about the structure of the security namespace over the web service.",
                    "type": "integer",
                    "format": "int32"
                },
                "useTokenTranslator": {
                    "description": "If true, the security service will expect an ISecurityDataspaceTokenTranslator plugin to exist for this namespace",
                    "type": "boolean"
                },
                "writePermission": {
                    "description": "The permission bits needed by a user in order to modify security data on the Security Namespace.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "setAccessControlEntriesInfo": {
            "type": "object",
            "properties": {
                "accessControlEntries": {
                    "$ref": "#/definitions/accessControlEntriesCollection"
                },
                "merge": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "setAccessControlListsRequest": {
            "type": "object",
            "properties": {
                "accessControlEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accessControlEntry"
                    }
                },
                "accessControlLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accessControlList"
                    }
                },
                "throwOnInvalidIdentity": {
                    "type": "boolean"
                }
            }
        },
        "setInheritFlagInfo": {
            "type": "object",
            "properties": {
                "inherit": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "setPermissionsRequest": {
            "type": "object",
            "properties": {
                "accessControlEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accessControlEntry"
                    }
                },
                "merge": {
                    "type": "boolean"
                },
                "throwOnInvalidIdentity": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "tokenRename": {
            "type": "object",
            "properties": {
                "copy": {
                    "description": "True if the existing token should be preserved; false if it should be deleted.",
                    "type": "boolean"
                },
                "newToken": {
                    "description": "The desired new name of the token.",
                    "type": "string"
                },
                "oldToken": {
                    "description": "The current name of the token.",
                    "type": "string"
                },
                "recurse": {
                    "description": "True if the scope of the operation should be extended to all child tokens of OldToken; false otherwise.",
                    "type": "boolean"
                }
            }
        },
        "vssJsonCollectionWrapper": {
            "type": "object",
            "allOf": [
                {
                    "type": "string",
                    "format": "vssJsonCollectionWrapperBase"
                }
            ],
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "vssJsonCollectionWrapperV": {
            "type": "object",
            "allOf": [
                {
                    "type": "string",
                    "format": "vssJsonCollectionWrapperBase"
                }
            ],
            "properties": {
                "value": {
                    "type": "string",
                    "format": "t"
                }
            }
        }
    },
    "parameters": {
        "api-Version": {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
            "required": true,
            "type": "string"
        }
    },
    "externalDocs": {
        "description": "Visual Studio Team Services REST APIs",
        "url": "https://www.visualstudio.com/docs/integrate/api/overview"
    } 
}