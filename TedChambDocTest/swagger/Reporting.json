{
    "swagger": "2.0",
    "info": {
        "description": "",
        "version": "1.0.0",
        "title": "Reporting",
        "termsOfService": "",
        "contact": {
            "email": "tedchamb@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        }
    },
    "host": "https://{account}.visualstudio.com",
    "basePath": "",
    "tags": [
        {
            "name": "chartConfiguration"
        },
        {
            "name": "dataServiceCapabilities"
        },
        {
            "name": "transformQuery"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "{project}/_apis/reporting/chartconfiguration/{id}": {
            "post": {
                "tags": [
                    "chartConfiguration"
                ],
                "summary": "CreateChartConfiguration",
                "description": "",
                "operationId": "createChartConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChartConfiguration"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "chartConfiguration"
                ],
                "summary": "DeleteChartConfiguration",
                "description": "",
                "operationId": "deleteChartConfiguration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "",
                        "required": true,
                        "type": "Guid"
                    }
                ]
            },
            "get": {
                "tags": [
                    "chartConfiguration"
                ],
                "summary": "GetChartConfiguration",
                "description": "",
                "operationId": "getChartConfiguration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "",
                        "required": true,
                        "type": "Guid"
                    }
                ]
            },
            "get": {
                "tags": [
                    "chartConfiguration"
                ],
                "summary": "GetChartConfigurations",
                "description": "",
                "operationId": "getChartConfigurations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "groupKey",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ]
            },
            "put": {
                "tags": [
                    "chartConfiguration"
                ],
                "summary": "ReplaceChartConfiguration",
                "description": "",
                "operationId": "replaceChartConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChartConfiguration"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "_apis/reporting/dataservicecapabilities/{scope}": {
            "get": {
                "tags": [
                    "dataServiceCapabilities"
                ],
                "summary": "GetDataServiceCapabilities",
                "description": "",
                "operationId": "getDataServiceCapabilities",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "scope",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "_apis/reporting/transformquery/{scope}": {
            "post": {
                "tags": [
                    "transformQuery"
                ],
                "summary": "RunTransformQuery",
                "description": "",
                "operationId": "runTransformQuery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "TransformOptions"
                        }
                    },
                    {
                        "in": "path",
                        "name": "scope",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        }
    },
    "definitions": {
        "AggregatedRecord": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "object"
                },
                "measure": {
                    "type": "Single"
                },
                "series": {
                    "type": "object"
                }
            }
        },
        "ChartConfiguration": {
            "type": "object",
            "properties": {
                "chartId": {
                    "type": "Guid"
                },
                "chartType": {
                    "description": "The type of chart visualization/renderer to employ on client.",
                    "type": "string"
                },
                "groupKey": {
                    "description": "Uniquely describes a set \"grouped\" charts in terms of relation to a common entity.  For WIT, a set of charts referencing a stored Query GUID are all \"owned\" and discoverable in relation to that Query.",
                    "type": "string"
                },
                "scope": {
                    "description": "Describes a feature \"scope\". Scope information is required by charting to properly route REST requests to particular feature implementations.",
                    "type": "string"
                },
                "title": {
                    "description": "The textual title of the chart.",
                    "type": "string"
                },
                "transformOptions": {
                    "description": "The options for \"Transforming\" chart data by \"filtering\" data from feature, and \"tabulating\" that data.",
                    "$ref": "#/definitions/TransformOptions"
                },
                "userColors": {
                    "description": "A set of colors bound to known chart group values in the chart",
                    "type": "array",
                    "items": {
                        "type": "ColorConfiguration"
                    }
                }
            }
        },
        "ChartConfigurationResponse": {
            "type": "ChartingRestResponseBase",
            "properties": {
                "chartConfiguration": {
                    "description": "The saved Chart Configuration",
                    "$ref": "#/definitions/ChartConfiguration"
                }
            }
        },
        "ChartingRestResponseBase": {
            "type": "object",
            "properties": {
                "uri": {
                    "description": "The URI that can GET this element",
                    "type": "string"
                }
            }
        },
        "ColorConfiguration": {
            "type": "object",
            "properties": {
                "backgroundColor": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "DataServiceCapabilities": {
            "type": "object",
            "properties": {
                "fields": {
                    "description": "The set of supported Fields for Grouping and Aggregation option selection.",
                    "type": "array",
                    "items": {
                        "type": "FieldInfo"
                    }
                },
                "historyRanges": {
                    "description": "The set of supported Range options.",
                    "type": "array",
                    "items": {
                        "type": "NameLabelPair"
                    }
                },
                "numericalAggregationFunctions": {
                    "description": "The describes the set of numerical Aggregration Functions.",
                    "type": "array",
                    "items": {
                        "type": "NameLabelPair"
                    }
                },
                "pluralArtifactName": {
                    "description": "Provides localized plural name for the artifacts being charted, for Chart labelling ie-\"14 {X}\", and describing count aggregation in UI or on aggregation selection \"Count of {X}\", for which no field applies.",
                    "type": "string"
                },
                "scope": {
                    "description": "Scope name for the chart data provider supporting these capabilities.",
                    "type": "string"
                }
            }
        },
        "DataServiceCapabilitiesResponse": {
            "type": "ChartingRestResponseBase",
            "properties": {
                "dataServiceCapabilities": {
                    "$ref": "#/definitions/DataServiceCapabilities"
                }
            }
        },
        "FieldInfo": {
            "type": "NameLabelPair",
            "properties": {
                "isAggregatable": {
                    "description": "Can the field be aggregated with treatment as a numerical value?",
                    "type": "boolean"
                },
                "isGroupable": {
                    "description": "Can the field be meaningfully used for grouping?",
                    "type": "boolean"
                }
            }
        },
        "Measure": {
            "type": "object",
            "properties": {
                "aggregation": {
                    "description": "Type of Aggregation to apply to the field",
                    "type": "string"
                },
                "propertyName": {
                    "description": "Data Model Property in the measure",
                    "type": "string"
                }
            }
        },
        "NameLabelPair": {
            "type": "object",
            "properties": {
                "labelText": {
                    "description": "User facing label for client side presentation.",
                    "type": "string"
                },
                "name": {
                    "description": "Invariant name for unique recognition at scope of a charting provider.",
                    "type": "string"
                }
            }
        },
        "OrderBy": {
            "type": "object",
            "properties": {
                "direction": {
                    "description": "The ordering direction",
                    "type": "string"
                },
                "propertyName": {
                    "description": "The ordering property name",
                    "type": "string"
                }
            }
        },
        "TransformOptions": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "Describes feature-aware means of \"querying\" an initial data set. A Query Guid is used by the main WIT provider feature implementation.",
                    "type": "string"
                },
                "filterContext": {
                    "description": "Describes a feature-aware set of parameters to aid in querying the initial data set. Unlike all other options - this aspect is impermanent/contextual to the client state. WIT uses this to pass WIT query context info like @me, @project value state.",
                    "type": "object"
                },
                "groupBy": {
                    "description": "Specifies a field with a discrete set of values, for use to group together related data. ie- Priority, AssignedTo, or State",
                    "type": "string"
                },
                "historyRange": {
                    "description": "Specifies how the data set should be sampled over time. Empty == a transform which will just collect samples at the time of the request. Note: The original Charting implementation treats sampled dates as a grouped field. This means that Trend charts can only be stacked/grouped with 0-1 other dimension, where snapshot charts can use both.",
                    "type": "string"
                },
                "measure": {
                    "description": "Describes what value to measure against, and how that provided data should be tabulated.",
                    "$ref": "#/definitions/Measure"
                },
                "orderBy": {
                    "description": "Describes how chart data should be ordered for all groupable dimensions... Except time/History, which ignores this, and always sorts in ascending order.",
                    "$ref": "#/definitions/OrderBy"
                },
                "series": {
                    "description": "A 2nd field dimension to specify grouping of related data.",
                    "type": "string"
                },
                "transformId": {
                    "description": "Uniquely identifies *persisted* Transform Data between client, AT and DT. This is determined by the server when persisting a transform/chart. It is irrelevant for standalone transform requests.",
                    "type": "Guid"
                }
            }
        },
        "TransformResult": {
            "type": "object",
            "properties": {
                "areHistoryOptionsUnmodified": {
                    "description": "Indicates if options for this Transform result reflect the state originally supplied from the request. In legacy charting implementation, a History field was injected to act as Series or Group By option.",
                    "type": "boolean"
                },
                "options": {
                    "description": "The Transform Options that yielded the records of this result",
                    "$ref": "#/definitions/TransformOptions"
                },
                "records": {
                    "description": "An IEnumerable of the actual results of the transform",
                    "type": "array",
                    "items": {
                        "type": "AggregatedRecord"
                    }
                }
            }
        },
        "TransformResultResponse": {
            "type": "object",
            "properties": {
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}