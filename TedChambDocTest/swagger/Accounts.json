{
  "swagger": "2.0",
  "info": {
    "title": "Account",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "accountDeletions"
    },
    {
      "name": "accounts"
    },
    {
      "name": "availability"
    },
    {
      "name": "regions"
    },
    {
      "name": "settings"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/account/availability/{accountName}": {
      "get": {
        "tags": [
          "availability"
        ],
        "summary": "IsValidAccountName",
        "description": "",
        "operationId": "isValidAccountName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountName",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/accountNameAvailability"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/account/regions": {
      "get": {
        "tags": [
          "regions"
        ],
        "summary": "GetRegions",
        "description": "",
        "operationId": "getRegions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/accountRegion"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/account/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "GetAccountSettings",
        "description": "",
        "operationId": "getAccountSettings",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/accountdeletions/{accountId}": {
      "post": {
        "tags": [
          "accountDeletions"
        ],
        "summary": "DeleteAccount",
        "description": "",
        "operationId": "deleteAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      }
    },
    "/_apis/accounts": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "CreateAccount",
        "description": "",
        "operationId": "createAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountCreateInfoInternal"
            }
          },
          {
            "in": "query",
            "name": "usePrecreated",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        }
      },
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "GetAccounts",
        "description": "A new version GetAccounts API. Only supports limited set of parameters, returns a list of partial account objects that only contains AccountUrl, AccountName and AccountId information, will use collection host Id as the AccountId.",
        "operationId": "getAccounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creatorId",
            "description": "Not supported anymore",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ownerId",
            "description": "Owner Id to query for",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "memberId",
            "description": "Member Id to query for",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "includeOwner",
            "description": "Include account owner or not",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Only support service URL properties",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeDisabledAccounts",
            "description": "Not supported anymore",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/account"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/accounts/{accountId}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "GetAccount",
        "description": "",
        "operationId": "getAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "accounts"
        ],
        "summary": "UpdateAccount",
        "description": "",
        "operationId": "updateAccount",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          {
            "in": "path",
            "name": "accountId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "account": {
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Identifier for an Account",
          "type": "string",
          "format": "uuid"
        },
        "accountName": {
          "description": "Name for an account",
          "type": "string"
        },
        "accountOwner": {
          "description": "Owner of account",
          "type": "string",
          "format": "uuid"
        },
        "accountStatus": {
          "description": "Current account status",
          "enum": [
            "none",
            "enabled",
            "disabled",
            "deleted",
            "moved"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Account.AccountStatus"
          }
        },
        "accountType": {
          "description": "Type of account: Personal, Organization",
          "enum": [
            "personal",
            "organization"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Account.AccountType"
          }
        },
        "accountUri": {
          "description": "Uri for an account",
          "type": "string"
        },
        "createdBy": {
          "description": "Who created the account",
          "type": "string",
          "format": "uuid"
        },
        "createdDate": {
          "description": "Date account was created",
          "type": "string",
          "format": "date-time"
        },
        "hasMoved": {
          "type": "boolean"
        },
        "lastUpdatedBy": {
          "description": "Identity of last person to update the account",
          "type": "string",
          "format": "uuid"
        },
        "lastUpdatedDate": {
          "description": "Date account was last updated",
          "type": "string",
          "format": "date-time"
        },
        "namespaceId": {
          "description": "Namespace for an account",
          "type": "string",
          "format": "uuid"
        },
        "newCollectionId": {
          "type": "string",
          "format": "uuid"
        },
        "organizationName": {
          "description": "Organization that created the account",
          "type": "string"
        },
        "properties": {
          "description": "Extended properties",
          "$ref": "#/definitions/propertiesCollection"
        },
        "statusReason": {
          "description": "Reason for current status",
          "type": "string"
        }
      }
    },
    "accountCreateInfoInternal": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "creator": {
          "type": "string",
          "format": "uuid"
        },
        "organization": {
          "type": "string"
        },
        "preferences": {
          "$ref": "#/definitions/accountPreferencesInternal"
        },
        "properties": {
          "$ref": "#/definitions/propertiesCollection"
        },
        "serviceDefinitions": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "accountNameAvailability": {
      "type": "object",
      "properties": {
        "isValidName": {
          "type": "boolean"
        },
        "statusReason": {
          "description": "Reason for current status",
          "type": "string"
        }
      }
    },
    "accountPreferencesInternal": {
      "type": "object",
      "properties": {
        "culture": {
          "type": "string",
          "format": "cultureInfo"
        },
        "language": {
          "type": "string",
          "format": "cultureInfo"
        },
        "timeZone": {
          "type": "string",
          "format": "timeZoneInfo"
        }
      }
    },
    "accountRegion": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the account region",
          "type": "string"
        },
        "isDefault": {
          "description": "Whether the region is default or not",
          "type": "boolean"
        },
        "locationName": {
          "description": "Azure location name",
          "type": "string"
        }
      }
    },
    "propertiesCollection": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "object"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.profile": "Grants the ability to read your profile, accounts, collections, projects, teams, and other top-level organizational artifacts."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}