{
    "swagger": "2.0",
    "info": {
        "title": "Build",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "https://fabrikam-fiber-inc.visualstudio.com",
    "basePath": "",
    "tags": [
        {
            "name": "artifacts"
        },
        {
            "name": "badge"
        },
        {
            "name": "buildbadge"
        },
        {
            "name": "builds"
        },
        {
            "name": "changes"
        },
        {
            "name": "controllers"
        },
        {
            "name": "definitions"
        },
        {
            "name": "folders"
        },
        {
            "name": "logs"
        },
        {
            "name": "metrics"
        },
        {
            "name": "options"
        },
        {
            "name": "report"
        },
        {
            "name": "resourceUsage"
        },
        {
            "name": "revisions"
        },
        {
            "name": "settings"
        },
        {
            "name": "tags"
        },
        {
            "name": "templates"
        },
        {
            "name": "timeline"
        },
        {
            "name": "workitems"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "{project}/_apis/build/builds/{buildId}/artifacts": {
            "post": {
                "tags": [
                    "artifacts"
                ],
                "summary": "CreateArtifact",
                "description": "Associates an artifact with a build",
                "operationId": "createArtifact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BuildArtifact"
                        }
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildArtifact"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "artifacts"
                ],
                "summary": "GetArtifacts",
                "description": "Gets all artifacts for a build",
                "operationId": "getArtifacts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildArtifact"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}/artifacts/{artifactName}": {
            "get": {
                "tags": [
                    "artifacts"
                ],
                "summary": "GetArtifact",
                "description": "Gets a specific artifact for a build",
                "operationId": "getArtifact",
                "produces": [
                    "application/zip",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "artifactName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildArtifact"
                        }
                    }
                }
            }
        },
        "_apis/public/build/definitions/{project}/{definitionId}/badge": {
            "get": {
                "tags": [
                    "badge"
                ],
                "summary": "GetBadge",
                "description": "",
                "operationId": "getBadge",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "",
                        "required": true,
                        "type": "Guid"
                    },
                    {
                        "in": "path",
                        "name": "definitionId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "branchName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/repos/{repoType}/badge": {
            "get": {
                "tags": [
                    "buildbadge"
                ],
                "summary": "GetBuildBadge",
                "description": "",
                "operationId": "getBuildBadge",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "repoType",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "repoId",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "branchName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildBadge"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}": {
            "delete": {
                "tags": [
                    "builds"
                ],
                "summary": "DeleteBuild",
                "description": "Deletes a build",
                "operationId": "deleteBuild",
                "parameters": [
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "builds"
                ],
                "summary": "GetBuild",
                "description": "Gets a build",
                "operationId": "getBuild",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "A comma-delimited list of properties to include in the results",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Build"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "builds"
                ],
                "summary": "UpdateBuild",
                "description": "Updates a build",
                "operationId": "updateBuild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Build"
                        }
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Build"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds": {
            "get": {
                "tags": [
                    "builds"
                ],
                "summary": "GetBuilds",
                "description": "Gets builds",
                "operationId": "getBuilds",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "definitions",
                        "description": "A comma-delimited list of definition ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "int32"
                        }
                    },
                    {
                        "in": "query",
                        "name": "queues",
                        "description": "A comma-delimited list of queue ids",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "int32"
                        }
                    },
                    {
                        "in": "query",
                        "name": "buildNumber",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minFinishTime",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxFinishTime",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "requestedFor",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "reasonFilter",
                        "description": "",
                        "required": false,
                        "type": "BuildReason"
                    },
                    {
                        "in": "query",
                        "name": "statusFilter",
                        "description": "",
                        "required": false,
                        "type": "BuildStatus"
                    },
                    {
                        "in": "query",
                        "name": "resultFilter",
                        "description": "",
                        "required": false,
                        "type": "BuildResult"
                    },
                    {
                        "in": "query",
                        "name": "tagFilters",
                        "description": "A comma-delimited list of tags",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "properties",
                        "description": "A comma-delimited list of properties to include in the results",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "The maximum number of builds to retrieve",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "continuationToken",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "maxBuildsPerDefinition",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "deletedFilter",
                        "description": "",
                        "required": false,
                        "type": "QueryDeletedOption"
                    },
                    {
                        "in": "query",
                        "name": "queryOrder",
                        "description": "",
                        "required": false,
                        "type": "BuildQueryOrder"
                    },
                    {
                        "in": "query",
                        "name": "branchName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "buildIds",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "int32"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repositoryId",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "repositoryType",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Build"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "builds"
                ],
                "summary": "QueueBuild",
                "description": "Queues a build",
                "operationId": "queueBuild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Build"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ignoreWarnings",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "checkInTicket",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Build"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "builds"
                ],
                "summary": "UpdateBuilds",
                "description": "Update a batch of builds",
                "operationId": "updateBuilds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Build"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Build"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}/changes": {
            "get": {
                "tags": [
                    "changes"
                ],
                "summary": "GetBuildChanges",
                "description": "Gets the changes associated with a build",
                "operationId": "getBuildChanges",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "continuationToken",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "The maximum number of changes to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "includeSourceChange",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Change"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/changes": {
            "get": {
                "tags": [
                    "changes"
                ],
                "summary": "GetChangesBetweenBuilds",
                "description": "Gets the changes associated between given builds",
                "operationId": "getChangesBetweenBuilds",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fromBuildId",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "toBuildId",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "The maximum number of changes to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Change"
                            }
                        }
                    }
                }
            }
        },
        "_apis/build/controllers/{controllerId}": {
            "get": {
                "tags": [
                    "controllers"
                ],
                "summary": "GetBuildController",
                "description": "Gets a controller",
                "operationId": "getBuildController",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "controllerId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildController"
                        }
                    }
                }
            }
        },
        "_apis/build/controllers": {
            "get": {
                "tags": [
                    "controllers"
                ],
                "summary": "GetBuildControllers",
                "description": "Gets controller, optionally filtered by name",
                "operationId": "getBuildControllers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildController"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/definitions": {
            "post": {
                "tags": [
                    "definitions"
                ],
                "summary": "CreateDefinition",
                "description": "Creates a new definition",
                "operationId": "createDefinition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BuildDefinition"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "definitionToCloneId",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "definitionToCloneRevision",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildDefinition"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "definitions"
                ],
                "summary": "GetDefinitions",
                "description": "Gets definitions, optionally filtered by name",
                "operationId": "getDefinitions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "repositoryId",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "repositoryType",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "queryOrder",
                        "description": "",
                        "required": false,
                        "type": "DefinitionQueryOrder"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "continuationToken",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minMetricsTime",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "definitionIds",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "int32"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "builtAfter",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "notBuiltAfter",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "includeAllProperties",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildDefinitionReference"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/definitions/{definitionId}": {
            "delete": {
                "tags": [
                    "definitions"
                ],
                "summary": "DeleteDefinition",
                "description": "Deletes a definition and all associated builds",
                "operationId": "deleteDefinition",
                "parameters": [
                    {
                        "in": "path",
                        "name": "definitionId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "definitions"
                ],
                "summary": "GetDefinition",
                "description": "Gets a definition, optionally at a specific revision",
                "operationId": "getDefinition",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "definitionId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "revision",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "minMetricsTime",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildDefinition"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "definitions"
                ],
                "summary": "UpdateDefinition",
                "description": "Updates an existing definition",
                "operationId": "updateDefinition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BuildDefinition"
                        }
                    },
                    {
                        "in": "path",
                        "name": "definitionId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "secretsSourceDefinitionId",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "secretsSourceDefinitionRevision",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildDefinition"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/folders/{path}": {
            "put": {
                "tags": [
                    "folders"
                ],
                "summary": "CreateFolder",
                "description": "Creates a new folder",
                "operationId": "createFolder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Folder"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Folder"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "folders"
                ],
                "summary": "DeleteFolder",
                "description": "Deletes a definition folder for given folder name and path and all it's existing definitions and it's corresponding builds",
                "operationId": "deleteFolder",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "folders"
                ],
                "summary": "UpdateFolder",
                "description": "Updates an existing folder at given  existing path",
                "operationId": "updateFolder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Folder"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Folder"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/folders/{*path}": {
            "get": {
                "tags": [
                    "folders"
                ],
                "summary": "GetFolders",
                "description": "Gets folders",
                "operationId": "getFolders",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "queryOrder",
                        "description": "",
                        "required": false,
                        "type": "FolderQueryOrder"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Folder"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}/logs/{logId}": {
            "get": {
                "tags": [
                    "logs"
                ],
                "summary": "GetBuildLog",
                "description": "Gets a log",
                "operationId": "getBuildLog",
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "logId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "startLine",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "endLine",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "Stream"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}/logs": {
            "get": {
                "tags": [
                    "logs"
                ],
                "summary": "GetBuildLogs",
                "description": "Gets logs for a build",
                "operationId": "getBuildLogs",
                "produces": [
                    "application/zip",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildLog"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/definitions/{definitionId}/metrics": {
            "get": {
                "tags": [
                    "metrics"
                ],
                "summary": "GetDefinitionMetrics",
                "description": "Gets metrics of a definition",
                "operationId": "getDefinitionMetrics",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "definitionId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "minMetricsTime",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildMetric"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/options": {
            "get": {
                "tags": [
                    "options"
                ],
                "summary": "GetBuildOptionDefinitions",
                "description": "",
                "operationId": "getBuildOptionDefinitions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildOptionDefinition"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}/report": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "GetBuildReport",
                "description": "Gets report for a build",
                "operationId": "getBuildReport",
                "produces": [
                    "text/html",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildReportMetadata"
                        }
                    }
                }
            }
        },
        "_apis/build/resourceusage": {
            "get": {
                "tags": [
                    "resourceUsage"
                ],
                "summary": "GetResourceUsage",
                "description": "",
                "operationId": "getResourceUsage",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildResourceUsage"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/definitions/{definitionId}/revisions": {
            "get": {
                "tags": [
                    "revisions"
                ],
                "summary": "GetDefinitionRevisions",
                "description": "Gets revisions of a definition",
                "operationId": "getDefinitionRevisions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "definitionId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildDefinitionRevision"
                            }
                        }
                    }
                }
            }
        },
        "_apis/build/settings": {
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "GetBuildSettings",
                "description": "",
                "operationId": "getBuildSettings",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildSettings"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "settings"
                ],
                "summary": "UpdateBuildSettings",
                "description": "Updates the build settings",
                "operationId": "updateBuildSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BuildSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildSettings"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}/tags/{tag}": {
            "put": {
                "tags": [
                    "tags"
                ],
                "summary": "AddBuildTag",
                "description": "Adds a tag to a build",
                "operationId": "addBuildTag",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "tag",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tags"
                ],
                "summary": "DeleteBuildTag",
                "description": "Deletes a tag from a build",
                "operationId": "deleteBuildTag",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "tag",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}/tags": {
            "post": {
                "tags": [
                    "tags"
                ],
                "summary": "AddBuildTags",
                "description": "Adds tag to a build",
                "operationId": "addBuildTags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "tags"
                ],
                "summary": "GetBuildTags",
                "description": "Gets the tags for a build",
                "operationId": "getBuildTags",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/tags": {
            "get": {
                "tags": [
                    "tags"
                ],
                "summary": "GetTags",
                "description": "",
                "operationId": "getTags",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/definitions/templates/{templateId}": {
            "delete": {
                "tags": [
                    "templates"
                ],
                "summary": "DeleteTemplate",
                "description": "Deletes a definition template",
                "operationId": "deleteTemplate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "templateId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "templates"
                ],
                "summary": "GetTemplate",
                "description": "Gets definition template filtered by id",
                "operationId": "getTemplate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "templateId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildDefinitionTemplate"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "templates"
                ],
                "summary": "SaveTemplate",
                "description": "Saves a definition template",
                "operationId": "saveTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BuildDefinitionTemplate"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "templateId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BuildDefinitionTemplate"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/definitions/templates": {
            "get": {
                "tags": [
                    "templates"
                ],
                "summary": "GetTemplates",
                "description": "",
                "operationId": "getTemplates",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildDefinitionTemplate"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}/timeline/{timelineId}": {
            "get": {
                "tags": [
                    "timeline"
                ],
                "summary": "GetBuildTimeline",
                "description": "Gets details for a build",
                "operationId": "getBuildTimeline",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "timelineId",
                        "description": "",
                        "required": false,
                        "type": "Guid"
                    },
                    {
                        "in": "query",
                        "name": "changeId",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "planId",
                        "description": "",
                        "required": false,
                        "type": "Guid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Timeline"
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/builds/{buildId}/workitems": {
            "get": {
                "tags": [
                    "workitems"
                ],
                "summary": "GetBuildWorkItemsRefs",
                "description": "Gets the work item ids associated with a build",
                "operationId": "getBuildWorkItemsRefs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "The maximum number of workitems to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "ResourceRef"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "workitems"
                ],
                "summary": "GetBuildWorkItemsRefsFromCommits",
                "description": "Gets the work item ids associated with build commits",
                "operationId": "getBuildWorkItemsRefsFromCommits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "buildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "The maximum number of workitems to return, also number of commits to consider if commitids are not sent",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "ResourceRef"
                            }
                        }
                    }
                }
            }
        },
        "{project}/_apis/build/workitems": {
            "get": {
                "tags": [
                    "workitems"
                ],
                "summary": "GetWorkItemsBetweenBuilds",
                "description": "Gets all the work item ids inbetween fromBuildId to toBuildId",
                "operationId": "getWorkItemsBetweenBuilds",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fromBuildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "toBuildId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "The maximum number of workitems to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "ResourceRef"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AgentPoolQueue": {
            "type": "ShallowReference",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "pool": {
                    "description": "The pool used by this queue.",
                    "$ref": "#/definitions/TaskAgentPoolReference"
                }
            }
        },
        "ArtifactResource": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "data": {
                    "description": "The type-specific resource data. For example, \"#/10002/5/drop\", \"$/drops/5\", \"\\\\myshare\\myfolder\\mydrops\\5\"",
                    "type": "string"
                },
                "downloadUrl": {
                    "description": "Link to the resource. This might include things like query parameters to download as a zip file",
                    "type": "string"
                },
                "properties": {
                    "description": "Properties of Artifact Resource",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "The type of the resource: File container, version control folder, UNC path, etc.",
                    "type": "string"
                },
                "url": {
                    "description": "Link to the resource",
                    "type": "string"
                }
            }
        },
        "Build": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "buildNumber": {
                    "description": "Build number/name of the build",
                    "type": "string"
                },
                "buildNumberRevision": {
                    "description": "Build number revision",
                    "type": "integer",
                    "format": "int32"
                },
                "controller": {
                    "description": "The build controller. This should only be set if the definition type is Xaml.",
                    "$ref": "#/definitions/BuildController"
                },
                "definition": {
                    "description": "The definition associated with the build",
                    "$ref": "#/definitions/DefinitionReference"
                },
                "deleted": {
                    "description": "Indicates whether the build has been deleted.",
                    "type": "boolean"
                },
                "deletedBy": {
                    "description": "Process or person that deleted the build",
                    "type": "IdentityRef"
                },
                "deletedDate": {
                    "description": "Date the build was deleted",
                    "type": "string",
                    "format": "date-time"
                },
                "deletedReason": {
                    "description": "Description of how the build was deleted",
                    "type": "string"
                },
                "demands": {
                    "description": "Demands",
                    "type": "array",
                    "items": {
                        "type": "Demand"
                    }
                },
                "finishTime": {
                    "description": "Time that the build was completed",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "description": "Id of the build",
                    "type": "integer",
                    "format": "int32"
                },
                "keepForever": {
                    "type": "boolean"
                },
                "lastChangedBy": {
                    "description": "Process or person that last changed the build",
                    "type": "IdentityRef"
                },
                "lastChangedDate": {
                    "description": "Date the build was last changed",
                    "type": "string",
                    "format": "date-time"
                },
                "logs": {
                    "description": "Log location of the build",
                    "$ref": "#/definitions/BuildLogReference"
                },
                "orchestrationPlan": {
                    "description": "Orchestration plan for the build",
                    "$ref": "#/definitions/TaskOrchestrationPlanReference"
                },
                "parameters": {
                    "description": "Parameters for the build",
                    "type": "string"
                },
                "plans": {
                    "description": "Orchestration plans associated with the build (build, cleanup)",
                    "type": "array",
                    "items": {
                        "type": "TaskOrchestrationPlanReference"
                    }
                },
                "priority": {
                    "description": "The build's priority",
                    "type": "QueuePriority",
                    "enum": [
                        "low",
                        "belowNormal",
                        "normal",
                        "aboveNormal",
                        "high"
                    ]
                },
                "project": {
                    "description": "The team project",
                    "type": "TeamProjectReference"
                },
                "properties": {
                    "type": "PropertiesCollection"
                },
                "quality": {
                    "description": "Quality of the xaml build (good, bad, etc.)",
                    "type": "string"
                },
                "queue": {
                    "description": "The queue. This should only be set if the definition type is Build.",
                    "$ref": "#/definitions/AgentPoolQueue"
                },
                "queueOptions": {
                    "description": "Queue option of the build.",
                    "type": "QueueOptions",
                    "enum": [
                        "none",
                        "doNotRun"
                    ]
                },
                "queuePosition": {
                    "description": "The current position of the build in the queue",
                    "type": "integer",
                    "format": "int32"
                },
                "queueTime": {
                    "description": "Time that the build was queued",
                    "type": "string",
                    "format": "date-time"
                },
                "reason": {
                    "description": "Reason that the build was created",
                    "type": "BuildReason",
                    "enum": [
                        "none",
                        "manual",
                        "individualCI",
                        "batchedCI",
                        "schedule",
                        "userCreated",
                        "validateShelveset",
                        "checkInShelveset",
                        "pullRequest",
                        "triggered",
                        "all"
                    ]
                },
                "repository": {
                    "description": "The repository",
                    "$ref": "#/definitions/BuildRepository"
                },
                "requestedBy": {
                    "description": "The identity that queued the build",
                    "type": "IdentityRef"
                },
                "requestedFor": {
                    "description": "The identity on whose behalf the build was queued",
                    "type": "IdentityRef"
                },
                "result": {
                    "description": "The build result",
                    "type": "BuildResult",
                    "enum": [
                        "none",
                        "succeeded",
                        "partiallySucceeded",
                        "failed",
                        "canceled"
                    ]
                },
                "retainedByRelease": {
                    "description": "Specifies if Build should be retained by Release",
                    "type": "boolean"
                },
                "sourceBranch": {
                    "description": "Source branch",
                    "type": "string"
                },
                "sourceVersion": {
                    "description": "Source version",
                    "type": "string"
                },
                "startTime": {
                    "description": "Time that the build was started",
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "description": "Status of the build",
                    "type": "BuildStatus",
                    "enum": [
                        "none",
                        "inProgress",
                        "completed",
                        "cancelling",
                        "postponed",
                        "notStarted",
                        "all"
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uri": {
                    "description": "Uri of the build",
                    "type": "string"
                },
                "url": {
                    "description": "REST url of the build",
                    "type": "string"
                },
                "validationResults": {
                    "type": "array",
                    "items": {
                        "type": "BuildRequestValidationResult"
                    }
                }
            }
        },
        "BuildAgent": {
            "type": "object",
            "properties": {
                "buildDirectory": {
                    "type": "string"
                },
                "controller": {
                    "$ref": "#/definitions/ShallowReference"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "messageQueueUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reservedForBuild": {
                    "type": "string"
                },
                "server": {
                    "$ref": "#/definitions/ShallowReference"
                },
                "status": {
                    "type": "AgentStatus",
                    "enum": [
                        "unavailable",
                        "available",
                        "offline"
                    ]
                },
                "statusMessage": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "uri": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "BuildArtifact": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The artifact id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "The name of the artifact",
                    "type": "string"
                },
                "resource": {
                    "description": "The actual resource",
                    "$ref": "#/definitions/ArtifactResource"
                }
            }
        },
        "BuildArtifactAddedEvent": {
            "type": "BuildUpdatedEvent",
            "properties": {
                "artifact": {
                    "$ref": "#/definitions/BuildArtifact"
                }
            }
        },
        "BuildBadge": {
            "type": "object",
            "properties": {
                "buildId": {
                    "description": "Build id, if exists that this badge corresponds to",
                    "type": "integer",
                    "format": "int32"
                },
                "imageUrl": {
                    "description": "Self Url that generates SVG",
                    "type": "string"
                }
            }
        },
        "BuildChangesCalculatedEvent": {
            "type": "BuildUpdatedEvent",
            "properties": {
                "changes": {
                    "type": "array",
                    "items": {
                        "type": "Change"
                    }
                }
            }
        },
        "BuildCompletedEvent": {
            "type": "BuildUpdatedEvent",
            "properties": {
            }
        },
        "BuildController": {
            "type": "ShallowReference",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "createdDate": {
                    "description": "The date the controller was created.",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "The description of the controller.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Indicates whether the controller is enabled.",
                    "type": "boolean"
                },
                "status": {
                    "description": "The status of the controller.",
                    "type": "ControllerStatus",
                    "enum": [
                        "unavailable",
                        "available",
                        "offline"
                    ]
                },
                "updatedDate": {
                    "description": "The date the controller was last updated.",
                    "type": "string",
                    "format": "date-time"
                },
                "uri": {
                    "description": "The controller's URI.",
                    "type": "string"
                }
            }
        },
        "BuildDefinition": {
            "type": "BuildDefinitionReference",
            "properties": {
                "badgeEnabled": {
                    "description": "Indicates whether badges are enabled for this definition",
                    "type": "boolean"
                },
                "build": {
                    "type": "array",
                    "items": {
                        "type": "BuildDefinitionStep"
                    }
                },
                "buildNumberFormat": {
                    "description": "The build number format",
                    "type": "string"
                },
                "comment": {
                    "description": "The comment entered when saving the definition",
                    "type": "string"
                },
                "demands": {
                    "type": "array",
                    "items": {
                        "type": "Demand"
                    }
                },
                "description": {
                    "description": "The description",
                    "type": "string"
                },
                "dropLocation": {
                    "description": "The drop location for the definition",
                    "type": "string"
                },
                "jobAuthorizationScope": {
                    "description": "Gets or sets the job authorization scope for builds which are queued against this definition",
                    "type": "BuildAuthorizationScope",
                    "enum": [
                        "projectCollection",
                        "project"
                    ]
                },
                "jobTimeoutInMinutes": {
                    "description": "Gets or sets the job execution timeout in minutes for builds which are queued against this definition",
                    "type": "integer",
                    "format": "int32"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "BuildOption"
                    }
                },
                "processParameters": {
                    "description": "Process Parameters",
                    "type": "ProcessParameters"
                },
                "properties": {
                    "type": "PropertiesCollection"
                },
                "repository": {
                    "description": "The repository",
                    "$ref": "#/definitions/BuildRepository"
                },
                "retentionRules": {
                    "type": "array",
                    "items": {
                        "type": "RetentionPolicy"
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "type": "BuildTrigger"
                    }
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/BuildDefinitionVariable"
                    }
                }
            }
        },
        "BuildDefinitionChangedEvent": {
            "type": "object",
            "properties": {
                "changeType": {
                    "type": "AuditAction",
                    "enum": [
                        "add",
                        "update",
                        "delete"
                    ]
                },
                "definition": {
                    "$ref": "#/definitions/BuildDefinition"
                }
            }
        },
        "BuildDefinitionChangingEvent": {
            "type": "object",
            "properties": {
                "changeType": {
                    "type": "AuditAction",
                    "enum": [
                        "add",
                        "update",
                        "delete"
                    ]
                },
                "newDefinition": {
                    "$ref": "#/definitions/BuildDefinition"
                },
                "originalDefinition": {
                    "$ref": "#/definitions/BuildDefinition"
                }
            }
        },
        "BuildDefinitionReference": {
            "type": "DefinitionReference",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "authoredBy": {
                    "description": "The author of the definition.",
                    "type": "IdentityRef"
                },
                "defaultBranch": {
                    "description": "The default branch of this definition",
                    "type": "string"
                },
                "draftOf": {
                    "description": "If this is a draft definition, it might have a parent",
                    "$ref": "#/definitions/DefinitionReference"
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "BuildMetric"
                    }
                },
                "quality": {
                    "description": "The quality of the definition document (draft, etc.)",
                    "type": "DefinitionQuality",
                    "enum": [
                        "definition",
                        "draft"
                    ]
                },
                "queue": {
                    "description": "The default queue which should be used for requests.",
                    "$ref": "#/definitions/AgentPoolQueue"
                }
            }
        },
        "BuildDefinitionRevision": {
            "type": "object",
            "properties": {
                "changedBy": {
                    "type": "IdentityRef"
                },
                "changedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "changeType": {
                    "type": "AuditAction",
                    "enum": [
                        "add",
                        "update",
                        "delete"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "definitionUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "BuildDefinitionSourceProvider": {
            "type": "object",
            "properties": {
                "definitionUri": {
                    "description": "Uri of the associated definition",
                    "type": "string"
                },
                "fields": {
                    "description": "fields associated with this build definition",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "Id of this source provider",
                    "type": "integer",
                    "format": "int32"
                },
                "lastModified": {
                    "description": "The lst time this source provider was modified",
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "description": "Name of the source provider",
                    "type": "string"
                },
                "supportedTriggerTypes": {
                    "description": "Which trigger types are supported by this definition source provider",
                    "type": "DefinitionTriggerType",
                    "enum": [
                        "none",
                        "continuousIntegration",
                        "batchedContinuousIntegration",
                        "schedule",
                        "gatedCheckIn",
                        "batchedGatedCheckIn",
                        "all"
                    ]
                }
            }
        },
        "BuildDefinitionStep": {
            "type": "object",
            "properties": {
                "alwaysRun": {
                    "type": "boolean"
                },
                "continueOnError": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "inputs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "task": {
                    "$ref": "#/definitions/TaskDefinitionReference"
                },
                "timeoutInMinutes": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "BuildDefinitionTemplate": {
            "type": "object",
            "properties": {
                "canDelete": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icons": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "iconTaskId": {
                    "type": "Guid"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "$ref": "#/definitions/BuildDefinition"
                }
            }
        },
        "BuildDefinitionVariable": {
            "type": "object",
            "properties": {
                "allowOverride": {
                    "type": "boolean"
                },
                "isSecret": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "BuildDeletedEvent": {
            "type": "RealtimeBuildEvent",
            "properties": {
                "build": {
                    "$ref": "#/definitions/Build"
                }
            }
        },
        "BuildDeployment": {
            "type": "object",
            "properties": {
                "deployment": {
                    "$ref": "#/definitions/BuildSummary"
                },
                "sourceBuild": {
                    "$ref": "#/definitions/ShallowReference"
                }
            }
        },
        "BuildDestroyedEvent": {
            "type": "RealtimeBuildEvent",
            "properties": {
                "build": {
                    "$ref": "#/definitions/Build"
                }
            }
        },
        "BuildLog": {
            "type": "BuildLogReference",
            "properties": {
                "createdOn": {
                    "description": "The date the log was created.",
                    "type": "string",
                    "format": "date-time"
                },
                "lastChangedOn": {
                    "description": "The date the log was last changed.",
                    "type": "string",
                    "format": "date-time"
                },
                "lineCount": {
                    "description": "The number of lines in the log.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "BuildLogReference": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The id of the log.",
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "description": "The type of the log location.",
                    "type": "string"
                },
                "url": {
                    "description": "Full link to the log resource.",
                    "type": "string"
                }
            }
        },
        "BuildMetric": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Scoped date of the metric",
                    "type": "string",
                    "format": "date-time"
                },
                "intValue": {
                    "description": "The int value of the metric",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "The name of the metric",
                    "type": "string"
                },
                "scope": {
                    "description": "The scope of the metric",
                    "type": "string"
                }
            }
        },
        "BuildOption": {
            "type": "object",
            "properties": {
                "definition": {
                    "$ref": "#/definitions/BuildOptionDefinitionReference"
                },
                "enabled": {
                    "type": "boolean"
                },
                "inputs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "BuildOptionDefinition": {
            "type": "BuildOptionDefinitionReference",
            "properties": {
                "description": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "BuildOptionGroupDefinition"
                    }
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "BuildOptionInputDefinition"
                    }
                },
                "name": {
                    "type": "string"
                },
                "ordinal": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "BuildOptionDefinitionReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "Guid"
                }
            }
        },
        "BuildOptionGroupDefinition": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "isExpanded": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "BuildOptionInputDefinition": {
            "type": "object",
            "properties": {
                "defaultValue": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "help": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "required": {
                    "type": "boolean"
                },
                "type": {
                    "type": "BuildOptionInputType",
                    "enum": [
                        "string",
                        "boolean",
                        "stringList",
                        "radio",
                        "pickList",
                        "multiLine"
                    ]
                },
                "visibleRule": {
                    "type": "string"
                }
            }
        },
        "BuildPollingSummaryEvent": {
            "type": "object",
            "properties": {
            }
        },
        "BuildProcessTemplate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fileExists": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "parameters": {
                    "type": "string"
                },
                "serverPath": {
                    "type": "string"
                },
                "supportedReasons": {
                    "type": "BuildReason",
                    "enum": [
                        "none",
                        "manual",
                        "individualCI",
                        "batchedCI",
                        "schedule",
                        "userCreated",
                        "validateShelveset",
                        "checkInShelveset",
                        "pullRequest",
                        "triggered",
                        "all"
                    ]
                },
                "teamProject": {
                    "type": "string"
                },
                "templateType": {
                    "type": "ProcessTemplateType",
                    "enum": [
                        "custom",
                        "default",
                        "upgrade"
                    ]
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "BuildQueuedEvent": {
            "type": "BuildUpdatedEvent",
            "properties": {
            }
        },
        "BuildReference": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "buildNumber": {
                    "description": "Build number/name of the build",
                    "type": "string"
                },
                "finishTime": {
                    "description": "Time that the build was completed",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "description": "Id of the build",
                    "type": "integer",
                    "format": "int32"
                },
                "queueTime": {
                    "description": "Time that the build was queued",
                    "type": "string",
                    "format": "date-time"
                },
                "requestedFor": {
                    "description": "The identity on whose behalf the build was queued",
                    "type": "IdentityRef"
                },
                "result": {
                    "description": "The build result",
                    "type": "BuildResult",
                    "enum": [
                        "none",
                        "succeeded",
                        "partiallySucceeded",
                        "failed",
                        "canceled"
                    ]
                },
                "startTime": {
                    "description": "Time that the build was started",
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "description": "Status of the build",
                    "type": "BuildStatus",
                    "enum": [
                        "none",
                        "inProgress",
                        "completed",
                        "cancelling",
                        "postponed",
                        "notStarted",
                        "all"
                    ]
                }
            }
        },
        "BuildReportMetadata": {
            "type": "object",
            "properties": {
                "buildId": {
                    "type": "integer",
                    "format": "int32"
                },
                "content": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "BuildRepository": {
            "type": "object",
            "properties": {
                "checkoutSubmodules": {
                    "type": "boolean"
                },
                "clean": {
                    "description": "Indicates whether to clean the target folder when getting code from the repository. This is a String so that it can reference variables.",
                    "type": "string"
                },
                "defaultBranch": {
                    "description": "Gets or sets the name of the default branch.",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Gets or sets the friendly name of the repository.",
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "rootFolder": {
                    "description": "Gets or sets the root folder.",
                    "type": "string"
                },
                "type": {
                    "description": "Gets or sets the type of the repository.",
                    "type": "string"
                },
                "url": {
                    "description": "Gets or sets the url of the repository.",
                    "type": "string"
                }
            }
        },
        "BuildRequestValidationResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "ValidationResult",
                    "enum": [
                        "oK",
                        "warning",
                        "error"
                    ]
                }
            }
        },
        "BuildResourceUsage": {
            "type": "object",
            "properties": {
                "distributedTaskAgents": {
                    "type": "integer",
                    "format": "int32"
                },
                "paidPrivateAgentSlots": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalUsage": {
                    "type": "integer",
                    "format": "int32"
                },
                "xamlControllers": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "BuildServer": {
            "type": "object",
            "properties": {
                "agents": {
                    "type": "array",
                    "items": {
                        "type": "ShallowReference"
                    }
                },
                "controller": {
                    "$ref": "#/definitions/ShallowReference"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isVirtual": {
                    "type": "boolean"
                },
                "messageQueueUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "requireClientCertificates": {
                    "type": "boolean"
                },
                "status": {
                    "type": "ServiceHostStatus",
                    "enum": [
                        "online",
                        "offline"
                    ]
                },
                "statusChangedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "uri": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "BuildSettings": {
            "type": "object",
            "properties": {
                "daysToKeepDeletedBuildsBeforeDestroy": {
                    "type": "integer",
                    "format": "int32"
                },
                "defaultRetentionPolicy": {
                    "$ref": "#/definitions/RetentionPolicy"
                },
                "maximumRetentionPolicy": {
                    "$ref": "#/definitions/RetentionPolicy"
                }
            }
        },
        "BuildStartedEvent": {
            "type": "BuildUpdatedEvent",
            "properties": {
            }
        },
        "BuildSummary": {
            "type": "object",
            "properties": {
                "build": {
                    "$ref": "#/definitions/ShallowReference"
                },
                "finishTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "keepForever": {
                    "type": "boolean"
                },
                "quality": {
                    "type": "string"
                },
                "reason": {
                    "type": "BuildReason",
                    "enum": [
                        "none",
                        "manual",
                        "individualCI",
                        "batchedCI",
                        "schedule",
                        "userCreated",
                        "validateShelveset",
                        "checkInShelveset",
                        "pullRequest",
                        "triggered",
                        "all"
                    ]
                },
                "requestedFor": {
                    "type": "IdentityRef"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "BuildStatus",
                    "enum": [
                        "none",
                        "inProgress",
                        "completed",
                        "cancelling",
                        "postponed",
                        "notStarted",
                        "all"
                    ]
                }
            }
        },
        "BuildTrigger": {
            "type": "object",
            "properties": {
                "triggerType": {
                    "type": "DefinitionTriggerType",
                    "enum": [
                        "none",
                        "continuousIntegration",
                        "batchedContinuousIntegration",
                        "schedule",
                        "gatedCheckIn",
                        "batchedGatedCheckIn",
                        "all"
                    ]
                }
            }
        },
        "BuildUpdatedEvent": {
            "type": "RealtimeBuildEvent",
            "properties": {
                "build": {
                    "$ref": "#/definitions/Build"
                }
            }
        },
        "BuildWorkspace": {
            "type": "object",
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "type": "MappingDetails"
                    }
                }
            }
        },
        "Change": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "The author of the change.",
                    "type": "IdentityRef"
                },
                "displayUri": {
                    "description": "The location of a user-friendly representation of the resource.",
                    "type": "string"
                },
                "id": {
                    "description": "Something that identifies the change. For a commit, this would be the SHA1. For a TFVC changeset, this would be the changeset id.",
                    "type": "string"
                },
                "location": {
                    "description": "The location of the full representation of the resource.",
                    "type": "string"
                },
                "message": {
                    "description": "A description of the change. This might be a commit message or changeset description.",
                    "type": "string"
                },
                "messageTruncated": {
                    "description": "Indicates whether the message was truncated",
                    "type": "boolean"
                },
                "timestamp": {
                    "description": "A timestamp for the change.",
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "description": "The type of change. \"commit\", \"changeset\", etc.",
                    "type": "string"
                }
            }
        },
        "ConsoleLogEvent": {
            "type": "RealtimeBuildEvent",
            "properties": {
                "lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timelineId": {
                    "type": "Guid"
                },
                "timelineRecordId": {
                    "type": "Guid"
                }
            }
        },
        "ContinuousDeploymentDefinition": {
            "type": "object",
            "properties": {
                "connectedService": {
                    "description": "The connected service associated with the continuous deployment",
                    "type": "WebApiConnectedServiceRef"
                },
                "definition": {
                    "description": "The definition associated with the continuous deployment",
                    "$ref": "#/definitions/ShallowReference"
                },
                "gitBranch": {
                    "type": "string"
                },
                "hostedServiceName": {
                    "type": "string"
                },
                "project": {
                    "type": "TeamProjectReference"
                },
                "repositoryId": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "webspace": {
                    "type": "string"
                }
            }
        },
        "ContinuousIntegrationTrigger": {
            "type": "BuildTrigger",
            "properties": {
                "batchChanges": {
                    "type": "boolean"
                },
                "branchFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxConcurrentBuildsPerBranch": {
                    "type": "integer",
                    "format": "int32"
                },
                "pathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pollingInterval": {
                    "description": "The polling interval in seconds.",
                    "type": "integer",
                    "format": "int32"
                },
                "pollingJobId": {
                    "description": "This is the id of the polling job that polls the external repository.  Once the build definition is saved/updated, this value is set.",
                    "type": "Guid"
                }
            }
        },
        "DefinitionReference": {
            "type": "ShallowReference",
            "properties": {
                "createdDate": {
                    "description": "The date the definition was created",
                    "type": "string",
                    "format": "date-time"
                },
                "path": {
                    "description": "The path this definitions belongs to",
                    "type": "string"
                },
                "project": {
                    "description": "The project.",
                    "type": "TeamProjectReference"
                },
                "queueStatus": {
                    "description": "If builds can be queued from this definition",
                    "type": "DefinitionQueueStatus",
                    "enum": [
                        "enabled",
                        "paused",
                        "disabled"
                    ]
                },
                "revision": {
                    "description": "The definition revision number.",
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "description": "The type of the definition.",
                    "type": "DefinitionType",
                    "enum": [
                        "xaml",
                        "build"
                    ]
                },
                "uri": {
                    "description": "The Uri of the definition",
                    "type": "string"
                }
            }
        },
        "Demand": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Deployment": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "DeploymentBuild": {
            "type": "Deployment",
            "properties": {
                "buildId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DeploymentDeploy": {
            "type": "Deployment",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "DeploymentTest": {
            "type": "Deployment",
            "properties": {
                "runId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Folder": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "description": "Process or person who created the folder",
                    "type": "IdentityRef"
                },
                "createdOn": {
                    "description": "Creation date of the folder",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "The description of the folder",
                    "type": "string"
                },
                "lastChangedBy": {
                    "description": "Process or person that last changed the folder",
                    "type": "IdentityRef"
                },
                "lastChangedDate": {
                    "description": "Date the folder was last changed",
                    "type": "string",
                    "format": "date-time"
                },
                "path": {
                    "description": "The path of the folder",
                    "type": "string"
                },
                "project": {
                    "description": "The project.",
                    "type": "TeamProjectReference"
                }
            }
        },
        "GatedCheckInTrigger": {
            "type": "BuildTrigger",
            "properties": {
                "pathFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "runContinuousIntegration": {
                    "type": "boolean"
                },
                "useWorkspaceMappings": {
                    "type": "boolean"
                }
            }
        },
        "InformationNode": {
            "type": "object",
            "properties": {
                "fields": {
                    "description": "Fields of the information node",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "lastModifiedBy": {
                    "description": "Process or person that last modified this node",
                    "type": "string"
                },
                "lastModifiedDate": {
                    "description": "Date this node was last modified",
                    "type": "string",
                    "format": "date-time"
                },
                "nodeId": {
                    "description": "Node Id of this information node",
                    "type": "integer",
                    "format": "int32"
                },
                "parentId": {
                    "description": "Id of parent node (xml tree)",
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "description": "The type of the information node",
                    "type": "string"
                }
            }
        },
        "Issue": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "IssueType",
                    "enum": [
                        "error",
                        "warning"
                    ]
                }
            }
        },
        "MappingDetails": {
            "type": "object",
            "properties": {
                "localPath": {
                    "type": "string"
                },
                "mappingType": {
                    "type": "string"
                },
                "serverPath": {
                    "type": "string"
                }
            }
        },
        "PropertyValue": {
            "type": "object",
            "properties": {
                "changedBy": {
                    "description": "Guid of identity that changed this property value",
                    "type": "Guid"
                },
                "changedDate": {
                    "description": "The date this property value was changed",
                    "type": "string",
                    "format": "date-time"
                },
                "propertyName": {
                    "description": "Name in the name value mapping",
                    "type": "string"
                },
                "value": {
                    "description": "Value in the name value mapping",
                    "type": "object"
                }
            }
        },
        "RealtimeBuildEvent": {
            "type": "object",
            "properties": {
                "buildId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RequestReference": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id of the resource",
                    "type": "integer",
                    "format": "int32"
                },
                "requestedFor": {
                    "description": "Name of the requestor",
                    "type": "IdentityRef"
                },
                "url": {
                    "description": "Full http link to the resource",
                    "type": "string"
                }
            }
        },
        "RetentionPolicy": {
            "type": "object",
            "properties": {
                "artifacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "artifactTypesToDelete": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "branches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "daysToKeep": {
                    "type": "integer",
                    "format": "int32"
                },
                "deleteBuildRecord": {
                    "type": "boolean"
                },
                "deleteTestResults": {
                    "type": "boolean"
                },
                "minimumToKeep": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Schedule": {
            "type": "object",
            "properties": {
                "branchFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "daysToBuild": {
                    "description": "Days for a build (flags enum for days of the week)",
                    "type": "ScheduleDays",
                    "enum": [
                        "none",
                        "monday",
                        "tuesday",
                        "wednesday",
                        "thursday",
                        "friday",
                        "saturday",
                        "sunday",
                        "all"
                    ]
                },
                "scheduleJobId": {
                    "description": "The Job Id of the Scheduled job that will queue the scheduled build. Since a single trigger can have multiple schedules and we want a single job to process a single schedule (since each schedule has a list of branches to build), the schedule itself needs to define the Job Id. This value will be filled in when a definition is added or updated.  The UI does not provide it or use it.",
                    "type": "Guid"
                },
                "startHours": {
                    "description": "Local timezone hour to start",
                    "type": "integer",
                    "format": "int32"
                },
                "startMinutes": {
                    "description": "Local timezone minute to start",
                    "type": "integer",
                    "format": "int32"
                },
                "timeZoneId": {
                    "description": "Time zone of the build schedule (string representation of the time zone id)",
                    "type": "string"
                }
            }
        },
        "ScheduleTrigger": {
            "type": "BuildTrigger",
            "properties": {
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "Schedule"
                    }
                }
            }
        },
        "ShallowReference": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id of the resource",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "Name of the linked resource (definition name, controller name, etc.)",
                    "type": "string"
                },
                "url": {
                    "description": "Full http link to the resource",
                    "type": "string"
                }
            }
        },
        "SvnMappingDetails": {
            "type": "object",
            "properties": {
                "depth": {
                    "type": "integer",
                    "format": "int32"
                },
                "ignoreExternals": {
                    "type": "boolean"
                },
                "localPath": {
                    "type": "string"
                },
                "revision": {
                    "type": "string"
                },
                "serverPath": {
                    "type": "string"
                }
            }
        },
        "SvnWorkspace": {
            "type": "object",
            "properties": {
                "mappings": {
                    "type": "array",
                    "items": {
                        "type": "SvnMappingDetails"
                    }
                }
            }
        },
        "SyncBuildCompletedEvent": {
            "type": "BuildUpdatedEvent",
            "properties": {
            }
        },
        "SyncBuildStartedEvent": {
            "type": "BuildUpdatedEvent",
            "properties": {
            }
        },
        "TaskAgentPoolReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TaskDefinitionReference": {
            "type": "object",
            "properties": {
                "definitionType": {
                    "type": "string"
                },
                "id": {
                    "type": "Guid"
                },
                "versionSpec": {
                    "type": "string"
                }
            }
        },
        "TaskOrchestrationPlanReference": {
            "type": "object",
            "properties": {
                "orchestrationType": {
                    "description": "Orchestration Type for Build (build, cleanup etc.)",
                    "type": "integer",
                    "format": "int32"
                },
                "planId": {
                    "type": "Guid"
                }
            }
        },
        "Timeline": {
            "type": "TimelineReference",
            "properties": {
                "lastChangedBy": {
                    "type": "Guid"
                },
                "lastChangedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "type": "TimelineRecord"
                    }
                }
            }
        },
        "TimelineRecord": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "changeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currentOperation": {
                    "type": "string"
                },
                "details": {
                    "$ref": "#/definitions/TimelineReference"
                },
                "errorCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "finishTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "Guid"
                },
                "issues": {
                    "type": "array",
                    "items": {
                        "type": "Issue"
                    }
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time"
                },
                "log": {
                    "$ref": "#/definitions/BuildLogReference"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "format": "int32"
                },
                "parentId": {
                    "type": "Guid"
                },
                "percentComplete": {
                    "type": "integer",
                    "format": "int32"
                },
                "result": {
                    "type": "TaskResult",
                    "enum": [
                        "succeeded",
                        "succeededWithIssues",
                        "failed",
                        "canceled",
                        "skipped",
                        "abandoned"
                    ]
                },
                "resultCode": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "state": {
                    "type": "TimelineRecordState",
                    "enum": [
                        "pending",
                        "inProgress",
                        "completed"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "warningCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "workerName": {
                    "type": "string"
                }
            }
        },
        "TimelineRecordsUpdatedEvent": {
            "type": "RealtimeBuildEvent",
            "properties": {
                "timelineRecords": {
                    "type": "array",
                    "items": {
                        "type": "TimelineRecord"
                    }
                }
            }
        },
        "TimelineReference": {
            "type": "object",
            "properties": {
                "changeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "Guid"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "WorkspaceMapping": {
            "type": "object",
            "properties": {
                "definitionUri": {
                    "description": "Uri of the associated definition",
                    "type": "string"
                },
                "depth": {
                    "description": "Depth of this mapping",
                    "type": "integer",
                    "format": "int32"
                },
                "localItem": {
                    "description": "local location of the definition",
                    "type": "string"
                },
                "mappingType": {
                    "description": "type of workspace mapping",
                    "type": "WorkspaceMappingType",
                    "enum": [
                        "map",
                        "cloak"
                    ]
                },
                "serverItem": {
                    "description": "Server location of the definition",
                    "type": "string"
                },
                "workspaceId": {
                    "description": "Id of the workspace",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "WorkspaceTemplate": {
            "type": "object",
            "properties": {
                "definitionUri": {
                    "description": "Uri of the associated definition",
                    "type": "string"
                },
                "lastModifiedBy": {
                    "description": "The identity that last modified this template",
                    "type": "string"
                },
                "lastModifiedDate": {
                    "description": "The last time this template was modified",
                    "type": "string",
                    "format": "date-time"
                },
                "mappings": {
                    "description": "List of workspace mappings",
                    "type": "array",
                    "items": {
                        "type": "WorkspaceMapping"
                    }
                },
                "workspaceId": {
                    "description": "Id of the workspace for this template",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "XamlBuildDefinition": {
            "type": "DefinitionReference",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "batchSize": {
                    "description": "Batch size of the definition",
                    "type": "integer",
                    "format": "int32"
                },
                "buildArgs": {
                    "type": "string"
                },
                "continuousIntegrationQuietPeriod": {
                    "description": "The continuous integration quiet period",
                    "type": "integer",
                    "format": "int32"
                },
                "controller": {
                    "description": "The build controller",
                    "$ref": "#/definitions/BuildController"
                },
                "createdOn": {
                    "description": "The date this definition was created",
                    "type": "string",
                    "format": "date-time"
                },
                "defaultDropLocation": {
                    "description": "Default drop location for builds from this definition",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the definition",
                    "type": "string"
                },
                "lastBuild": {
                    "description": "The last build on this definition",
                    "$ref": "#/definitions/ShallowReference"
                },
                "repository": {
                    "description": "The repository",
                    "$ref": "#/definitions/BuildRepository"
                },
                "supportedReasons": {
                    "description": "The reasons supported by the template",
                    "type": "BuildReason",
                    "enum": [
                        "none",
                        "manual",
                        "individualCI",
                        "batchedCI",
                        "schedule",
                        "userCreated",
                        "validateShelveset",
                        "checkInShelveset",
                        "pullRequest",
                        "triggered",
                        "all"
                    ]
                },
                "triggerType": {
                    "description": "How builds are triggered from this definition",
                    "type": "DefinitionTriggerType",
                    "enum": [
                        "none",
                        "continuousIntegration",
                        "batchedContinuousIntegration",
                        "schedule",
                        "gatedCheckIn",
                        "batchedGatedCheckIn",
                        "all"
                    ]
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}