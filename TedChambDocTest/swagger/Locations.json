{
  "swagger": "2.0",
  "info": {
    "title": "Location",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "connectionData"
    },
    {
      "name": "serviceDefinitions"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/connectiondata": {
      "get": {
        "tags": [
          "connectionData"
        ],
        "summary": "GetConnectionData",
        "description": "This was copied and adapted from TeamFoundationConnectionService.Connect()",
        "operationId": "getConnectionData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "connectOptions",
            "description": "",
            "required": false,
            "type": "string",
            "format": "ConnectOptions"
          },
          {
            "in": "query",
            "name": "lastChangeId",
            "description": "Obsolete 32-bit LastChangeId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "lastChangeId64",
            "description": "Non-truncated 64-bit LastChangeId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ConnectionData"
            }
          }
        }
      }
    },
    "/_apis/servicedefinitions": {
      "patch": {
        "tags": [
          "serviceDefinitions"
        ],
        "summary": "UpdateServiceDefinitions",
        "description": "",
        "operationId": "updateServiceDefinitions",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "VssJsonCollectionWrapperV"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/servicedefinitions/{serviceType}": {
      "get": {
        "tags": [
          "serviceDefinitions"
        ],
        "summary": "GetServiceDefinitions",
        "description": "",
        "operationId": "getServiceDefinitions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceType",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceDefinition"
              }
            }
          }
        }
      }
    },
    "/_apis/servicedefinitions/{serviceType}/{identifier}": {
      "delete": {
        "tags": [
          "serviceDefinitions"
        ],
        "summary": "DeleteServiceDefinition",
        "description": "",
        "operationId": "deleteServiceDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "serviceType",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "identifier",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "serviceDefinitions"
        ],
        "summary": "GetServiceDefinition",
        "description": "",
        "operationId": "getServiceDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceType",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "identifier",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "allowFaultIn",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceDefinition"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessMapping": {
      "type": "object",
      "properties": {
        "accessPoint": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "moniker": {
          "type": "string"
        },
        "serviceOwner": {
          "description": "The service which owns this access mapping e.g. TFS, ELS, etc.",
          "type": "string",
          "format": "uuid"
        },
        "virtualDirectory": {
          "description": "Part of the access mapping which applies context after the access point of the server.",
          "type": "string"
        }
      }
    },
    "ConnectionData": {
      "type": "object",
      "properties": {
        "authenticatedUser": {
          "description": "The Id of the authenticated user who made this request. More information about the user can be obtained by passing this Id to the Identity service",
          "$ref": "#/definitions/Identity"
        },
        "authorizedUser": {
          "description": "The Id of the authorized user who made this request. More information about the user can be obtained by passing this Id to the Identity service",
          "$ref": "#/definitions/Identity"
        },
        "deploymentId": {
          "description": "The id for the server.",
          "type": "string",
          "format": "uuid"
        },
        "instanceId": {
          "description": "The instance id for this host.",
          "type": "string",
          "format": "uuid"
        },
        "lastUserAccess": {
          "description": "The last user access for this instance.  Null if not requested specifically.",
          "type": "string",
          "format": "date-time"
        },
        "locationServiceData": {
          "description": "Data that the location service holds.",
          "$ref": "#/definitions/LocationServiceData"
        },
        "webApplicationRelativeDirectory": {
          "description": "The virtual directory of the host we are talking to.",
          "type": "string"
        }
      }
    },
    "Identity": {
      "type": "object",
      "properties": {
        "customDisplayName": {
          "type": "string"
        },
        "descriptor": {
          "type": "string",
          "format": "IdentityDescriptor"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isActive": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "masterId": {
          "type": "string",
          "format": "uuid"
        },
        "memberIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "memberOf": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "IdentityDescriptor"
          }
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "IdentityDescriptor"
          }
        },
        "metaTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "providerDisplayName": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        },
        "uniqueUserId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LocationMapping": {
      "type": "object",
      "properties": {
        "accessMappingMoniker": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "LocationServiceData": {
      "type": "object",
      "properties": {
        "accessMappings": {
          "description": "Data about the access mappings contained by this location service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessMapping"
          }
        },
        "clientCacheFresh": {
          "description": "Data that the location service holds.",
          "type": "boolean"
        },
        "clientCacheTimeToLive": {
          "description": "The time to live on the location service cache.",
          "type": "integer",
          "format": "int32"
        },
        "defaultAccessMappingMoniker": {
          "description": "The default access mapping moniker for the server.",
          "type": "string"
        },
        "lastChangeId": {
          "description": "The obsolete id for the last change that took place on the server (use LastChangeId64).",
          "type": "integer",
          "format": "int32"
        },
        "lastChangeId64": {
          "description": "The non-truncated 64-bit id for the last change that took place on the server.",
          "type": "integer",
          "format": "int64"
        },
        "serviceDefinitions": {
          "description": "Data about the service definitions contained by this location service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDefinition"
          }
        },
        "serviceOwner": {
          "description": "The identifier of the deployment which is hosting this location data (e.g. SPS, TFS, ELS, Napa, etc.)",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "PropertiesCollection": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "object"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServiceDefinition": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "format": "uuid"
        },
        "inheritLevel": {
          "enum": [
            "none",
            "deployment",
            "account",
            "collection",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Location.InheritLevel"
          }
        },
        "locationMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationMapping"
          }
        },
        "maxVersion": {
          "description": "Maximum api version that this resource supports (current server version for this resource). Copied from ApiResourceLocation.",
          "type": "string"
        },
        "minVersion": {
          "description": "Minimum api version that this resource supports. Copied from ApiResourceLocation.",
          "type": "string"
        },
        "parentIdentifier": {
          "type": "string",
          "format": "uuid"
        },
        "parentServiceType": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "relativePath": {
          "type": "string"
        },
        "relativeToSetting": {
          "enum": [
            "context",
            "webApplication",
            "fullyQualified"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Location.RelativeToSetting"
          }
        },
        "releasedVersion": {
          "description": "The latest version of this resource location that is in \"Release\" (non-preview) mode. Copied from ApiResourceLocation.",
          "type": "string"
        },
        "resourceVersion": {
          "description": "The current resource version supported by this resource location. Copied from ApiResourceLocation.",
          "type": "integer",
          "format": "int32"
        },
        "serviceOwner": {
          "description": "The service which owns this definition e.g. TFS, ELS, etc.",
          "type": "string",
          "format": "uuid"
        },
        "serviceType": {
          "type": "string"
        },
        "status": {
          "enum": [
            "assigned",
            "active",
            "moving"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Location.ServiceStatus"
          }
        },
        "toolId": {
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "VssJsonCollectionWrapperV": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}