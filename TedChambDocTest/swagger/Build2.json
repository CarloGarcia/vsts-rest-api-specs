{
  "swagger": "2.0",
  "info": {
    "title": "Build",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "artifacts"
    },
    {
      "name": "badge"
    },
    {
      "name": "buildbadge"
    },
    {
      "name": "builds"
    },
    {
      "name": "changes"
    },
    {
      "name": "controllers"
    },
    {
      "name": "definitions"
    },
    {
      "name": "folders"
    },
    {
      "name": "logs"
    },
    {
      "name": "metrics"
    },
    {
      "name": "options"
    },
    {
      "name": "report"
    },
    {
      "name": "resourceUsage"
    },
    {
      "name": "revisions"
    },
    {
      "name": "settings"
    },
    {
      "name": "tags"
    },
    {
      "name": "templates"
    },
    {
      "name": "timeline"
    },
    {
      "name": "workitems"
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "pat": {
      "type": "basic",
      "description": "Personal access token"
    }
  },
  "security": [
    {
      "pat": []
    }
  ], 
  "paths": {
    "/_apis/build/builds": {
      "get": {
        "tags": [
          "builds"
        ],
        "summary": "GetBuilds",
        "description": "Gets builds",
        "operationId": "getBuilds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "definitions",
            "description": "A comma-delimited list of definition ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "queues",
            "description": "A comma-delimited list of queue ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "buildNumber",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "minFinishTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxFinishTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "requestedFor",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "reasonFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "buildReason"
          },
          {
            "in": "query",
            "name": "statusFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "buildStatus"
          },
          {
            "in": "query",
            "name": "resultFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "buildResult"
          },
          {
            "in": "query",
            "name": "tagFilters",
            "description": "A comma-delimited list of tags",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "properties",
            "description": "A comma-delimited list of properties to include in the results",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "The maximum number of builds to retrieve",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxBuildsPerDefinition",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "deletedFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "queryDeletedOption"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "",
            "required": false,
            "type": "string",
            "format": "buildQueryOrder"
          },
          {
            "in": "query",
            "name": "branchName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "buildIds",
            "description": "",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "repositoryId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "repositoryType",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/build"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "builds"
        ],
        "summary": "QueueBuild",
        "description": "Queues a build",
        "operationId": "queueBuild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/build"
            }
          },
          {
            "in": "query",
            "name": "ignoreWarnings",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "checkInTicket",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/build"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "builds"
        ],
        "summary": "UpdateBuilds",
        "description": "Update a batch of builds",
        "operationId": "updateBuilds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/build"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/build"
              }
            }
          }
        }
      }
    },
    "/_apis/build/builds/{buildId}": {
      "delete": {
        "tags": [
          "builds"
        ],
        "summary": "DeleteBuild",
        "description": "Deletes a build",
        "operationId": "deleteBuild",
        "parameters": [
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "builds"
        ],
        "summary": "GetBuild",
        "description": "Gets a build",
        "operationId": "getBuild",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "A comma-delimited list of properties to include in the results",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/build"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "builds"
        ],
        "summary": "UpdateBuild",
        "description": "Updates a build",
        "operationId": "updateBuild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/build"
            }
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/build"
            }
          }
        }
      }
    },
    "/_apis/build/builds/{buildId}/artifacts": {
      "post": {
        "tags": [
          "artifacts"
        ],
        "summary": "CreateArtifact",
        "description": "Associates an artifact with a build",
        "operationId": "createArtifact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/buildArtifact"
            }
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildArtifact"
            }
          }
        }
      },
      "get": {
        "tags": [
          "artifacts"
        ],
        "summary": "GetArtifacts",
        "description": "Gets all artifacts for a build",
        "operationId": "getArtifacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildArtifact"
              }
            }
          }
        }
      }
    },
    "/_apis/build/builds/{buildId}/artifacts/{artifactName}": {
      "get": {
        "tags": [
          "artifacts"
        ],
        "summary": "GetArtifact",
        "description": "Gets a specific artifact for a build",
        "operationId": "getArtifact",
        "produces": [
          "application/zip",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "artifactName",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildArtifact"
            }
          }
        }
      }
    },
    "/_apis/build/controllers": {
      "get": {
        "tags": [
          "controllers"
        ],
        "summary": "GetBuildControllers",
        "description": "Gets controller, optionally filtered by name",
        "operationId": "getBuildControllers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildController"
              }
            }
          }
        }
      }
    },
    "/_apis/build/controllers/{controllerId}": {
      "get": {
        "tags": [
          "controllers"
        ],
        "summary": "GetBuildController",
        "description": "Gets a controller",
        "operationId": "getBuildController",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "controllerId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildController"
            }
          }
        }
      }
    },
    "/_apis/build/definitions": {
      "post": {
        "tags": [
          "definitions"
        ],
        "summary": "CreateDefinition",
        "description": "Creates a new definition",
        "operationId": "createDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          },
          {
            "in": "query",
            "name": "definitionToCloneId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "definitionToCloneRevision",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          }
        }
      },
      "get": {
        "tags": [
          "definitions"
        ],
        "summary": "GetDefinitions",
        "description": "Gets definitions, optionally filtered by name",
        "operationId": "getDefinitions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "repositoryId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "repositoryType",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "",
            "required": false,
            "type": "string",
            "format": "definitionQueryOrder"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "minMetricsTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "definitionIds",
            "description": "",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "path",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "builtAfter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "notBuiltAfter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "includeAllProperties",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLatestBuilds",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildDefinitionReference"
              }
            }
          }
        }
      }
    },
    "/_apis/build/definitions/{definitionId}": {
      "delete": {
        "tags": [
          "definitions"
        ],
        "summary": "DeleteDefinition",
        "description": "Deletes a definition and all associated builds",
        "operationId": "deleteDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "definitions"
        ],
        "summary": "GetDefinition",
        "description": "Gets a definition, optionally at a specific revision",
        "operationId": "getDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "revision",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "minMetricsTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "includeLatestBuilds",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "definitions"
        ],
        "summary": "UpdateDefinition",
        "description": "Updates an existing definition",
        "operationId": "updateDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "secretsSourceDefinitionId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "secretsSourceDefinitionRevision",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          }
        }
      }
    },
    "/_apis/build/options": {
      "get": {
        "tags": [
          "options"
        ],
        "summary": "GetBuildOptionDefinitions",
        "description": "",
        "operationId": "getBuildOptionDefinitions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildOptionDefinition"
              }
            }
          }
        }
      }
    },
    "/_apis/build/resourceusage": {
      "get": {
        "tags": [
          "resourceUsage"
        ],
        "summary": "GetResourceUsage",
        "description": "",
        "operationId": "getResourceUsage",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildResourceUsage"
            }
          }
        }
      }
    },
    "/_apis/build/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "GetBuildSettings",
        "description": "",
        "operationId": "getBuildSettings",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildSettings"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "settings"
        ],
        "summary": "UpdateBuildSettings",
        "description": "Updates the build settings",
        "operationId": "updateBuildSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/buildSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildSettings"
            }
          }
        }
      }
    },
    "/_apis/public/build/definitions/{project}/{definitionId}/badge": {
      "get": {
        "tags": [
          "badge"
        ],
        "summary": "GetBadge",
        "description": "",
        "operationId": "getBadge",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "branchName",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds": {
      "get": {
        "tags": [
          "builds"
        ],
        "summary": "GetBuilds",
        "description": "Gets builds",
        "operationId": "getBuilds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "definitions",
            "description": "A comma-delimited list of definition ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "queues",
            "description": "A comma-delimited list of queue ids",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "buildNumber",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "minFinishTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxFinishTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "requestedFor",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "reasonFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "buildReason"
          },
          {
            "in": "query",
            "name": "statusFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "buildStatus"
          },
          {
            "in": "query",
            "name": "resultFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "buildResult"
          },
          {
            "in": "query",
            "name": "tagFilters",
            "description": "A comma-delimited list of tags",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "properties",
            "description": "A comma-delimited list of properties to include in the results",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "The maximum number of builds to retrieve",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxBuildsPerDefinition",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "deletedFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "queryDeletedOption"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "",
            "required": false,
            "type": "string",
            "format": "buildQueryOrder"
          },
          {
            "in": "query",
            "name": "branchName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "buildIds",
            "description": "",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "repositoryId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "repositoryType",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/build"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "builds"
        ],
        "summary": "QueueBuild",
        "description": "Queues a build",
        "operationId": "queueBuild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/build"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ignoreWarnings",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "checkInTicket",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/build"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "builds"
        ],
        "summary": "UpdateBuilds",
        "description": "Update a batch of builds",
        "operationId": "updateBuilds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/build"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/build"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}": {
      "delete": {
        "tags": [
          "builds"
        ],
        "summary": "DeleteBuild",
        "description": "Deletes a build",
        "operationId": "deleteBuild",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "builds"
        ],
        "summary": "GetBuild",
        "description": "Gets a build",
        "operationId": "getBuild",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "A comma-delimited list of properties to include in the results",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/build"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "builds"
        ],
        "summary": "UpdateBuild",
        "description": "Updates a build",
        "operationId": "updateBuild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/build"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/build"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/artifacts": {
      "post": {
        "tags": [
          "artifacts"
        ],
        "summary": "CreateArtifact",
        "description": "Associates an artifact with a build",
        "operationId": "createArtifact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/buildArtifact"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildArtifact"
            }
          }
        }
      },
      "get": {
        "tags": [
          "artifacts"
        ],
        "summary": "GetArtifacts",
        "description": "Gets all artifacts for a build",
        "operationId": "getArtifacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildArtifact"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/artifacts/{artifactName}": {
      "get": {
        "tags": [
          "artifacts"
        ],
        "summary": "GetArtifact",
        "description": "Gets a specific artifact for a build",
        "operationId": "getArtifact",
        "produces": [
          "application/zip",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "artifactName",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildArtifact"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/changes": {
      "get": {
        "tags": [
          "changes"
        ],
        "summary": "GetBuildChanges",
        "description": "Gets the changes associated with a build",
        "operationId": "getBuildChanges",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "The maximum number of changes to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeSourceChange",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/change"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/logs": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "GetBuildLogs",
        "description": "Gets logs for a build",
        "operationId": "getBuildLogs",
        "produces": [
          "application/zip",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildLog"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/logs/{logId}": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "GetBuildLog",
        "description": "Gets a log",
        "operationId": "getBuildLog",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "logId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startLine",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "endLine",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "stream"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/report": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "GetBuildReport",
        "description": "Gets report for a build",
        "operationId": "getBuildReport",
        "produces": [
          "text/html",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "type",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildReportMetadata"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/tags": {
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "AddBuildTags",
        "description": "Adds tag to a build",
        "operationId": "addBuildTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "GetBuildTags",
        "description": "Gets the tags for a build",
        "operationId": "getBuildTags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/tags/{tag}": {
      "put": {
        "tags": [
          "tags"
        ],
        "summary": "AddBuildTag",
        "description": "Adds a tag to a build",
        "operationId": "addBuildTag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "tag",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tags"
        ],
        "summary": "DeleteBuildTag",
        "description": "Deletes a tag from a build",
        "operationId": "deleteBuildTag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "tag",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/timeline/{timelineId}": {
      "get": {
        "tags": [
          "timeline"
        ],
        "summary": "GetBuildTimeline",
        "description": "Gets details for a build",
        "operationId": "getBuildTimeline",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "changeId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "planId",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/timeline"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/builds/{buildId}/workitems": {
      "get": {
        "tags": [
          "workitems"
        ],
        "summary": "GetBuildWorkItemsRefs",
        "description": "Gets the work item ids associated with a build",
        "operationId": "getBuildWorkItemsRefs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "The maximum number of workitems to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resourceRef"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workitems"
        ],
        "summary": "GetBuildWorkItemsRefsFromCommits",
        "description": "Gets the work item ids associated with build commits",
        "operationId": "getBuildWorkItemsRefsFromCommits",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "The maximum number of workitems to return, also number of commits to consider if commitids are not sent",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resourceRef"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/changes": {
      "get": {
        "tags": [
          "changes"
        ],
        "summary": "GetChangesBetweenBuilds",
        "description": "Gets the changes associated between given builds",
        "operationId": "getChangesBetweenBuilds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "fromBuildId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "toBuildId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "The maximum number of changes to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/change"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/definitions": {
      "post": {
        "tags": [
          "definitions"
        ],
        "summary": "CreateDefinition",
        "description": "Creates a new definition",
        "operationId": "createDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "definitionToCloneId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "definitionToCloneRevision",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          }
        }
      },
      "get": {
        "tags": [
          "definitions"
        ],
        "summary": "GetDefinitions",
        "description": "Gets definitions, optionally filtered by name",
        "operationId": "getDefinitions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "repositoryId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "repositoryType",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "",
            "required": false,
            "type": "string",
            "format": "definitionQueryOrder"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "minMetricsTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "definitionIds",
            "description": "",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "path",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "builtAfter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "notBuiltAfter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "includeAllProperties",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLatestBuilds",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildDefinitionReference"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/definitions/{definitionId}": {
      "delete": {
        "tags": [
          "definitions"
        ],
        "summary": "DeleteDefinition",
        "description": "Deletes a definition and all associated builds",
        "operationId": "deleteDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "definitions"
        ],
        "summary": "GetDefinition",
        "description": "Gets a definition, optionally at a specific revision",
        "operationId": "getDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "revision",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "minMetricsTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "includeLatestBuilds",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "definitions"
        ],
        "summary": "UpdateDefinition",
        "description": "Updates an existing definition",
        "operationId": "updateDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "secretsSourceDefinitionId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "secretsSourceDefinitionRevision",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildDefinition"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/definitions/{definitionId}/metrics": {
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "GetDefinitionMetrics",
        "description": "Gets metrics of a definition",
        "operationId": "getDefinitionMetrics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "minMetricsTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildMetric"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/definitions/{definitionId}/revisions": {
      "get": {
        "tags": [
          "revisions"
        ],
        "summary": "GetDefinitionRevisions",
        "description": "Gets revisions of a definition",
        "operationId": "getDefinitionRevisions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildDefinitionRevision"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/definitions/{DefinitionId}/tags": {
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "AddDefinitionTags",
        "description": "Adds multiple tags to a definition",
        "operationId": "addDefinitionTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "GetDefinitionTags",
        "description": "Gets the tags for a definition",
        "operationId": "getDefinitionTags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "revision",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/definitions/{DefinitionId}/tags/{tag}": {
      "put": {
        "tags": [
          "tags"
        ],
        "summary": "AddDefinitionTag",
        "description": "Adds a tag to a definition",
        "operationId": "addDefinitionTag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "tag",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tags"
        ],
        "summary": "DeleteDefinitionTag",
        "description": "Deletes a tag from a definition",
        "operationId": "deleteDefinitionTag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "tag",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/definitions/templates": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "GetTemplates",
        "description": "",
        "operationId": "getTemplates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildDefinitionTemplate"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/definitions/templates/{templateId}": {
      "delete": {
        "tags": [
          "templates"
        ],
        "summary": "DeleteTemplate",
        "description": "Deletes a definition template",
        "operationId": "deleteTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "GetTemplate",
        "description": "Gets definition template filtered by id",
        "operationId": "getTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "Id of the requested template.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildDefinitionTemplate"
            }
          }
        }
      },
      "put": {
        "tags": [
          "templates"
        ],
        "summary": "SaveTemplate",
        "description": "Saves a definition template",
        "operationId": "saveTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/buildDefinitionTemplate"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildDefinitionTemplate"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/folders/{*path}": {
      "get": {
        "tags": [
          "folders"
        ],
        "summary": "GetFolders",
        "description": "Gets folders",
        "operationId": "getFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "path",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "",
            "required": false,
            "type": "string",
            "format": "folderQueryOrder"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/folder"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/folders/{path}": {
      "put": {
        "tags": [
          "folders"
        ],
        "summary": "CreateFolder",
        "description": "Creates a new folder",
        "operationId": "createFolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/folder"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/folder"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "folders"
        ],
        "summary": "DeleteFolder",
        "description": "Deletes a definition folder for given folder name and path and all it's existing definitions and it's corresponding builds",
        "operationId": "deleteFolder",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "folders"
        ],
        "summary": "UpdateFolder",
        "description": "Updates an existing folder at given  existing path",
        "operationId": "updateFolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/folder"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/folder"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/metrics/{metricAggregationType}": {
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "GetProjectMetrics",
        "description": "Gets metrics of a project",
        "operationId": "getProjectMetrics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metricAggregationType",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "minMetricsTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildMetric"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/options": {
      "get": {
        "tags": [
          "options"
        ],
        "summary": "GetBuildOptionDefinitions",
        "description": "",
        "operationId": "getBuildOptionDefinitions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildOptionDefinition"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/repos/{repoType}/badge": {
      "get": {
        "tags": [
          "buildbadge"
        ],
        "summary": "GetBuildBadge",
        "description": "",
        "operationId": "getBuildBadge",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "repoType",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "repoId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "branchName",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/buildBadge"
            }
          }
        }
      }
    },
    "/{project}/_apis/build/tags": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "GetTags",
        "description": "",
        "operationId": "getTags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/build/workitems": {
      "get": {
        "tags": [
          "workitems"
        ],
        "summary": "GetWorkItemsBetweenBuilds",
        "description": "Gets all the work item ids inbetween fromBuildId to toBuildId",
        "operationId": "getWorkItemsBetweenBuilds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "fromBuildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "toBuildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "The maximum number of workitems to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resourceRef"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "agentPoolQueue": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/shallowReference"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "pool": {
          "description": "The pool used by this queue.",
          "$ref": "#/definitions/taskAgentPoolReference"
        }
      }
    },
    "artifactResource": {
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "data": {
          "description": "The type-specific resource data. For example, \"#/10002/5/drop\", \"$/drops/5\", \"\\\\myshare\\myfolder\\mydrops\\5\"",
          "type": "string"
        },
        "downloadUrl": {
          "description": "Link to the resource. This might include things like query parameters to download as a zip file",
          "type": "string"
        },
        "properties": {
          "description": "Properties of Artifact Resource",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "The type of the resource: File container, version control folder, UNC path, etc.",
          "type": "string"
        },
        "url": {
          "description": "Link to the resource",
          "type": "string"
        }
      }
    },
    "build": {
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "buildNumber": {
          "description": "Build number/name of the build",
          "type": "string"
        },
        "buildNumberRevision": {
          "description": "Build number revision",
          "type": "integer",
          "format": "int32"
        },
        "controller": {
          "description": "The build controller. This should only be set if the definition type is Xaml.",
          "$ref": "#/definitions/buildController"
        },
        "definition": {
          "description": "The definition associated with the build",
          "$ref": "#/definitions/definitionReference"
        },
        "deleted": {
          "description": "Indicates whether the build has been deleted.",
          "type": "boolean"
        },
        "deletedBy": {
          "description": "Process or person that deleted the build",
          "$ref": "#/definitions/identityRef"
        },
        "deletedDate": {
          "description": "Date the build was deleted",
          "type": "string",
          "format": "date-time"
        },
        "deletedReason": {
          "description": "Description of how the build was deleted",
          "type": "string"
        },
        "demands": {
          "description": "Demands",
          "type": "array",
          "items": {
            "$ref": "#/definitions/demand"
          }
        },
        "finishTime": {
          "description": "Time that the build was completed",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Id of the build",
          "type": "integer",
          "format": "int32"
        },
        "keepForever": {
          "type": "boolean"
        },
        "lastChangedBy": {
          "description": "Process or person that last changed the build",
          "$ref": "#/definitions/identityRef"
        },
        "lastChangedDate": {
          "description": "Date the build was last changed",
          "type": "string",
          "format": "date-time"
        },
        "logs": {
          "description": "Log location of the build",
          "$ref": "#/definitions/buildLogReference"
        },
        "orchestrationPlan": {
          "description": "Orchestration plan for the build",
          "$ref": "#/definitions/taskOrchestrationPlanReference"
        },
        "parameters": {
          "description": "Parameters for the build",
          "type": "string"
        },
        "plans": {
          "description": "Orchestration plans associated with the build (build, cleanup)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/taskOrchestrationPlanReference"
          }
        },
        "priority": {
          "description": "The build's priority",
          "enum": [
            "low",
            "belowNormal",
            "normal",
            "aboveNormal",
            "high"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.QueuePriority"
          }
        },
        "project": {
          "description": "The team project",
          "$ref": "#/definitions/teamProjectReference"
        },
        "properties": {
          "$ref": "#/definitions/propertiesCollection"
        },
        "quality": {
          "description": "Quality of the xaml build (good, bad, etc.)",
          "type": "string"
        },
        "queue": {
          "description": "The queue. This should only be set if the definition type is Build.",
          "$ref": "#/definitions/agentPoolQueue"
        },
        "queueOptions": {
          "description": "Queue option of the build.",
          "enum": [
            "none",
            "doNotRun"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.QueueOptions"
          }
        },
        "queuePosition": {
          "description": "The current position of the build in the queue",
          "type": "integer",
          "format": "int32"
        },
        "queueTime": {
          "description": "Time that the build was queued",
          "type": "string",
          "format": "date-time"
        },
        "reason": {
          "description": "Reason that the build was created",
          "enum": [
            "none",
            "manual",
            "individualCI",
            "batchedCI",
            "schedule",
            "userCreated",
            "validateShelveset",
            "checkInShelveset",
            "pullRequest",
            "triggered",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildReason"
          }
        },
        "repository": {
          "description": "The repository",
          "$ref": "#/definitions/buildRepository"
        },
        "requestedBy": {
          "description": "The identity that queued the build",
          "$ref": "#/definitions/identityRef"
        },
        "requestedFor": {
          "description": "The identity on whose behalf the build was queued",
          "$ref": "#/definitions/identityRef"
        },
        "result": {
          "description": "The build result",
          "enum": [
            "none",
            "succeeded",
            "partiallySucceeded",
            "failed",
            "canceled"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildResult"
          }
        },
        "retainedByRelease": {
          "description": "Specifies if Build should be retained by Release",
          "type": "boolean"
        },
        "sourceBranch": {
          "description": "Source branch",
          "type": "string"
        },
        "sourceVersion": {
          "description": "Source version",
          "type": "string"
        },
        "startTime": {
          "description": "Time that the build was started",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Status of the build",
          "enum": [
            "none",
            "inProgress",
            "completed",
            "cancelling",
            "postponed",
            "notStarted",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildStatus"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "description": "Uri of the build",
          "type": "string"
        },
        "url": {
          "description": "REST url of the build",
          "type": "string"
        },
        "validationResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/buildRequestValidationResult"
          }
        }
      }
    },
    "buildAgent": {
      "type": "object",
      "properties": {
        "buildDirectory": {
          "type": "string"
        },
        "controller": {
          "$ref": "#/definitions/shallowReference"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "messageQueueUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reservedForBuild": {
          "type": "string"
        },
        "server": {
          "$ref": "#/definitions/shallowReference"
        },
        "status": {
          "enum": [
            "unavailable",
            "available",
            "offline"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.AgentStatus"
          }
        },
        "statusMessage": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "uri": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "buildArtifact": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The artifact id",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "The name of the artifact",
          "type": "string"
        },
        "resource": {
          "description": "The actual resource",
          "$ref": "#/definitions/artifactResource"
        }
      }
    },
    "buildArtifactAddedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildUpdatedEvent"
        }
      ],
      "properties": {
        "artifact": {
          "$ref": "#/definitions/buildArtifact"
        }
      }
    },
    "buildBadge": {
      "type": "object",
      "properties": {
        "buildId": {
          "description": "Build id, if exists that this badge corresponds to",
          "type": "integer",
          "format": "int32"
        },
        "imageUrl": {
          "description": "Self Url that generates SVG",
          "type": "string"
        }
      }
    },
    "buildChangesCalculatedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildUpdatedEvent"
        }
      ],
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/change"
          }
        }
      }
    },
    "buildCompletedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildUpdatedEvent"
        }
      ],
      "properties": {
      }
    },
    "buildController": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/shallowReference"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "createdDate": {
          "description": "The date the controller was created.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "The description of the controller.",
          "type": "string"
        },
        "enabled": {
          "description": "Indicates whether the controller is enabled.",
          "type": "boolean"
        },
        "status": {
          "description": "The status of the controller.",
          "enum": [
            "unavailable",
            "available",
            "offline"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.ControllerStatus"
          }
        },
        "updatedDate": {
          "description": "The date the controller was last updated.",
          "type": "string",
          "format": "date-time"
        },
        "uri": {
          "description": "The controller's URI.",
          "type": "string"
        }
      }
    },
    "buildDefinition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildDefinitionReference"
        }
      ],
      "properties": {
        "badgeEnabled": {
          "description": "Indicates whether badges are enabled for this definition",
          "type": "boolean"
        },
        "build": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/buildDefinitionStep"
          }
        },
        "buildNumberFormat": {
          "description": "The build number format",
          "type": "string"
        },
        "comment": {
          "description": "The comment entered when saving the definition",
          "type": "string"
        },
        "demands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demand"
          }
        },
        "description": {
          "description": "The description",
          "type": "string"
        },
        "dropLocation": {
          "description": "The drop location for the definition",
          "type": "string"
        },
        "jobAuthorizationScope": {
          "description": "Gets or sets the job authorization scope for builds which are queued against this definition",
          "enum": [
            "projectCollection",
            "project"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildAuthorizationScope"
          }
        },
        "jobTimeoutInMinutes": {
          "description": "Gets or sets the job execution timeout in minutes for builds which are queued against this definition",
          "type": "integer",
          "format": "int32"
        },
        "latestBuild": {
          "$ref": "#/definitions/build"
        },
        "latestCompletedBuild": {
          "$ref": "#/definitions/build"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/buildOption"
          }
        },
        "processParameters": {
          "description": "Process Parameters",
          "$ref": "#/definitions/processParameters"
        },
        "properties": {
          "$ref": "#/definitions/propertiesCollection"
        },
        "repository": {
          "description": "The repository",
          "$ref": "#/definitions/buildRepository"
        },
        "retentionRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/retentionPolicy"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/buildTrigger"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/buildDefinitionVariable"
          }
        }
      }
    },
    "buildDefinitionChangedEvent": {
      "type": "object",
      "properties": {
        "changeType": {
          "enum": [
            "add",
            "update",
            "delete"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.AuditAction"
          }
        },
        "definition": {
          "$ref": "#/definitions/buildDefinition"
        }
      }
    },
    "buildDefinitionChangingEvent": {
      "type": "object",
      "properties": {
        "changeType": {
          "enum": [
            "add",
            "update",
            "delete"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.AuditAction"
          }
        },
        "newDefinition": {
          "$ref": "#/definitions/buildDefinition"
        },
        "originalDefinition": {
          "$ref": "#/definitions/buildDefinition"
        }
      }
    },
    "buildDefinitionReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/definitionReference"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "authoredBy": {
          "description": "The author of the definition.",
          "$ref": "#/definitions/identityRef"
        },
        "draftOf": {
          "description": "If this is a draft definition, it might have a parent",
          "$ref": "#/definitions/definitionReference"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/buildMetric"
          }
        },
        "quality": {
          "description": "The quality of the definition document (draft, etc.)",
          "enum": [
            "definition",
            "draft"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.DefinitionQuality"
          }
        },
        "queue": {
          "description": "The default queue which should be used for requests.",
          "$ref": "#/definitions/agentPoolQueue"
        }
      }
    },
    "buildDefinitionRevision": {
      "type": "object",
      "properties": {
        "changedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "changedDate": {
          "type": "string",
          "format": "date-time"
        },
        "changeType": {
          "enum": [
            "add",
            "update",
            "delete"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.AuditAction"
          }
        },
        "comment": {
          "type": "string"
        },
        "definitionUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "buildDefinitionSourceProvider": {
      "type": "object",
      "properties": {
        "definitionUri": {
          "description": "Uri of the associated definition",
          "type": "string"
        },
        "fields": {
          "description": "fields associated with this build definition",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "Id of this source provider",
          "type": "integer",
          "format": "int32"
        },
        "lastModified": {
          "description": "The lst time this source provider was modified",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of the source provider",
          "type": "string"
        },
        "supportedTriggerTypes": {
          "description": "Which trigger types are supported by this definition source provider",
          "enum": [
            "none",
            "continuousIntegration",
            "batchedContinuousIntegration",
            "schedule",
            "gatedCheckIn",
            "batchedGatedCheckIn",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType"
          }
        }
      }
    },
    "buildDefinitionStep": {
      "type": "object",
      "properties": {
        "alwaysRun": {
          "type": "boolean"
        },
        "continueOnError": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "task": {
          "$ref": "#/definitions/taskDefinitionReference"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "buildDefinitionTemplate": {
      "type": "object",
      "properties": {
        "canDelete": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "icons": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "iconTaskId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/buildDefinition"
        }
      }
    },
    "buildDefinitionVariable": {
      "type": "object",
      "properties": {
        "allowOverride": {
          "type": "boolean"
        },
        "isSecret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "buildDeletedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/realtimeBuildEvent"
        }
      ],
      "properties": {
        "build": {
          "$ref": "#/definitions/build"
        }
      }
    },
    "buildDeployment": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/buildSummary"
        },
        "sourceBuild": {
          "$ref": "#/definitions/shallowReference"
        }
      }
    },
    "buildDestroyedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/realtimeBuildEvent"
        }
      ],
      "properties": {
        "build": {
          "$ref": "#/definitions/build"
        }
      }
    },
    "buildLog": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildLogReference"
        }
      ],
      "properties": {
        "createdOn": {
          "description": "The date the log was created.",
          "type": "string",
          "format": "date-time"
        },
        "lastChangedOn": {
          "description": "The date the log was last changed.",
          "type": "string",
          "format": "date-time"
        },
        "lineCount": {
          "description": "The number of lines in the log.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "buildLogReference": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the log.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of the log location.",
          "type": "string"
        },
        "url": {
          "description": "Full link to the log resource.",
          "type": "string"
        }
      }
    },
    "buildMetric": {
      "type": "object",
      "properties": {
        "date": {
          "description": "Scoped date of the metric",
          "type": "string",
          "format": "date-time"
        },
        "intValue": {
          "description": "The int value of the metric",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "The name of the metric",
          "type": "string"
        },
        "scope": {
          "description": "The scope of the metric",
          "type": "string"
        }
      }
    },
    "buildOption": {
      "type": "object",
      "properties": {
        "definition": {
          "$ref": "#/definitions/buildOptionDefinitionReference"
        },
        "enabled": {
          "type": "boolean"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "buildOptionDefinition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildOptionDefinitionReference"
        }
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/buildOptionGroupDefinition"
          }
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/buildOptionInputDefinition"
          }
        },
        "name": {
          "type": "string"
        },
        "ordinal": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "buildOptionDefinitionReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "buildOptionGroupDefinition": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "isExpanded": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "buildOptionInputDefinition": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "help": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "string",
            "boolean",
            "stringList",
            "radio",
            "pickList",
            "multiLine"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildOptionInputType"
          }
        },
        "visibleRule": {
          "type": "string"
        }
      }
    },
    "buildPollingSummaryEvent": {
      "type": "object",
      "properties": {
      }
    },
    "buildProcessTemplate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "fileExists": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parameters": {
          "type": "string"
        },
        "serverPath": {
          "type": "string"
        },
        "supportedReasons": {
          "enum": [
            "none",
            "manual",
            "individualCI",
            "batchedCI",
            "schedule",
            "userCreated",
            "validateShelveset",
            "checkInShelveset",
            "pullRequest",
            "triggered",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildReason"
          }
        },
        "teamProject": {
          "type": "string"
        },
        "templateType": {
          "enum": [
            "custom",
            "default",
            "upgrade"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.ProcessTemplateType"
          }
        },
        "url": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "buildQueuedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildUpdatedEvent"
        }
      ],
      "properties": {
      }
    },
    "buildReference": {
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "buildNumber": {
          "description": "Build number/name of the build",
          "type": "string"
        },
        "finishTime": {
          "description": "Time that the build was completed",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Id of the build",
          "type": "integer",
          "format": "int32"
        },
        "queueTime": {
          "description": "Time that the build was queued",
          "type": "string",
          "format": "date-time"
        },
        "requestedFor": {
          "description": "The identity on whose behalf the build was queued",
          "$ref": "#/definitions/identityRef"
        },
        "result": {
          "description": "The build result",
          "enum": [
            "none",
            "succeeded",
            "partiallySucceeded",
            "failed",
            "canceled"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildResult"
          }
        },
        "startTime": {
          "description": "Time that the build was started",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Status of the build",
          "enum": [
            "none",
            "inProgress",
            "completed",
            "cancelling",
            "postponed",
            "notStarted",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildStatus"
          }
        }
      }
    },
    "buildReportMetadata": {
      "type": "object",
      "properties": {
        "buildId": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "buildRepository": {
      "type": "object",
      "properties": {
        "checkoutSubmodules": {
          "type": "boolean"
        },
        "clean": {
          "description": "Indicates whether to clean the target folder when getting code from the repository. This is a String so that it can reference variables.",
          "type": "string"
        },
        "defaultBranch": {
          "description": "Gets or sets the name of the default branch.",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the friendly name of the repository.",
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "rootFolder": {
          "description": "Gets or sets the root folder.",
          "type": "string"
        },
        "type": {
          "description": "Gets or sets the type of the repository.",
          "type": "string"
        },
        "url": {
          "description": "Gets or sets the url of the repository.",
          "type": "string"
        }
      }
    },
    "buildRequestValidationResult": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "result": {
          "enum": [
            "oK",
            "warning",
            "error"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.ValidationResult"
          }
        }
      }
    },
    "buildResourceUsage": {
      "type": "object",
      "properties": {
        "distributedTaskAgents": {
          "type": "integer",
          "format": "int32"
        },
        "paidPrivateAgentSlots": {
          "type": "integer",
          "format": "int32"
        },
        "totalUsage": {
          "type": "integer",
          "format": "int32"
        },
        "xamlControllers": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "buildServer": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/shallowReference"
          }
        },
        "controller": {
          "$ref": "#/definitions/shallowReference"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isVirtual": {
          "type": "boolean"
        },
        "messageQueueUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "requireClientCertificates": {
          "type": "boolean"
        },
        "status": {
          "enum": [
            "online",
            "offline"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.ServiceHostStatus"
          }
        },
        "statusChangedDate": {
          "type": "string",
          "format": "date-time"
        },
        "uri": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "buildSettings": {
      "type": "object",
      "properties": {
        "daysToKeepDeletedBuildsBeforeDestroy": {
          "type": "integer",
          "format": "int32"
        },
        "defaultRetentionPolicy": {
          "$ref": "#/definitions/retentionPolicy"
        },
        "maximumRetentionPolicy": {
          "$ref": "#/definitions/retentionPolicy"
        }
      }
    },
    "buildStartedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildUpdatedEvent"
        }
      ],
      "properties": {
      }
    },
    "buildSummary": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/shallowReference"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "keepForever": {
          "type": "boolean"
        },
        "quality": {
          "type": "string"
        },
        "reason": {
          "enum": [
            "none",
            "manual",
            "individualCI",
            "batchedCI",
            "schedule",
            "userCreated",
            "validateShelveset",
            "checkInShelveset",
            "pullRequest",
            "triggered",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildReason"
          }
        },
        "requestedFor": {
          "$ref": "#/definitions/identityRef"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "enum": [
            "none",
            "inProgress",
            "completed",
            "cancelling",
            "postponed",
            "notStarted",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildStatus"
          }
        }
      }
    },
    "buildTrigger": {
      "type": "object",
      "properties": {
        "triggerType": {
          "enum": [
            "none",
            "continuousIntegration",
            "batchedContinuousIntegration",
            "schedule",
            "gatedCheckIn",
            "batchedGatedCheckIn",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType"
          }
        }
      }
    },
    "buildUpdatedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/realtimeBuildEvent"
        }
      ],
      "properties": {
        "build": {
          "$ref": "#/definitions/build"
        }
      }
    },
    "buildWorkspace": {
      "type": "object",
      "properties": {
        "mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/mappingDetails"
          }
        }
      }
    },
    "change": {
      "type": "object",
      "properties": {
        "author": {
          "description": "The author of the change.",
          "$ref": "#/definitions/identityRef"
        },
        "displayUri": {
          "description": "The location of a user-friendly representation of the resource.",
          "type": "string"
        },
        "id": {
          "description": "Something that identifies the change. For a commit, this would be the SHA1. For a TFVC changeset, this would be the changeset id.",
          "type": "string"
        },
        "location": {
          "description": "The location of the full representation of the resource.",
          "type": "string"
        },
        "message": {
          "description": "A description of the change. This might be a commit message or changeset description.",
          "type": "string"
        },
        "messageTruncated": {
          "description": "Indicates whether the message was truncated",
          "type": "boolean"
        },
        "timestamp": {
          "description": "A timestamp for the change.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "The type of change. \"commit\", \"changeset\", etc.",
          "type": "string"
        }
      }
    },
    "consoleLogEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/realtimeBuildEvent"
        }
      ],
      "properties": {
        "lines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timelineId": {
          "type": "string",
          "format": "uuid"
        },
        "timelineRecordId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "continuousDeploymentDefinition": {
      "type": "object",
      "properties": {
        "connectedService": {
          "description": "The connected service associated with the continuous deployment",
          "$ref": "#/definitions/webApiConnectedServiceRef"
        },
        "definition": {
          "description": "The definition associated with the continuous deployment",
          "$ref": "#/definitions/shallowReference"
        },
        "gitBranch": {
          "type": "string"
        },
        "hostedServiceName": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/teamProjectReference"
        },
        "repositoryId": {
          "type": "string"
        },
        "storageAccountName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "webspace": {
          "type": "string"
        }
      }
    },
    "continuousIntegrationTrigger": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildTrigger"
        }
      ],
      "properties": {
        "batchChanges": {
          "type": "boolean"
        },
        "branchFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxConcurrentBuildsPerBranch": {
          "type": "integer",
          "format": "int32"
        },
        "pathFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pollingInterval": {
          "description": "The polling interval in seconds.",
          "type": "integer",
          "format": "int32"
        },
        "pollingJobId": {
          "description": "This is the id of the polling job that polls the external repository.  Once the build definition is saved/updated, this value is set.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "definitionReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/shallowReference"
        }
      ],
      "properties": {
        "createdDate": {
          "description": "The date the definition was created",
          "type": "string",
          "format": "date-time"
        },
        "path": {
          "description": "The path this definitions belongs to",
          "type": "string"
        },
        "project": {
          "description": "The project.",
          "$ref": "#/definitions/teamProjectReference"
        },
        "queueStatus": {
          "description": "If builds can be queued from this definition",
          "enum": [
            "enabled",
            "paused",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.DefinitionQueueStatus"
          }
        },
        "revision": {
          "description": "The definition revision number.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of the definition.",
          "enum": [
            "xaml",
            "build"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.DefinitionType"
          }
        },
        "uri": {
          "description": "The Uri of the definition",
          "type": "string"
        }
      }
    },
    "demand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "deployment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "deploymentBuild": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/deployment"
        }
      ],
      "properties": {
        "buildId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "deploymentDeploy": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/deployment"
        }
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "deploymentTest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/deployment"
        }
      ],
      "properties": {
        "runId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "folder": {
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "Process or person who created the folder",
          "$ref": "#/definitions/identityRef"
        },
        "createdOn": {
          "description": "Creation date of the folder",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "The description of the folder",
          "type": "string"
        },
        "lastChangedBy": {
          "description": "Process or person that last changed the folder",
          "$ref": "#/definitions/identityRef"
        },
        "lastChangedDate": {
          "description": "Date the folder was last changed",
          "type": "string",
          "format": "date-time"
        },
        "path": {
          "description": "The path of the folder",
          "type": "string"
        },
        "project": {
          "description": "The project.",
          "$ref": "#/definitions/teamProjectReference"
        }
      }
    },
    "gatedCheckInTrigger": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildTrigger"
        }
      ],
      "properties": {
        "pathFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "runContinuousIntegration": {
          "type": "boolean"
        },
        "useWorkspaceMappings": {
          "type": "boolean"
        }
      }
    },
    "identityRef": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "informationNode": {
      "type": "object",
      "properties": {
        "fields": {
          "description": "Fields of the information node",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "lastModifiedBy": {
          "description": "Process or person that last modified this node",
          "type": "string"
        },
        "lastModifiedDate": {
          "description": "Date this node was last modified",
          "type": "string",
          "format": "date-time"
        },
        "nodeId": {
          "description": "Node Id of this information node",
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "description": "Id of parent node (xml tree)",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of the information node",
          "type": "string"
        }
      }
    },
    "issue": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "error",
            "warning"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.IssueType"
          }
        }
      }
    },
    "mappingDetails": {
      "type": "object",
      "properties": {
        "localPath": {
          "type": "string"
        },
        "mappingType": {
          "type": "string"
        },
        "serverPath": {
          "type": "string"
        }
      }
    },
    "processParameters": {
      "type": "object",
      "properties": {
        "dataSourceBindings": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "dataSourceBindingBase"
          }
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "taskInputDefinitionBase"
          }
        },
        "sourceDefinitions": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "taskSourceDefinitionBase"
          }
        }
      }
    },
    "propertiesCollection": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "object"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "propertyValue": {
      "type": "object",
      "properties": {
        "changedBy": {
          "description": "Guid of identity that changed this property value",
          "type": "string",
          "format": "uuid"
        },
        "changedDate": {
          "description": "The date this property value was changed",
          "type": "string",
          "format": "date-time"
        },
        "propertyName": {
          "description": "Name in the name value mapping",
          "type": "string"
        },
        "value": {
          "description": "Value in the name value mapping",
          "type": "object"
        }
      }
    },
    "realtimeBuildEvent": {
      "type": "object",
      "properties": {
        "buildId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "referenceLinks": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "requestReference": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource",
          "type": "integer",
          "format": "int32"
        },
        "requestedFor": {
          "description": "Name of the requestor",
          "$ref": "#/definitions/identityRef"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "resourceRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "retentionPolicy": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "artifactTypesToDelete": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "daysToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "deleteBuildRecord": {
          "type": "boolean"
        },
        "deleteTestResults": {
          "type": "boolean"
        },
        "minimumToKeep": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "schedule": {
      "type": "object",
      "properties": {
        "branchFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "daysToBuild": {
          "description": "Days for a build (flags enum for days of the week)",
          "enum": [
            "none",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.ScheduleDays"
          }
        },
        "scheduleJobId": {
          "description": "The Job Id of the Scheduled job that will queue the scheduled build. Since a single trigger can have multiple schedules and we want a single job to process a single schedule (since each schedule has a list of branches to build), the schedule itself needs to define the Job Id. This value will be filled in when a definition is added or updated.  The UI does not provide it or use it.",
          "type": "string",
          "format": "uuid"
        },
        "startHours": {
          "description": "Local timezone hour to start",
          "type": "integer",
          "format": "int32"
        },
        "startMinutes": {
          "description": "Local timezone minute to start",
          "type": "integer",
          "format": "int32"
        },
        "timeZoneId": {
          "description": "Time zone of the build schedule (string representation of the time zone id)",
          "type": "string"
        }
      }
    },
    "scheduleTrigger": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildTrigger"
        }
      ],
      "properties": {
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schedule"
          }
        }
      }
    },
    "shallowReference": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the linked resource (definition name, controller name, etc.)",
          "type": "string"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "svnMappingDetails": {
      "type": "object",
      "properties": {
        "depth": {
          "type": "integer",
          "format": "int32"
        },
        "ignoreExternals": {
          "type": "boolean"
        },
        "localPath": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        },
        "serverPath": {
          "type": "string"
        }
      }
    },
    "svnWorkspace": {
      "type": "object",
      "properties": {
        "mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/svnMappingDetails"
          }
        }
      }
    },
    "syncBuildCompletedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildUpdatedEvent"
        }
      ],
      "properties": {
      }
    },
    "syncBuildStartedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/buildUpdatedEvent"
        }
      ],
      "properties": {
      }
    },
    "taskAgentPoolReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "taskDefinitionReference": {
      "type": "object",
      "properties": {
        "definitionType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "versionSpec": {
          "type": "string"
        }
      }
    },
    "taskOrchestrationPlanReference": {
      "type": "object",
      "properties": {
        "orchestrationType": {
          "description": "Orchestration Type for Build (build, cleanup etc.)",
          "type": "integer",
          "format": "int32"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "teamProjectReference": {
      "type": "object",
      "properties": {
        "abbreviation": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int64"
        },
        "state": {
          "type": "string",
          "format": "projectState"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "timeline": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/timelineReference"
        }
      ],
      "properties": {
        "lastChangedBy": {
          "type": "string",
          "format": "uuid"
        },
        "lastChangedOn": {
          "type": "string",
          "format": "date-time"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/timelineRecord"
          }
        }
      }
    },
    "timelineRecord": {
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "changeId": {
          "type": "integer",
          "format": "int32"
        },
        "currentOperation": {
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/timelineReference"
        },
        "errorCount": {
          "type": "integer",
          "format": "int32"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "issues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/issue"
          }
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "log": {
          "$ref": "#/definitions/buildLogReference"
        },
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "string",
          "format": "uuid"
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.TaskResult"
          }
        },
        "resultCode": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "enum": [
            "pending",
            "inProgress",
            "completed"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.TimelineRecordState"
          }
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "warningCount": {
          "type": "integer",
          "format": "int32"
        },
        "workerName": {
          "type": "string"
        }
      }
    },
    "timelineRecordsUpdatedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/realtimeBuildEvent"
        }
      ],
      "properties": {
        "timelineRecords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/timelineRecord"
          }
        }
      }
    },
    "timelineReference": {
      "type": "object",
      "properties": {
        "changeId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "webApiConnectedServiceRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "workspaceMapping": {
      "type": "object",
      "properties": {
        "definitionUri": {
          "description": "Uri of the associated definition",
          "type": "string"
        },
        "depth": {
          "description": "Depth of this mapping",
          "type": "integer",
          "format": "int32"
        },
        "localItem": {
          "description": "local location of the definition",
          "type": "string"
        },
        "mappingType": {
          "description": "type of workspace mapping",
          "enum": [
            "map",
            "cloak"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.WorkspaceMappingType"
          }
        },
        "serverItem": {
          "description": "Server location of the definition",
          "type": "string"
        },
        "workspaceId": {
          "description": "Id of the workspace",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "workspaceTemplate": {
      "type": "object",
      "properties": {
        "definitionUri": {
          "description": "Uri of the associated definition",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "The identity that last modified this template",
          "type": "string"
        },
        "lastModifiedDate": {
          "description": "The last time this template was modified",
          "type": "string",
          "format": "date-time"
        },
        "mappings": {
          "description": "List of workspace mappings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workspaceMapping"
          }
        },
        "workspaceId": {
          "description": "Id of the workspace for this template",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "xamlBuildDefinition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/definitionReference"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "batchSize": {
          "description": "Batch size of the definition",
          "type": "integer",
          "format": "int32"
        },
        "buildArgs": {
          "type": "string"
        },
        "continuousIntegrationQuietPeriod": {
          "description": "The continuous integration quiet period",
          "type": "integer",
          "format": "int32"
        },
        "controller": {
          "description": "The build controller",
          "$ref": "#/definitions/buildController"
        },
        "createdOn": {
          "description": "The date this definition was created",
          "type": "string",
          "format": "date-time"
        },
        "defaultDropLocation": {
          "description": "Default drop location for builds from this definition",
          "type": "string"
        },
        "description": {
          "description": "Description of the definition",
          "type": "string"
        },
        "lastBuild": {
          "description": "The last build on this definition",
          "$ref": "#/definitions/shallowReference"
        },
        "repository": {
          "description": "The repository",
          "$ref": "#/definitions/buildRepository"
        },
        "supportedReasons": {
          "description": "The reasons supported by the template",
          "enum": [
            "none",
            "manual",
            "individualCI",
            "batchedCI",
            "schedule",
            "userCreated",
            "validateShelveset",
            "checkInShelveset",
            "pullRequest",
            "triggered",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.BuildReason"
          }
        },
        "triggerType": {
          "description": "How builds are triggered from this definition",
          "enum": [
            "none",
            "continuousIntegration",
            "batchedContinuousIntegration",
            "schedule",
            "gatedCheckIn",
            "batchedGatedCheckIn",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Build.WebApi.DefinitionTriggerType"
          }
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}