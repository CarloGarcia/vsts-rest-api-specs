{
  "swagger": "2.0",
  "info": {
    "title": "FeatureAvailability",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "featureFlags"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/featureflags": {
      "get": {
        "tags": [
          "featureFlags"
        ],
        "summary": "GetAllFeatureFlags",
        "description": "",
        "operationId": "getAllFeatureFlags",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeatureFlag"
              }
            }
          }
        }
      }
    },
    "/_apis/featureflags/{name}": {
      "get": {
        "tags": [
          "featureFlags"
        ],
        "summary": "GetFeatureFlagByName",
        "description": "Retrieve information on a single feature flag and its current states",
        "operationId": "getFeatureFlagByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "The name of the feature to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeatureFlag"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "featureFlags"
        ],
        "summary": "UpdateFeatureFlag",
        "description": "Change the state of an individual feature flag",
        "operationId": "updateFeatureFlag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "State that should be set",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeatureFlagPatch"
            }
          },
          {
            "in": "path",
            "name": "name",
            "description": "The name of the feature to change",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "checkFeatureExists",
            "description": "Checks if the feature exists before setting the state",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "setAtApplicationLevelAlso",
            "description": "If true and currently at collection level, set the feature state at application also",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeatureFlag"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "FeatureFlag": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "effectiveState": {
          "type": "string"
        },
        "explicitState": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "FeatureFlagPatch": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}