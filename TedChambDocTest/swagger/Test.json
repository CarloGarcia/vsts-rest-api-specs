{
  "swagger": "2.0",
  "info": {
    "title": "Test",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "actionResults"
    },
    {
      "name": "attachments"
    },
    {
      "name": "bugs"
    },
    {
      "name": "cloneOperation"
    },
    {
      "name": "codeCoverage"
    },
    {
      "name": "configurations"
    },
    {
      "name": "extensionFields"
    },
    {
      "name": "history"
    },
    {
      "name": "iterations"
    },
    {
      "name": "messageLogs"
    },
    {
      "name": "parameterResults"
    },
    {
      "name": "plans"
    },
    {
      "name": "points"
    },
    {
      "name": "resultDetailsByBuild"
    },
    {
      "name": "resultDetailsByRelease"
    },
    {
      "name": "resultRetentionSettings"
    },
    {
      "name": "results"
    },
    {
      "name": "resultSummaryByBuild"
    },
    {
      "name": "resultSummaryByRelease"
    },
    {
      "name": "resultSummaryByRequirement"
    },
    {
      "name": "resultTrendByBuild"
    },
    {
      "name": "resultTrendByRelease"
    },
    {
      "name": "runs"
    },
    {
      "name": "session"
    },
    {
      "name": "sharedParameter"
    },
    {
      "name": "sharedStep"
    },
    {
      "name": "suiteEntry"
    },
    {
      "name": "suites"
    },
    {
      "name": "testCase"
    },
    {
      "name": "testSettings"
    },
    {
      "name": "variables"
    },
    {
      "name": "workItems"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/test/suites": {
      "get": {
        "tags": [
          "suites"
        ],
        "summary": "GetSuitesByTestCaseId",
        "description": "",
        "operationId": "getSuitesByTestCaseId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "testCaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testSuite"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/cloneoperation/{cloneOperationId}": {
      "get": {
        "tags": [
          "cloneOperation"
        ],
        "summary": "GetCloneInformation",
        "description": "",
        "operationId": "getCloneInformation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "cloneOperationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeDetails",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/cloneOperationInformation"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/codecoverage": {
      "get": {
        "tags": [
          "codeCoverage"
        ],
        "summary": "GetBuildCodeCoverage",
        "description": "",
        "operationId": "getBuildCodeCoverage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "flags",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/buildCoverage"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "codeCoverage"
        ],
        "summary": "UpdateCodeCoverageSummary",
        "description": "http://(tfsserver):8080/tfs/DefaultCollection/_apis/test/CodeCoverage?buildId=10 Request: Json of code coverage summary",
        "operationId": "updateCodeCoverageSummary",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/codeCoverageData"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/{project}/_apis/test/codecoverage/browse/{containerId}/{filePath}": {
      "get": {
        "tags": [
          "codeCoverage"
        ],
        "summary": "GetCoverageView",
        "description": "http://(tfsserver):8080/tfs/DefaultCollection/_apis/test/browse/containerId/filePath Request: HTML content of Code Coverage report",
        "operationId": "getCoverageView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "filePath",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "httpResponseMessage"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/configurations": {
      "post": {
        "tags": [
          "configurations"
        ],
        "summary": "CreateTestConfiguration",
        "description": "",
        "operationId": "createTestConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testConfiguration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testConfiguration"
            }
          }
        }
      },
      "get": {
        "tags": [
          "configurations"
        ],
        "summary": "GetTestConfigurations",
        "description": "",
        "operationId": "getTestConfigurations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeAllProperties",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testConfiguration"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/configurations/{testConfigurationId}": {
      "delete": {
        "tags": [
          "configurations"
        ],
        "summary": "DeleteTestConfiguration",
        "description": "",
        "operationId": "deleteTestConfiguration",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testConfigurationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "configurations"
        ],
        "summary": "GetTestConfigurationById",
        "description": "",
        "operationId": "getTestConfigurationById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testConfigurationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testConfiguration"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "configurations"
        ],
        "summary": "UpdateTestConfiguration",
        "description": "",
        "operationId": "updateTestConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testConfiguration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testConfigurationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testConfiguration"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/extensionfields": {
      "post": {
        "tags": [
          "extensionFields"
        ],
        "summary": "AddCustomFields",
        "description": "",
        "operationId": "addCustomFields",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customTestFieldDefinition"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customTestFieldDefinition"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "extensionFields"
        ],
        "summary": "QueryCustomFields",
        "description": "",
        "operationId": "queryCustomFields",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "scopeFilter",
            "description": "",
            "required": true,
            "type": "string",
            "format": "customTestFieldScope"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customTestFieldDefinition"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/plans": {
      "post": {
        "tags": [
          "plans"
        ],
        "summary": "CreateTestPlan",
        "description": "",
        "operationId": "createTestPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/planUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testPlan"
            }
          }
        }
      },
      "get": {
        "tags": [
          "plans"
        ],
        "summary": "GetPlans",
        "description": "",
        "operationId": "getPlans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includePlanDetails",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "filterActivePlans",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testPlan"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/plans/{planId}": {
      "delete": {
        "tags": [
          "plans"
        ],
        "summary": "DeleteTestPlan",
        "description": "",
        "operationId": "deleteTestPlan",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "plans"
        ],
        "summary": "GetPlanById",
        "description": "",
        "operationId": "getPlanById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testPlan"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "plans"
        ],
        "summary": "UpdateTestPlan",
        "description": "",
        "operationId": "updateTestPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/planUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testPlan"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Plans/{planId}/cloneoperation": {
      "post": {
        "tags": [
          "cloneOperation"
        ],
        "summary": "CloneTestPlan",
        "description": "",
        "operationId": "cloneTestPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testPlanCloneRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/cloneOperationInformation"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Plans/{planId}/suites": {
      "get": {
        "tags": [
          "suites"
        ],
        "summary": "GetTestSuitesForPlan",
        "description": "",
        "operationId": "getTestSuitesForPlan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeSuites",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "asTreeView",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testSuite"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Plans/{planId}/Suites/{sourceSuiteId}/cloneoperation": {
      "post": {
        "tags": [
          "cloneOperation"
        ],
        "summary": "CloneTestSuite",
        "description": "",
        "operationId": "cloneTestSuite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testSuiteCloneRequest"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "sourceSuiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/cloneOperationInformation"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Plans/{planId}/suites/{suiteId}": {
      "post": {
        "tags": [
          "suites"
        ],
        "summary": "CreateTestSuite",
        "description": "",
        "operationId": "createTestSuite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/suiteCreateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testSuite"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "suites"
        ],
        "summary": "DeleteTestSuite",
        "description": "",
        "operationId": "deleteTestSuite",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "suites"
        ],
        "summary": "GetTestSuiteById",
        "description": "",
        "operationId": "getTestSuiteById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeChildSuites",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testSuite"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "suites"
        ],
        "summary": "UpdateTestSuite",
        "description": "",
        "operationId": "updateTestSuite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/suiteUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testSuite"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Plans/{planId}/Suites/{suiteId}/points": {
      "get": {
        "tags": [
          "points"
        ],
        "summary": "GetPoints",
        "description": "",
        "operationId": "getPoints",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "witFields",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "configurationId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "testCaseId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "testPointIds",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includePointDetails",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testPoint"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Plans/{planId}/Suites/{suiteId}/points/{pointIds}": {
      "get": {
        "tags": [
          "points"
        ],
        "summary": "GetPoint",
        "description": "",
        "operationId": "getPoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pointIds",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "witFields",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testPoint"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "points"
        ],
        "summary": "UpdateTestPoints",
        "description": "",
        "operationId": "updateTestPoints",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pointUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pointIds",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testPoint"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases": {
      "get": {
        "tags": [
          "suites"
        ],
        "summary": "GetTestCases",
        "description": "",
        "operationId": "getTestCases",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/suiteTestCase"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases/{testCaseIds}": {
      "post": {
        "tags": [
          "suites"
        ],
        "summary": "AddTestCasesToSuite",
        "description": "",
        "operationId": "addTestCasesToSuite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseIds",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/suiteTestCase"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "suites"
        ],
        "summary": "GetTestCaseById",
        "description": "",
        "operationId": "getTestCaseById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseIds",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/suiteTestCase"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "suites"
        ],
        "summary": "RemoveTestCasesFromSuiteUrl",
        "description": "",
        "operationId": "removeTestCasesFromSuiteUrl",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseIds",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/{project}/_apis/test/resultdetailsbybuild": {
      "get": {
        "tags": [
          "resultDetailsByBuild"
        ],
        "summary": "GetTestResultDetailsForBuild",
        "description": "",
        "operationId": "getTestResultDetailsForBuild",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "publishContext",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "groupBy",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderby",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testResultsDetails"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/resultdetailsbyrelease": {
      "get": {
        "tags": [
          "resultDetailsByRelease"
        ],
        "summary": "GetTestResultDetailsForRelease",
        "description": "",
        "operationId": "getTestResultDetailsForRelease",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "releaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "releaseEnvId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "publishContext",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "groupBy",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderby",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testResultsDetails"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/resultretentionsettings": {
      "get": {
        "tags": [
          "resultRetentionSettings"
        ],
        "summary": "GetResultRetentionSettings",
        "description": "",
        "operationId": "getResultRetentionSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/resultRetentionSettings"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "resultRetentionSettings"
        ],
        "summary": "UpdateResultRetentionSettings",
        "description": "",
        "operationId": "updateResultRetentionSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resultRetentionSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/resultRetentionSettings"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/results": {
      "post": {
        "tags": [
          "results"
        ],
        "summary": "GetTestResultsByQuery",
        "description": "",
        "operationId": "getTestResultsByQuery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testResultsQuery"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testResultsQuery"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Results/history": {
      "post": {
        "tags": [
          "history"
        ],
        "summary": "QueryTestResultHistory",
        "description": "",
        "operationId": "queryTestResultHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resultsFilter"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testResultHistory"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Results/workitems": {
      "get": {
        "tags": [
          "workItems"
        ],
        "summary": "QueryTestResultWorkItems",
        "description": "",
        "operationId": "queryTestResultWorkItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workItemCategory",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "automatedTestName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "testCaseId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxCompleteDate",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "days",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "workItemCount",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workItemReference"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/resultsummarybybuild": {
      "get": {
        "tags": [
          "resultSummaryByBuild"
        ],
        "summary": "QueryTestResultsReportForBuild",
        "description": "",
        "operationId": "queryTestResultsReportForBuild",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "buildId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "publishContext",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeFailureDetails",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "buildToCompare",
            "description": "",
            "required": false,
            "type": "string",
            "format": "buildReference"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testResultSummary"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/resultsummarybyrelease": {
      "get": {
        "tags": [
          "resultSummaryByRelease"
        ],
        "summary": "QueryTestResultsReportForRelease",
        "description": "",
        "operationId": "queryTestResultsReportForRelease",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "releaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "releaseEnvId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "publishContext",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeFailureDetails",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "releaseToCompare",
            "description": "",
            "required": false,
            "type": "string",
            "format": "releaseReference"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testResultSummary"
            }
          }
        }
      },
      "post": {
        "tags": [
          "resultSummaryByRelease"
        ],
        "summary": "QueryTestResultsSummaryForReleases",
        "description": "",
        "operationId": "queryTestResultsSummaryForReleases",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/releaseReference"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testResultSummary"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/resultsummarybyrequirement": {
      "post": {
        "tags": [
          "resultSummaryByRequirement"
        ],
        "summary": "QueryTestSummaryByRequirement",
        "description": "",
        "operationId": "queryTestSummaryByRequirement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testResultsContext"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workItemIds",
            "description": "",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testSummaryForWorkItem"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/resulttrendbybuild": {
      "post": {
        "tags": [
          "resultTrendByBuild"
        ],
        "summary": "QueryResultTrendForBuild",
        "description": "",
        "operationId": "queryResultTrendForBuild",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testResultTrendFilter"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/aggregatedDataForResultTrend"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/resulttrendbyrelease": {
      "post": {
        "tags": [
          "resultTrendByRelease"
        ],
        "summary": "QueryResultTrendForRelease",
        "description": "",
        "operationId": "queryResultTrendForRelease",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testResultTrendFilter"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/aggregatedDataForResultTrend"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/runs": {
      "post": {
        "tags": [
          "runs"
        ],
        "summary": "CreateTestRun",
        "description": "",
        "operationId": "createTestRun",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/runCreateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testRun"
            }
          }
        }
      },
      "get": {
        "tags": [
          "runs"
        ],
        "summary": "GetTestRuns",
        "description": "",
        "operationId": "getTestRuns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "buildUri",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tmiRunId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "planId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeRunDetails",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "automated",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testRun"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/runs/{runId}": {
      "delete": {
        "tags": [
          "runs"
        ],
        "summary": "DeleteTestRun",
        "description": "",
        "operationId": "deleteTestRun",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "runs"
        ],
        "summary": "GetTestRunById",
        "description": "",
        "operationId": "getTestRunById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testRun"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "runs"
        ],
        "summary": "UpdateTestRun",
        "description": "",
        "operationId": "updateTestRun",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/runUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testRun"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/attachments": {
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "CreateTestRunAttachment",
        "description": "",
        "operationId": "createTestRunAttachment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testAttachmentRequestModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testAttachmentReference"
            }
          }
        }
      },
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "GetTestRunAttachments",
        "description": "Returns attachment references for test run.",
        "operationId": "getTestRunAttachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testAttachment"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "GetTestRunAttachmentContent",
        "description": "Returns a test run attachment",
        "operationId": "getTestRunAttachmentContent",
        "produces": [
          "application/zip",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "attachmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "stream"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/codecoverage": {
      "get": {
        "tags": [
          "codeCoverage"
        ],
        "summary": "GetTestRunCodeCoverage",
        "description": "",
        "operationId": "getTestRunCodeCoverage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "flags",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testRunCoverage"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/messagelogs": {
      "get": {
        "tags": [
          "messageLogs"
        ],
        "summary": "GetTestRunLogs",
        "description": "",
        "operationId": "getTestRunLogs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testMessageLogDetails"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/results": {
      "post": {
        "tags": [
          "results"
        ],
        "summary": "AddTestResultsToTestRun",
        "description": "",
        "operationId": "addTestResultsToTestRun",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testCaseResult"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testCaseResult"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "results"
        ],
        "summary": "GetTestResults",
        "description": "",
        "operationId": "getTestResults",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "detailsToInclude",
            "description": "",
            "required": false,
            "type": "string",
            "format": "resultDetails"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testCaseResult"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "results"
        ],
        "summary": "UpdateTestResults",
        "description": "",
        "operationId": "updateTestResults",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testCaseResult"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testCaseResult"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/results/{testCaseResultId}": {
      "get": {
        "tags": [
          "results"
        ],
        "summary": "GetTestResultById",
        "description": "",
        "operationId": "getTestResultById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "detailsToInclude",
            "description": "",
            "required": false,
            "type": "string",
            "format": "resultDetails"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testCaseResult"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments": {
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "CreateTestIterationResultAttachment",
        "description": "",
        "operationId": "createTestIterationResultAttachment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testAttachmentRequestModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "actionPath",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testAttachmentReference"
            }
          }
        }
      },
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "GetTestResultAttachments",
        "description": "Returns attachment references for test result.",
        "operationId": "getTestResultAttachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testAttachment"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "GetTestResultAttachmentContent",
        "description": "Returns a test result attachment",
        "operationId": "getTestResultAttachmentContent",
        "produces": [
          "application/zip",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "attachmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "stream"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/bugs": {
      "get": {
        "tags": [
          "bugs"
        ],
        "summary": "GetBugsLinkedToTestResult",
        "description": "",
        "operationId": "getBugsLinkedToTestResult",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workItemReference"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/iterations": {
      "get": {
        "tags": [
          "iterations"
        ],
        "summary": "GetTestIterations",
        "description": "",
        "operationId": "getTestIterations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeActionResults",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testIterationDetailsModel"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/iterations/{iterationId}": {
      "get": {
        "tags": [
          "iterations"
        ],
        "summary": "GetTestIteration",
        "description": "",
        "operationId": "getTestIteration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeActionResults",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testIterationDetailsModel"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/Iterations/{iterationId}/actionresults/{actionPath}": {
      "get": {
        "tags": [
          "actionResults"
        ],
        "summary": "GetActionResults",
        "description": "",
        "operationId": "getActionResults",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "actionPath",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testActionResultModel"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/Iterations/{iterationId}/parameterresults": {
      "get": {
        "tags": [
          "parameterResults"
        ],
        "summary": "GetResultParameters",
        "description": "",
        "operationId": "getResultParameters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "testCaseResultId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "iterationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "paramName",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testResultParameterModel"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/runs/{runId}/Statistics": {
      "get": {
        "tags": [
          "runs"
        ],
        "summary": "GetTestRunStatistics",
        "description": "",
        "operationId": "getTestRunStatistics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testRunStatistic"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/session": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "CreateTestSession",
        "description": "",
        "operationId": "createTestSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testSession"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testSession"
            }
          }
        }
      },
      "get": {
        "tags": [
          "session"
        ],
        "summary": "GetTestSessions",
        "description": "",
        "operationId": "getTestSessions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "period",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "allSessions",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeAllProperties",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "source",
            "description": "",
            "required": false,
            "type": "string",
            "format": "testSessionSource"
          },
          {
            "in": "query",
            "name": "includeOnlyCompletedSessions",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testSession"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "session"
        ],
        "summary": "UpdateTestSession",
        "description": "",
        "operationId": "updateTestSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testSession"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testSession"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/sharedparameter/{sharedParameterId}": {
      "delete": {
        "tags": [
          "sharedParameter"
        ],
        "summary": "DeleteSharedParameter",
        "description": "",
        "operationId": "deleteSharedParameter",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sharedParameterId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/{project}/_apis/test/sharedstep/{sharedStepId}": {
      "delete": {
        "tags": [
          "sharedStep"
        ],
        "summary": "DeleteSharedStep",
        "description": "",
        "operationId": "deleteSharedStep",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sharedStepId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/{project}/_apis/test/suiteentry/{suiteId}": {
      "get": {
        "tags": [
          "suiteEntry"
        ],
        "summary": "GetSuiteEntries",
        "description": "",
        "operationId": "getSuiteEntries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/suiteEntry"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "suiteEntry"
        ],
        "summary": "ReorderSuiteEntries",
        "description": "",
        "operationId": "reorderSuiteEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/suiteEntryUpdateModel"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "suiteId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/suiteEntry"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/testcase/{testCaseId}": {
      "delete": {
        "tags": [
          "testCase"
        ],
        "summary": "DeleteTestCase",
        "description": "",
        "operationId": "deleteTestCase",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testCaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/{project}/_apis/test/TestMethods/{testName}/workitems": {
      "post": {
        "tags": [
          "workItems"
        ],
        "summary": "QueryTestMethodLinkedWorkItems",
        "description": "",
        "operationId": "queryTestMethodLinkedWorkItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "testName",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testToWorkItemLinks"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/TestMethods/{testName}/workitems/{workItemId}": {
      "delete": {
        "tags": [
          "workItems"
        ],
        "summary": "DeleteTestMethodToWorkItemLink",
        "description": "",
        "operationId": "deleteTestMethodToWorkItemLink",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "testName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workItemId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/TestMethods/workitems": {
      "post": {
        "tags": [
          "workItems"
        ],
        "summary": "AddWorkItemToTestLinks",
        "description": "",
        "operationId": "addWorkItemToTestLinks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workItemToTestLinks"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/workItemToTestLinks"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/testsettings": {
      "post": {
        "tags": [
          "testSettings"
        ],
        "summary": "CreateTestSettings",
        "description": "",
        "operationId": "createTestSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testSettings"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/testsettings/{testSettingsId}": {
      "delete": {
        "tags": [
          "testSettings"
        ],
        "summary": "DeleteTestSettings",
        "description": "",
        "operationId": "deleteTestSettings",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testSettingsId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "testSettings"
        ],
        "summary": "GetTestSettingsById",
        "description": "",
        "operationId": "getTestSettingsById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testSettingsId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testSettings"
            }
          }
        }
      }
    },
    "/{project}/_apis/test/variables": {
      "post": {
        "tags": [
          "variables"
        ],
        "summary": "CreateTestVariable",
        "description": "",
        "operationId": "createTestVariable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testVariable"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testVariable"
            }
          }
        }
      },
      "get": {
        "tags": [
          "variables"
        ],
        "summary": "GetTestVariables",
        "description": "",
        "operationId": "getTestVariables",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testVariable"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/test/variables/{testVariableId}": {
      "delete": {
        "tags": [
          "variables"
        ],
        "summary": "DeleteTestVariable",
        "description": "",
        "operationId": "deleteTestVariable",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testVariableId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "variables"
        ],
        "summary": "GetTestVariableById",
        "description": "",
        "operationId": "getTestVariableById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testVariableId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testVariable"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "variables"
        ],
        "summary": "UpdateTestVariable",
        "description": "",
        "operationId": "updateTestVariable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testVariable"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "testVariableId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testVariable"
            }
          }
        }
      }
    },
    "/{project}/{team}/_apis/test/session": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "CreateTestSession",
        "description": "",
        "operationId": "createTestSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testSession"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testSession"
            }
          }
        }
      },
      "get": {
        "tags": [
          "session"
        ],
        "summary": "GetTestSessions",
        "description": "",
        "operationId": "getTestSessions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "period",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "allSessions",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeAllProperties",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "source",
            "description": "",
            "required": false,
            "type": "string",
            "format": "testSessionSource"
          },
          {
            "in": "query",
            "name": "includeOnlyCompletedSessions",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/testSession"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "session"
        ],
        "summary": "UpdateTestSession",
        "description": "",
        "operationId": "updateTestSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testSession"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/testSession"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "aggregatedDataForResultTrend": {
      "type": "object",
      "properties": {
        "duration": {
          "description": "This is tests execution duration.",
          "type": "string",
          "format": "timeSpan"
        },
        "resultsByOutcome": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/aggregatedResultsByOutcome"
          }
        },
        "testResultsContext": {
          "$ref": "#/definitions/testResultsContext"
        },
        "totalTests": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "aggregatedResultsAnalysis": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "format": "timeSpan"
        },
        "previousContext": {
          "$ref": "#/definitions/testResultsContext"
        },
        "resultsByCategory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aggregatedResultsByCategory"
          }
        },
        "resultsByOutcome": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/aggregatedResultsByOutcome"
          }
        },
        "resultsDifference": {
          "$ref": "#/definitions/aggregatedResultsDifference"
        },
        "totalTests": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "aggregatedResultsByCategory": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "groupByField": {
          "type": "string"
        },
        "groupByValue": {
          "type": "object"
        },
        "testOutcome": {
          "enum": [
            "unspecified",
            "none",
            "passed",
            "failed",
            "inconclusive",
            "timeout",
            "aborted",
            "blocked",
            "notExecuted",
            "warning",
            "error",
            "notApplicable",
            "paused",
            "inProgress",
            "notImpacted",
            "maxValue"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.TestOutcome"
          }
        }
      }
    },
    "aggregatedResultsByOutcome": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "string",
          "format": "timeSpan"
        },
        "outcome": {
          "enum": [
            "unspecified",
            "none",
            "passed",
            "failed",
            "inconclusive",
            "timeout",
            "aborted",
            "blocked",
            "notExecuted",
            "warning",
            "error",
            "notApplicable",
            "paused",
            "inProgress",
            "notImpacted",
            "maxValue"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.TestOutcome"
          }
        }
      }
    },
    "aggregatedResultsDifference": {
      "type": "object",
      "properties": {
        "increaseInDuration": {
          "type": "string",
          "format": "timeSpan"
        },
        "increaseInFailures": {
          "type": "integer",
          "format": "int32"
        },
        "increaseInOtherTests": {
          "type": "integer",
          "format": "int32"
        },
        "increaseInPassedTests": {
          "type": "integer",
          "format": "int32"
        },
        "increaseInTotalTests": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "batchResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/response"
          }
        },
        "status": {
          "enum": [
            "continue",
            "switchingProtocols",
            "oK",
            "created",
            "accepted",
            "nonAuthoritativeInformation",
            "noContent",
            "resetContent",
            "partialContent",
            "multipleChoices",
            "ambiguous",
            "movedPermanently",
            "moved",
            "found",
            "redirect",
            "seeOther",
            "redirectMethod",
            "notModified",
            "useProxy",
            "unused",
            "temporaryRedirect",
            "redirectKeepVerb",
            "badRequest",
            "unauthorized",
            "paymentRequired",
            "forbidden",
            "notFound",
            "methodNotAllowed",
            "notAcceptable",
            "proxyAuthenticationRequired",
            "requestTimeout",
            "conflict",
            "gone",
            "lengthRequired",
            "preconditionFailed",
            "requestEntityTooLarge",
            "requestUriTooLong",
            "unsupportedMediaType",
            "requestedRangeNotSatisfiable",
            "expectationFailed",
            "upgradeRequired",
            "internalServerError",
            "notImplemented",
            "badGateway",
            "serviceUnavailable",
            "gatewayTimeout",
            "httpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "System.Net.HttpStatusCode"
          }
        }
      }
    },
    "buildConfiguration": {
      "type": "object",
      "properties": {
        "branchName": {
          "type": "string"
        },
        "buildDefinitionId": {
          "type": "integer",
          "format": "int32"
        },
        "flavor": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/shallowReference"
        },
        "repositoryId": {
          "type": "integer",
          "format": "int32"
        },
        "sourceVersion": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "buildCoverage": {
      "type": "object",
      "properties": {
        "codeCoverageFileUrl": {
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/buildConfiguration"
        },
        "lastError": {
          "type": "string"
        },
        "modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/moduleCoverage"
          }
        },
        "state": {
          "type": "string"
        }
      }
    },
    "buildReference": {
      "type": "object",
      "properties": {
        "branchName": {
          "type": "string"
        },
        "buildSystem": {
          "type": "string"
        },
        "definitionId": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "string"
        },
        "repositoryId": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "cloneOperationInformation": {
      "type": "object",
      "properties": {
        "cloneStatistics": {
          "$ref": "#/definitions/cloneStatistics"
        },
        "completionDate": {
          "description": "If the operation is complete, the DateTime of completion. If operation is not complete, this is DateTime.MaxValue",
          "type": "string",
          "format": "date-time"
        },
        "creationDate": {
          "description": "DateTime when the operation was started",
          "type": "string",
          "format": "date-time"
        },
        "destinationObject": {
          "description": "Shallow reference of the destination",
          "$ref": "#/definitions/shallowReference"
        },
        "destinationPlan": {
          "description": "Shallow reference of the destination",
          "$ref": "#/definitions/shallowReference"
        },
        "destinationProject": {
          "description": "Shallow reference of the destination",
          "$ref": "#/definitions/shallowReference"
        },
        "message": {
          "description": "If the operation has Failed, Message contains the reason for failure. Null otherwise.",
          "type": "string"
        },
        "opId": {
          "description": "The ID of the operation",
          "type": "integer",
          "format": "int32"
        },
        "resultObjectType": {
          "description": "The type of the object generated as a result of the Clone operation",
          "enum": [
            "testSuite",
            "testPlan"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.ResultObjectType"
          }
        },
        "sourceObject": {
          "description": "Shallow reference of the source",
          "$ref": "#/definitions/shallowReference"
        },
        "sourcePlan": {
          "description": "Shallow reference of the source",
          "$ref": "#/definitions/shallowReference"
        },
        "sourceProject": {
          "description": "Shallow reference of the source",
          "$ref": "#/definitions/shallowReference"
        },
        "state": {
          "description": "Current state of the operation. When State reaches Suceeded or Failed, the operation is complete",
          "enum": [
            "failed",
            "inProgress",
            "queued",
            "succeeded"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.CloneOperationState"
          }
        },
        "url": {
          "description": "Url for geting the clone information",
          "type": "string"
        }
      }
    },
    "cloneOptions": {
      "type": "object",
      "properties": {
        "cloneRequirements": {
          "description": "If set to true requirements will be cloned",
          "type": "boolean"
        },
        "copyAllSuites": {
          "description": "copy all suites from a source plan",
          "type": "boolean"
        },
        "copyAncestorHierarchy": {
          "description": "copy ancestor hieracrchy",
          "type": "boolean"
        },
        "destinationWorkItemType": {
          "description": "Name of the workitem type of the clone",
          "type": "string"
        },
        "overrideParameters": {
          "description": "Key value pairs where the key value is overridden by the value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "relatedLinkComment": {
          "description": "Comment on the link that will link the new clone  test case to the original Set null for no comment",
          "type": "string"
        }
      }
    },
    "cloneStatistics": {
      "type": "object",
      "properties": {
        "clonedRequirementsCount": {
          "description": "Number of Requirments cloned so far.",
          "type": "integer",
          "format": "int32"
        },
        "clonedSharedStepsCount": {
          "description": "Number of shared steps cloned so far.",
          "type": "integer",
          "format": "int32"
        },
        "clonedTestCasesCount": {
          "description": "Number of test cases cloned so far",
          "type": "integer",
          "format": "int32"
        },
        "totalRequirementsCount": {
          "description": "Total number of requirements to be cloned",
          "type": "integer",
          "format": "int32"
        },
        "totalTestCasesCount": {
          "description": "Total number of test cases to be cloned",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "codeCoverageData": {
      "type": "object",
      "properties": {
        "buildFlavor": {
          "description": "Flavor of build for which data is retrieved/published",
          "type": "string"
        },
        "buildPlatform": {
          "description": "Platform of build for which data is retrieved/published",
          "type": "string"
        },
        "coverageStats": {
          "description": "List of coverage data for the build",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeCoverageStatistics"
          }
        }
      }
    },
    "codeCoverageStatistics": {
      "type": "object",
      "properties": {
        "covered": {
          "description": "Covered units",
          "type": "integer",
          "format": "int32"
        },
        "delta": {
          "description": "Delta of coverage",
          "type": "number",
          "format": "double"
        },
        "isDeltaAvailable": {
          "description": "Is delta valid",
          "type": "boolean"
        },
        "label": {
          "description": "Label of coverage data (\"Blocks\", \"Statements\", \"Modules\", etc.)",
          "type": "string"
        },
        "position": {
          "description": "Position of label",
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "description": "Total units",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "codeCoverageSummary": {
      "type": "object",
      "properties": {
        "build": {
          "description": "Uri of build for which data is retrieved/published",
          "$ref": "#/definitions/shallowReference"
        },
        "coverageData": {
          "description": "List of coverage data and details for the build",
          "type": "array",
          "items": {
            "$ref": "#/definitions/codeCoverageData"
          }
        },
        "deltaBuild": {
          "description": "Uri of build against which difference in coverage is computed",
          "$ref": "#/definitions/shallowReference"
        }
      }
    },
    "coverageStatistics": {
      "type": "object",
      "properties": {
        "blocksCovered": {
          "type": "integer",
          "format": "int32"
        },
        "blocksNotCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesNotCovered": {
          "type": "integer",
          "format": "int32"
        },
        "linesPartiallyCovered": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "customTestField": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "customTestFieldDefinition": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "integer",
          "format": "int32"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldType": {
          "enum": [
            "bit",
            "dateTime",
            "int",
            "float",
            "string",
            "guid"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.CustomTestFieldType"
          }
        },
        "scope": {
          "enum": [
            "none",
            "testRun",
            "testResult",
            "system",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.CustomTestFieldScope"
          }
        }
      }
    },
    "dtlEnvironmentDetails": {
      "type": "object",
      "properties": {
        "csmContent": {
          "type": "string"
        },
        "csmParameters": {
          "type": "string"
        },
        "subscriptionName": {
          "type": "string"
        }
      }
    },
    "failingSince": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/buildReference"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "release": {
          "$ref": "#/definitions/releaseReference"
        }
      }
    },
    "functionCoverage": {
      "type": "object",
      "properties": {
        "class": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "sourceFile": {
          "type": "string"
        },
        "statistics": {
          "$ref": "#/definitions/coverageStatistics"
        }
      }
    },
    "identityRef": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "lastResultDetails": {
      "type": "object",
      "properties": {
        "dateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "runBy": {
          "$ref": "#/definitions/identityRef"
        }
      }
    },
    "moduleCoverage": {
      "type": "object",
      "properties": {
        "blockCount": {
          "type": "integer",
          "format": "int32"
        },
        "blockData": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "functions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/functionCoverage"
          }
        },
        "name": {
          "type": "string"
        },
        "signature": {
          "type": "string",
          "format": "uuid"
        },
        "signatureAge": {
          "type": "integer",
          "format": "int32"
        },
        "statistics": {
          "$ref": "#/definitions/coverageStatistics"
        }
      }
    },
    "nameValuePair": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "planUpdateModel": {
      "type": "object",
      "properties": {
        "area": {
          "$ref": "#/definitions/shallowReference"
        },
        "automatedTestEnvironment": {
          "$ref": "#/definitions/testEnvironment"
        },
        "automatedTestSettings": {
          "$ref": "#/definitions/testSettings"
        },
        "build": {
          "$ref": "#/definitions/shallowReference"
        },
        "configurationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "iteration": {
          "type": "string"
        },
        "manualTestEnvironment": {
          "$ref": "#/definitions/testEnvironment"
        },
        "manualTestSettings": {
          "$ref": "#/definitions/testSettings"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/identityRef"
        },
        "startDate": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "pointAssignment": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/shallowReference"
        },
        "tester": {
          "$ref": "#/definitions/identityRef"
        }
      }
    },
    "pointUpdateModel": {
      "type": "object",
      "properties": {
        "outcome": {
          "type": "string"
        },
        "resetToActive": {
          "type": "boolean"
        },
        "tester": {
          "$ref": "#/definitions/identityRef"
        }
      }
    },
    "pointWorkItemProperty": {
      "type": "object",
      "properties": {
        "workItem": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "propertyBag": {
      "type": "object",
      "properties": {
        "bag": {
          "description": "Generic store for test session data",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "queryModel": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "releaseReference": {
      "type": "object",
      "properties": {
        "definitionId": {
          "type": "integer",
          "format": "int32"
        },
        "environmentDefinitionId": {
          "type": "integer",
          "format": "int32"
        },
        "environmentDefinitionName": {
          "type": "string"
        },
        "environmentId": {
          "type": "integer",
          "format": "int32"
        },
        "environmentName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "response": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "enum": [
            "continue",
            "switchingProtocols",
            "oK",
            "created",
            "accepted",
            "nonAuthoritativeInformation",
            "noContent",
            "resetContent",
            "partialContent",
            "multipleChoices",
            "ambiguous",
            "movedPermanently",
            "moved",
            "found",
            "redirect",
            "seeOther",
            "redirectMethod",
            "notModified",
            "useProxy",
            "unused",
            "temporaryRedirect",
            "redirectKeepVerb",
            "badRequest",
            "unauthorized",
            "paymentRequired",
            "forbidden",
            "notFound",
            "methodNotAllowed",
            "notAcceptable",
            "proxyAuthenticationRequired",
            "requestTimeout",
            "conflict",
            "gone",
            "lengthRequired",
            "preconditionFailed",
            "requestEntityTooLarge",
            "requestUriTooLong",
            "unsupportedMediaType",
            "requestedRangeNotSatisfiable",
            "expectationFailed",
            "upgradeRequired",
            "internalServerError",
            "notImplemented",
            "badGateway",
            "serviceUnavailable",
            "gatewayTimeout",
            "httpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "System.Net.HttpStatusCode"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "resultRetentionSettings": {
      "type": "object",
      "properties": {
        "automatedResultsRetentionDuration": {
          "type": "integer",
          "format": "int32"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "lastUpdatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "manualResultsRetentionDuration": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "resultsFilter": {
      "type": "object",
      "properties": {
        "automatedTestName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "groupBy": {
          "type": "string"
        },
        "maxCompleteDate": {
          "type": "string",
          "format": "date-time"
        },
        "resultsCount": {
          "type": "integer",
          "format": "int32"
        },
        "testResultsContext": {
          "$ref": "#/definitions/testResultsContext"
        },
        "trendDays": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "resultUpdateRequestModel": {
      "type": "object",
      "properties": {
        "actionResultDeletes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testActionResultModel"
          }
        },
        "actionResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testActionResultModel"
          }
        },
        "parameterDeletes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testResultParameterModel"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testResultParameterModel"
          }
        },
        "testCaseResult": {
          "$ref": "#/definitions/testCaseResultUpdateModel"
        }
      }
    },
    "resultUpdateResponseModel": {
      "type": "object",
      "properties": {
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "runCreateModel": {
      "type": "object",
      "properties": {
        "automated": {
          "type": "boolean"
        },
        "build": {
          "$ref": "#/definitions/shallowReference"
        },
        "buildDropLocation": {
          "type": "string"
        },
        "buildFlavor": {
          "type": "string"
        },
        "buildPlatform": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "completeDate": {
          "type": "string"
        },
        "configurationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "controller": {
          "type": "string"
        },
        "customTestFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customTestField"
          }
        },
        "dtlAutEnvironment": {
          "$ref": "#/definitions/shallowReference"
        },
        "dtlTestEnvironment": {
          "$ref": "#/definitions/shallowReference"
        },
        "dueDate": {
          "type": "string"
        },
        "environmentDetails": {
          "$ref": "#/definitions/dtlEnvironmentDetails"
        },
        "errorMessage": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/runFilter"
        },
        "iteration": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/identityRef"
        },
        "plan": {
          "$ref": "#/definitions/shallowReference"
        },
        "pointIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "releaseEnvironmentUri": {
          "type": "string"
        },
        "releaseUri": {
          "type": "string"
        },
        "runTimeout": {
          "type": "string",
          "format": "timeSpan"
        },
        "sourceWorkflow": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "testConfigurationsMapping": {
          "type": "string"
        },
        "testEnvironmentId": {
          "type": "string"
        },
        "testSettings": {
          "$ref": "#/definitions/shallowReference"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "runFilter": {
      "type": "object",
      "properties": {
        "sourceFilter": {
          "description": "filter for the test case sources (test containers)",
          "type": "string"
        },
        "testCaseFilter": {
          "description": "filter for the test cases",
          "type": "string"
        }
      }
    },
    "runStatistic": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "outcome": {
          "type": "string"
        },
        "resolutionState": {
          "$ref": "#/definitions/testResolutionState"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "runUpdateModel": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/shallowReference"
        },
        "comment": {
          "type": "string"
        },
        "completedDate": {
          "type": "string"
        },
        "controller": {
          "type": "string"
        },
        "deleteInProgressResults": {
          "type": "boolean"
        },
        "dtlAutEnvironment": {
          "$ref": "#/definitions/shallowReference"
        },
        "dtlEnvironment": {
          "$ref": "#/definitions/shallowReference"
        },
        "dtlEnvironmentDetails": {
          "$ref": "#/definitions/dtlEnvironmentDetails"
        },
        "dueDate": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "iteration": {
          "type": "string"
        },
        "logEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testMessageLogDetails"
          }
        },
        "name": {
          "type": "string"
        },
        "startedDate": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "substate": {
          "enum": [
            "none",
            "creatingEnvironment",
            "runningTests",
            "canceledByUser",
            "abortedBySystem",
            "timedOut",
            "pendingAnalysis",
            "analyzed",
            "cancellationInProgress"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.TestRunSubstate"
          }
        },
        "testEnvironmentId": {
          "type": "string"
        },
        "testSettings": {
          "$ref": "#/definitions/shallowReference"
        }
      }
    },
    "shallowReference": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource",
          "type": "string"
        },
        "name": {
          "description": "Name of the linked resource (definition name, controller name, etc.)",
          "type": "string"
        },
        "url": {
          "description": "Full http link to the resource",
          "type": "string"
        }
      }
    },
    "sharedStepModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "suiteCreateModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "queryString": {
          "type": "string"
        },
        "requirementIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "suiteType": {
          "type": "string"
        }
      }
    },
    "suiteEntry": {
      "type": "object",
      "properties": {
        "childSuiteId": {
          "description": "Id of child suite in a suite",
          "type": "integer",
          "format": "int32"
        },
        "sequenceNumber": {
          "description": "Sequence number for the test case or child suite in the suite",
          "type": "integer",
          "format": "int32"
        },
        "suiteId": {
          "description": "Id for the suite",
          "type": "integer",
          "format": "int32"
        },
        "testCaseId": {
          "description": "Id of a test case in a suite",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "suiteEntryUpdateModel": {
      "type": "object",
      "properties": {
        "childSuiteId": {
          "description": "Id of child suite in a suite",
          "type": "integer",
          "format": "int32"
        },
        "sequenceNumber": {
          "description": "Updated sequence number for the test case or child suite in the suite",
          "type": "integer",
          "format": "int32"
        },
        "testCaseId": {
          "description": "Id of a test case in a suite",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "suiteTestCase": {
      "type": "object",
      "properties": {
        "pointAssignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pointAssignment"
          }
        },
        "testCase": {
          "$ref": "#/definitions/workItemReference"
        }
      }
    },
    "suiteUpdateModel": {
      "type": "object",
      "properties": {
      }
    },
    "teamContext": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "team": {
          "type": "string"
        },
        "teamId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "teamProjectReference": {
      "type": "object",
      "properties": {
        "abbreviation": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int64"
        },
        "state": {
          "type": "string",
          "format": "projectState"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "testActionResultModel": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/testResultModelBase"
        }
      ],
      "properties": {
        "actionPath": {
          "type": "string"
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "sharedStepModel": {
          "$ref": "#/definitions/sharedStepModel"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "testAttachment": {
      "type": "object",
      "properties": {
        "attachmentType": {
          "enum": [
            "generalAttachment",
            "afnStrip",
            "bugFilingData",
            "codeCoverage",
            "intermediateCollectorData",
            "runConfig",
            "testImpactDetails",
            "tmiTestRunDeploymentFiles",
            "tmiTestRunReverseDeploymentFiles",
            "tmiTestResultDetail",
            "tmiTestRunSummary",
            "consoleLog"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.AttachmentType"
          }
        },
        "comment": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "fileName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "testAttachmentReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "testAttachmentRequestModel": {
      "type": "object",
      "properties": {
        "attachmentType": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "stream": {
          "type": "string"
        }
      }
    },
    "testCaseResult": {
      "type": "object",
      "properties": {
        "afnStripId": {
          "type": "integer",
          "format": "int32"
        },
        "area": {
          "$ref": "#/definitions/shallowReference"
        },
        "associatedBugs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/shallowReference"
          }
        },
        "automatedTestId": {
          "type": "string"
        },
        "automatedTestName": {
          "type": "string"
        },
        "automatedTestStorage": {
          "type": "string"
        },
        "automatedTestType": {
          "type": "string"
        },
        "automatedTestTypeId": {
          "type": "string"
        },
        "build": {
          "$ref": "#/definitions/shallowReference"
        },
        "buildReference": {
          "$ref": "#/definitions/buildReference"
        },
        "comment": {
          "type": "string"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "computerName": {
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/shallowReference"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customTestField"
          }
        },
        "durationInMs": {
          "type": "number",
          "format": "double"
        },
        "errorMessage": {
          "type": "string"
        },
        "failingSince": {
          "$ref": "#/definitions/failingSince"
        },
        "failureType": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "iterationDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testIterationDetailsModel"
          }
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "lastUpdatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "outcome": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/identityRef"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "project": {
          "$ref": "#/definitions/shallowReference"
        },
        "release": {
          "$ref": "#/definitions/shallowReference"
        },
        "releaseReference": {
          "$ref": "#/definitions/releaseReference"
        },
        "resetCount": {
          "type": "integer",
          "format": "int32"
        },
        "resolutionState": {
          "type": "string"
        },
        "resolutionStateId": {
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "runBy": {
          "$ref": "#/definitions/identityRef"
        },
        "stackTrace": {
          "type": "string"
        },
        "startedDate": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string"
        },
        "testCase": {
          "$ref": "#/definitions/shallowReference"
        },
        "testCaseTitle": {
          "type": "string"
        },
        "testPlan": {
          "$ref": "#/definitions/shallowReference"
        },
        "testPoint": {
          "$ref": "#/definitions/shallowReference"
        },
        "testRun": {
          "$ref": "#/definitions/shallowReference"
        },
        "testSuite": {
          "$ref": "#/definitions/shallowReference"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "testCaseResultAttachmentModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "testCaseResultIdentifier": {
      "type": "object",
      "properties": {
        "testResultId": {
          "type": "integer",
          "format": "int32"
        },
        "testRunId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "testCaseResultUpdateModel": {
      "type": "object",
      "properties": {
        "associatedWorkItems": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "automatedTestTypeId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "completedDate": {
          "type": "string"
        },
        "computerName": {
          "type": "string"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customTestField"
          }
        },
        "durationInMs": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "failureType": {
          "type": "string"
        },
        "outcome": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/identityRef"
        },
        "resolutionState": {
          "type": "string"
        },
        "runBy": {
          "$ref": "#/definitions/identityRef"
        },
        "stackTrace": {
          "type": "string"
        },
        "startedDate": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "testCasePriority": {
          "type": "string"
        },
        "testResult": {
          "$ref": "#/definitions/shallowReference"
        }
      }
    },
    "testConfiguration": {
      "type": "object",
      "properties": {
        "area": {
          "description": "Area of the configuration",
          "$ref": "#/definitions/shallowReference"
        },
        "description": {
          "description": "Description of the configuration",
          "type": "string"
        },
        "id": {
          "description": "Id of the configuration",
          "type": "integer",
          "format": "int32"
        },
        "isDefault": {
          "description": "Is the configuration a default for the test plans",
          "type": "boolean"
        },
        "lastUpdatedBy": {
          "description": "Last Updated By  Reference",
          "$ref": "#/definitions/identityRef"
        },
        "lastUpdatedDate": {
          "description": "Last Updated Data",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Name of the configuration",
          "type": "string"
        },
        "project": {
          "description": "Project to which the configuration belongs",
          "$ref": "#/definitions/shallowReference"
        },
        "revision": {
          "description": "Revision of the the configuration",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "State of the configuration",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.TestConfigurationState"
          }
        },
        "url": {
          "description": "Url of Configuration Resource",
          "type": "string"
        },
        "values": {
          "description": "Dictionary of Test Variable, Selected Value",
          "type": "array",
          "items": {
            "$ref": "#/definitions/nameValuePair"
          }
        }
      }
    },
    "testEnvironment": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "format": "uuid"
        },
        "environmentName": {
          "type": "string"
        }
      }
    },
    "testFailureDetails": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "testResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/shallowReference"
          }
        }
      }
    },
    "testFailuresAnalysis": {
      "type": "object",
      "properties": {
        "existingFailures": {
          "$ref": "#/definitions/testFailureDetails"
        },
        "fixedTests": {
          "$ref": "#/definitions/testFailureDetails"
        },
        "newFailures": {
          "$ref": "#/definitions/testFailureDetails"
        },
        "previousContext": {
          "$ref": "#/definitions/testResultsContext"
        }
      }
    },
    "testIterationDetailsModel": {
      "type": "object",
      "properties": {
        "actionResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testActionResultModel"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testCaseResultAttachmentModel"
          }
        },
        "comment": {
          "type": "string"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "durationInMs": {
          "type": "number",
          "format": "double"
        },
        "errorMessage": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "outcome": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testResultParameterModel"
          }
        },
        "startedDate": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "testMessageLogDetails": {
      "type": "object",
      "properties": {
        "dateCreated": {
          "description": "Date when the resource is created",
          "type": "string",
          "format": "date-time"
        },
        "entryId": {
          "description": "Id of the resource",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Message of the resource",
          "type": "string"
        }
      }
    },
    "testMethod": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "testPlan": {
      "type": "object",
      "properties": {
        "area": {
          "$ref": "#/definitions/shallowReference"
        },
        "automatedTestEnvironment": {
          "$ref": "#/definitions/testEnvironment"
        },
        "automatedTestSettings": {
          "$ref": "#/definitions/testSettings"
        },
        "build": {
          "$ref": "#/definitions/shallowReference"
        },
        "clientUrl": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "iteration": {
          "type": "string"
        },
        "manualTestEnvironment": {
          "$ref": "#/definitions/testEnvironment"
        },
        "manualTestSettings": {
          "$ref": "#/definitions/testSettings"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/identityRef"
        },
        "previousBuild": {
          "$ref": "#/definitions/shallowReference"
        },
        "project": {
          "$ref": "#/definitions/shallowReference"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "rootSuite": {
          "$ref": "#/definitions/shallowReference"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string"
        },
        "updatedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "testPlanCloneRequest": {
      "type": "object",
      "properties": {
        "destinationTestPlan": {
          "$ref": "#/definitions/testPlan"
        },
        "options": {
          "$ref": "#/definitions/cloneOptions"
        },
        "suiteIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "testPlanHubData": {
      "type": "object",
      "properties": {
        "selectedSuiteId": {
          "type": "integer",
          "format": "int32"
        },
        "testPlan": {
          "$ref": "#/definitions/testPlan"
        },
        "testPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testPoint"
          }
        },
        "testSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testSuite"
          }
        }
      }
    },
    "testPlansWithSelection": {
      "type": "object",
      "properties": {
        "lastSelectedPlan": {
          "type": "integer",
          "format": "int32"
        },
        "lastSelectedSuite": {
          "type": "integer",
          "format": "int32"
        },
        "plans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testPlan"
          }
        }
      }
    },
    "testPoint": {
      "type": "object",
      "properties": {
        "assignedTo": {
          "$ref": "#/definitions/identityRef"
        },
        "automated": {
          "type": "boolean"
        },
        "comment": {
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/shallowReference"
        },
        "failureType": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastResolutionStateId": {
          "type": "integer",
          "format": "int32"
        },
        "lastResult": {
          "$ref": "#/definitions/shallowReference"
        },
        "lastResultDetails": {
          "$ref": "#/definitions/lastResultDetails"
        },
        "lastResultState": {
          "type": "string"
        },
        "lastRunBuildNumber": {
          "type": "string"
        },
        "lastTestRun": {
          "$ref": "#/definitions/shallowReference"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "lastUpdatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "outcome": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "suite": {
          "$ref": "#/definitions/shallowReference"
        },
        "testCase": {
          "$ref": "#/definitions/workItemReference"
        },
        "testPlan": {
          "$ref": "#/definitions/shallowReference"
        },
        "url": {
          "type": "string"
        },
        "workItemProperties": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "testResolutionState": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/shallowReference"
        }
      }
    },
    "testResultCreateModel": {
      "type": "object",
      "properties": {
        "area": {
          "$ref": "#/definitions/shallowReference"
        },
        "associatedWorkItems": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "automatedTestId": {
          "type": "string"
        },
        "automatedTestName": {
          "type": "string"
        },
        "automatedTestStorage": {
          "type": "string"
        },
        "automatedTestType": {
          "type": "string"
        },
        "automatedTestTypeId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "completedDate": {
          "type": "string"
        },
        "computerName": {
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/shallowReference"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customTestField"
          }
        },
        "durationInMs": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "failureType": {
          "type": "string"
        },
        "outcome": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/identityRef"
        },
        "resolutionState": {
          "type": "string"
        },
        "runBy": {
          "$ref": "#/definitions/identityRef"
        },
        "stackTrace": {
          "type": "string"
        },
        "startedDate": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "testCase": {
          "$ref": "#/definitions/shallowReference"
        },
        "testCasePriority": {
          "type": "string"
        },
        "testCaseTitle": {
          "type": "string"
        },
        "testPoint": {
          "$ref": "#/definitions/shallowReference"
        }
      }
    },
    "testResultHistory": {
      "type": "object",
      "properties": {
        "groupByField": {
          "type": "string"
        },
        "resultsForGroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testResultHistoryDetailsForGroup"
          }
        }
      }
    },
    "testResultHistoryDetailsForGroup": {
      "type": "object",
      "properties": {
        "groupByValue": {
          "type": "object"
        },
        "latestResult": {
          "$ref": "#/definitions/testCaseResult"
        }
      }
    },
    "testResultModelBase": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "durationInMs": {
          "type": "number",
          "format": "double"
        },
        "errorMessage": {
          "type": "string"
        },
        "outcome": {
          "type": "string"
        },
        "startedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "testResultParameterModel": {
      "type": "object",
      "properties": {
        "actionPath": {
          "type": "string"
        },
        "iterationId": {
          "type": "integer",
          "format": "int32"
        },
        "parameterName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "testResultsContext": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/buildReference"
        },
        "contextType": {
          "enum": [
            "build",
            "release"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.TestResultsContextType"
          }
        },
        "release": {
          "$ref": "#/definitions/releaseReference"
        }
      }
    },
    "testResultsDetails": {
      "type": "object",
      "properties": {
        "groupByField": {
          "type": "string"
        },
        "resultsForGroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testResultsDetailsForGroup"
          }
        }
      }
    },
    "testResultsDetailsForGroup": {
      "type": "object",
      "properties": {
        "groupByValue": {
          "type": "object"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testCaseResult"
          }
        },
        "resultsCountByOutcome": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/aggregatedResultsByOutcome"
          }
        }
      }
    },
    "testResultsQuery": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testCaseResult"
          }
        },
        "resultsFilter": {
          "$ref": "#/definitions/resultsFilter"
        }
      }
    },
    "testResultSummary": {
      "type": "object",
      "properties": {
        "aggregatedResultsAnalysis": {
          "$ref": "#/definitions/aggregatedResultsAnalysis"
        },
        "teamProject": {
          "$ref": "#/definitions/teamProjectReference"
        },
        "testFailures": {
          "$ref": "#/definitions/testFailuresAnalysis"
        },
        "testResultsContext": {
          "$ref": "#/definitions/testResultsContext"
        }
      }
    },
    "testResultTrendFilter": {
      "type": "object",
      "properties": {
        "branchNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "buildCount": {
          "type": "integer",
          "format": "int32"
        },
        "definitionIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "maxCompleteDate": {
          "type": "string",
          "format": "date-time"
        },
        "publishContext": {
          "type": "string"
        },
        "testRunTitles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trendDays": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "testRun": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/shallowReference"
        },
        "buildConfiguration": {
          "$ref": "#/definitions/buildConfiguration"
        },
        "comment": {
          "type": "string"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "controller": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customTestField"
          }
        },
        "dropLocation": {
          "type": "string"
        },
        "dtlAutEnvironment": {
          "$ref": "#/definitions/shallowReference"
        },
        "dtlEnvironment": {
          "$ref": "#/definitions/shallowReference"
        },
        "dtlEnvironmentCreationDetails": {
          "$ref": "#/definitions/dtlEnvironmentDetails"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/runFilter"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "incompleteTests": {
          "type": "integer",
          "format": "int32"
        },
        "isAutomated": {
          "type": "boolean"
        },
        "iteration": {
          "type": "string"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "lastUpdatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "notApplicableTests": {
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "$ref": "#/definitions/identityRef"
        },
        "passedTests": {
          "type": "integer",
          "format": "int32"
        },
        "phase": {
          "type": "string"
        },
        "plan": {
          "$ref": "#/definitions/shallowReference"
        },
        "postProcessState": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/shallowReference"
        },
        "release": {
          "$ref": "#/definitions/releaseReference"
        },
        "releaseEnvironmentUri": {
          "type": "string"
        },
        "releaseUri": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "runStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/runStatistic"
          }
        },
        "startedDate": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string"
        },
        "substate": {
          "enum": [
            "none",
            "creatingEnvironment",
            "runningTests",
            "canceledByUser",
            "abortedBySystem",
            "timedOut",
            "pendingAnalysis",
            "analyzed",
            "cancellationInProgress"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.TestRunSubstate"
          }
        },
        "testEnvironment": {
          "$ref": "#/definitions/testEnvironment"
        },
        "testMessageLogId": {
          "type": "integer",
          "format": "int32"
        },
        "testSettings": {
          "$ref": "#/definitions/shallowReference"
        },
        "totalTests": {
          "type": "integer",
          "format": "int32"
        },
        "unanalyzedTests": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "webAccessUrl": {
          "type": "string"
        }
      }
    },
    "testRunCoverage": {
      "type": "object",
      "properties": {
        "lastError": {
          "type": "string"
        },
        "modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/moduleCoverage"
          }
        },
        "state": {
          "type": "string"
        },
        "testRun": {
          "$ref": "#/definitions/shallowReference"
        }
      }
    },
    "testRunStatistic": {
      "type": "object",
      "properties": {
        "run": {
          "$ref": "#/definitions/shallowReference"
        },
        "runStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/runStatistic"
          }
        }
      }
    },
    "testSession": {
      "type": "object",
      "properties": {
        "area": {
          "description": "Area path of the test session",
          "$ref": "#/definitions/shallowReference"
        },
        "comment": {
          "description": "Comments in the test session",
          "type": "string"
        },
        "endDate": {
          "description": "Duration of the session",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Id of the test session",
          "type": "integer",
          "format": "int32"
        },
        "lastUpdatedBy": {
          "description": "Last Updated By  Reference",
          "$ref": "#/definitions/identityRef"
        },
        "lastUpdatedDate": {
          "description": "Last updated date",
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "description": "Owner of the test session",
          "$ref": "#/definitions/identityRef"
        },
        "project": {
          "description": "Project to which the test session belongs",
          "$ref": "#/definitions/shallowReference"
        },
        "propertyBag": {
          "description": "Generic store for test session data",
          "$ref": "#/definitions/propertyBag"
        },
        "revision": {
          "description": "Revision of the test session",
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "description": "Source of the test session",
          "enum": [
            "unknown",
            "xTDesktop",
            "feedbackDesktop",
            "xTWeb",
            "feedbackWeb",
            "xTDesktop2",
            "sessionInsightsForAll"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.TestSessionSource"
          }
        },
        "startDate": {
          "description": "Start date",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "State of the test session",
          "enum": [
            "unspecified",
            "notStarted",
            "inProgress",
            "paused",
            "completed",
            "declined"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.TestManagement.WebApi.TestSessionState"
          }
        },
        "title": {
          "description": "Title of the test session",
          "type": "string"
        },
        "url": {
          "description": "Url of Test Session Resource",
          "type": "string"
        }
      }
    },
    "testSessionExploredWorkItemReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/testSessionWorkItemReference"
        }
      ],
      "properties": {
        "associatedWorkItems": {
          "description": "Workitem references of workitems filed as a part of the current workitem exploration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/testSessionWorkItemReference"
          }
        },
        "endTime": {
          "description": "Time when exploration of workitem ended.",
          "type": "string",
          "format": "date-time"
        },
        "startTime": {
          "description": "Time when explore of workitem was started.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "testSessionWorkItemReference": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the workitem",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Type of the workitem",
          "type": "string"
        }
      }
    },
    "testSettings": {
      "type": "object",
      "properties": {
        "areaPath": {
          "description": "Area path required to create test settings",
          "type": "string"
        },
        "description": {
          "description": "Description of the test settings. Used in create test settings.",
          "type": "string"
        },
        "isPublic": {
          "description": "Indicates if the tests settings is public or private.Used in create test settings.",
          "type": "boolean"
        },
        "machineRoles": {
          "description": "Xml string of machine roles. Used in create test settings.",
          "type": "string"
        },
        "testSettingsContent": {
          "description": "Test settings content.",
          "type": "string"
        },
        "testSettingsId": {
          "description": "Test settings id.",
          "type": "integer",
          "format": "int32"
        },
        "testSettingsName": {
          "description": "Test settings name.",
          "type": "string"
        }
      }
    },
    "testSuite": {
      "type": "object",
      "properties": {
        "areaUri": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testSuite"
          }
        },
        "defaultConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/shallowReference"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "inheritDefaultConfigurations": {
          "type": "boolean"
        },
        "lastError": {
          "type": "string"
        },
        "lastPopulatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "lastUpdatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "$ref": "#/definitions/shallowReference"
        },
        "plan": {
          "$ref": "#/definitions/shallowReference"
        },
        "project": {
          "$ref": "#/definitions/shallowReference"
        },
        "queryString": {
          "type": "string"
        },
        "requirementId": {
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "suites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/shallowReference"
          }
        },
        "suiteType": {
          "type": "string"
        },
        "testCaseCount": {
          "type": "integer",
          "format": "int32"
        },
        "testCasesUrl": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "testSuiteCloneRequest": {
      "type": "object",
      "properties": {
        "cloneOptions": {
          "$ref": "#/definitions/cloneOptions"
        },
        "destinationSuiteId": {
          "type": "integer",
          "format": "int32"
        },
        "destinationSuiteProjectName": {
          "type": "string"
        }
      }
    },
    "testSummaryForWorkItem": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/aggregatedDataForResultTrend"
        },
        "workItem": {
          "$ref": "#/definitions/workItemReference"
        }
      }
    },
    "testToWorkItemLinks": {
      "type": "object",
      "properties": {
        "test": {
          "$ref": "#/definitions/testMethod"
        },
        "workItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workItemReference"
          }
        }
      }
    },
    "testVariable": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the test variable",
          "type": "string"
        },
        "id": {
          "description": "Id of the test variable",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of the test variable",
          "type": "string"
        },
        "project": {
          "description": "Project to which the test variable belongs",
          "$ref": "#/definitions/shallowReference"
        },
        "revision": {
          "description": "Revision",
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "description": "Url of the test variable",
          "type": "string"
        },
        "values": {
          "description": "List of allowed values",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workItemReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "webUrl": {
          "type": "string"
        }
      }
    },
    "workItemToTestLinks": {
      "type": "object",
      "properties": {
        "tests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testMethod"
          }
        },
        "workItem": {
          "$ref": "#/definitions/workItemReference"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.test_write": "Grants the ability to read, create, and update test plans, cases, results and other test management related artifacts.",
        "vso.test": "Grants the ability to read test plans, cases, results and other test management related artifacts."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}