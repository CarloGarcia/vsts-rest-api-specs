{
  "swagger": "2.0",
  "info": {
    "title": "Pipeline",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "definitions"
    },
    {
      "name": "environments"
    },
    {
      "name": "logs"
    },
    {
      "name": "pipelines"
    },
    {
      "name": "tasks"
    },
    {
      "name": "templates"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{project}/_apis/pipeline/definitions": {
      "post": {
        "tags": [
          "definitions"
        ],
        "summary": "CreateDefinition",
        "description": "",
        "operationId": "createDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pipelineDefinition"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "definitionType",
            "description": "",
            "required": true,
            "type": "string",
            "format": "definitionType"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/pipelineDefinition"
            }
          }
        }
      },
      "get": {
        "tags": [
          "definitions"
        ],
        "summary": "GetDefinitions",
        "description": "",
        "operationId": "getDefinitions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "definitionType",
            "description": "",
            "required": true,
            "type": "string",
            "format": "definitionType"
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "artifactType",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "artifactSourceId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "pipelineDefinitionExpands"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "",
            "required": false,
            "type": "string",
            "format": "pipelineDefinitionQueryOrder"
          },
          {
            "in": "query",
            "name": "path",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isExactNameMatch",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipelineDefinition"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "definitions"
        ],
        "summary": "UpdateDefinition",
        "description": "",
        "operationId": "updateDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pipelineDefinition"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "definitionType",
            "description": "",
            "required": true,
            "type": "string",
            "format": "definitionType"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/pipelineDefinition"
            }
          }
        }
      }
    },
    "/{project}/_apis/pipeline/definitions/{definitionId}": {
      "delete": {
        "tags": [
          "definitions"
        ],
        "summary": "DeleteDefinition",
        "description": "",
        "operationId": "deleteDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "definitions"
        ],
        "summary": "GetDefinition",
        "description": "",
        "operationId": "getDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "definitionId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/pipelineDefinition"
            }
          }
        }
      }
    },
    "/{project}/_apis/pipeline/pipelines": {
      "post": {
        "tags": [
          "pipelines"
        ],
        "summary": "CreatePipeline",
        "description": "",
        "operationId": "createPipeline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pipelineStartMetadata"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          }
        }
      },
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "GetPipelines",
        "description": "",
        "operationId": "getPipelines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "definitionType",
            "description": "",
            "required": true,
            "type": "string",
            "format": "definitionType"
          },
          {
            "in": "query",
            "name": "definitionId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "definitionEnvironmentId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "createdBy",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "statusFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "pipelineStatus"
          },
          {
            "in": "query",
            "name": "environmentStatusFilter",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "minCreatedTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxCreatedTime",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "queryOrder",
            "description": "",
            "required": false,
            "type": "string",
            "format": "pipelineQueryOrder"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "pipelineExpands"
          },
          {
            "in": "query",
            "name": "artifactTypeId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "sourceId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "artifactVersionId",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "sourceBranchFilter",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isDeleted",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipeline"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/pipeline/pipelines/{pipelineId}": {
      "delete": {
        "tags": [
          "pipelines"
        ],
        "summary": "DeletePipeline",
        "description": "",
        "operationId": "deletePipeline",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pipelineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "comment",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "GetPipeline",
        "description": "",
        "operationId": "getPipeline",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pipelineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeAllApprovals",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          }
        }
      },
      "put": {
        "tags": [
          "pipelines"
        ],
        "summary": "UndeletePipeline",
        "description": "",
        "operationId": "undeletePipeline",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pipelineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "comment",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/{project}/_apis/pipeline/pipelines/{pipelineId}/environments/{environmentId}": {
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "GetPipelineEnvironment",
        "description": "",
        "operationId": "getPipelineEnvironment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pipelineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/pipelineEnvironment"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "environments"
        ],
        "summary": "UpdatePipelineEnvironment",
        "description": "",
        "operationId": "updatePipelineEnvironment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pipelineEnvironmentUpdateMetadata"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pipelineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/pipelineEnvironment"
            }
          }
        }
      }
    },
    "/{project}/_apis/pipeline/pipelines/{pipelineId}/environments/{environmentId}/deployPhases/{pipelineDeployPhaseId}/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "GetTasksForTaskGroup",
        "description": "",
        "operationId": "getTasksForTaskGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pipelineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pipelineDeployPhaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipelineTask"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/pipeline/pipelines/{pipelineId}/environments/{environmentId}/deployPhases/{pipelineDeployPhaseId}/tasks/{taskId}/logs": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "GetTaskLog",
        "description": "",
        "operationId": "getTaskLog",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pipelineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pipelineDeployPhaseId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "taskId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "attemptId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "stream"
            }
          }
        }
      }
    },
    "/{project}/_apis/pipeline/pipelines/{pipelineId}/environments/{environmentId}/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "GetTasks",
        "description": "",
        "operationId": "getTasks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pipelineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "attemptId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipelineTask"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/pipeline/pipelines/{pipelineId}/logs": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "GetLogs",
        "description": "",
        "operationId": "getLogs",
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pipelineId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "stream"
            }
          }
        }
      }
    },
    "/{project}/_apis/pipeline/templates": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "CreateDefinitionEnvironmentTemplate",
        "description": "",
        "operationId": "createDefinitionEnvironmentTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pipelineDefinitionEnvironmentTemplate"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/pipelineDefinitionEnvironmentTemplate"
            }
          }
        }
      },
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "ListDefinitionEnvironmentTemplates",
        "description": "",
        "operationId": "listDefinitionEnvironmentTemplates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "definitionType",
            "description": "",
            "required": true,
            "type": "string",
            "format": "definitionType"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipelineDefinitionEnvironmentTemplate"
              }
            }
          }
        }
      }
    },
    "/{project}/_apis/pipeline/templates/{templateId}": {
      "delete": {
        "tags": [
          "templates"
        ],
        "summary": "DeleteDefinitionEnvironmentTemplate",
        "description": "",
        "operationId": "deleteDefinitionEnvironmentTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "GetDefinitionEnvironmentTemplate",
        "description": "",
        "operationId": "getDefinitionEnvironmentTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/pipelineDefinitionEnvironmentTemplate"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "agentBasedDeployPhase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/deployPhase"
        }
      ],
      "properties": {
        "deploymentInput": {
          "$ref": "#/definitions/agentDeploymentInput"
        }
      }
    },
    "agentDeploymentInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/deploymentInput"
        }
      ],
      "properties": {
        "imageId": {
          "type": "integer",
          "format": "int32"
        },
        "parallelExecution": {
          "$ref": "#/definitions/executionInput"
        },
        "queueReference": {
          "$ref": "#/definitions/agentQueueReference"
        }
      }
    },
    "agentQueueReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isHosted": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "approvalOptions": {
      "type": "object",
      "properties": {
        "pipelineCreatorCanBeApprover": {
          "type": "boolean"
        },
        "requiredApproverCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "artifact": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "definitionReference": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/artifactSourceReference"
          }
        },
        "isPrimary": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "artifactFilter": {
      "type": "object",
      "properties": {
        "sourceBranch": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "artifactMetadata": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "instanceReference": {
          "$ref": "#/definitions/buildVersion"
        }
      }
    },
    "artifactSource": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "definitionReference": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/artifactSourceReference"
          }
        },
        "isPrimary": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "artifactSourceReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "artifactSourceTrigger": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/pipelineTriggerBase"
        }
      ],
      "properties": {
        "artifactAlias": {
          "description": "Artifact source alias for Artifact Source trigger type",
          "type": "string"
        },
        "triggerConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifactFilter"
          }
        }
      }
    },
    "baseDeploymentInput": {
      "type": "object",
      "properties": {
        "shareOutputVariables": {
          "type": "boolean"
        }
      }
    },
    "buildVersion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sourceBranch": {
          "type": "string"
        }
      }
    },
    "condition": {
      "type": "object",
      "properties": {
        "conditionType": {
          "enum": [
            "undefined",
            "event",
            "environmentState",
            "artifact"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.ConditionType"
          }
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "configurationVariableValue": {
      "type": "object",
      "properties": {
        "isSecret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "consoleLogEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/realtimePipelineEvent"
        }
      ],
      "properties": {
        "lines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timelineRecordId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "demand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "deploymentAttempt": {
      "type": "object",
      "properties": {
        "attempt": {
          "type": "integer",
          "format": "int32"
        },
        "deploymentId": {
          "type": "integer",
          "format": "int32"
        },
        "hasStarted": {
          "description": "The time at which the deployment started, and null if it has not been deployed yet",
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "lastModifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "operationStatus": {
          "enum": [
            "undefined",
            "queued",
            "scheduled",
            "pending",
            "approved",
            "rejected",
            "deferred",
            "queuedForAgent",
            "phaseInProgress",
            "phaseSucceeded",
            "phasePartiallySucceeded",
            "phaseFailed",
            "canceled",
            "phaseCanceled",
            "manualInterventionPending"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.DeploymentOperationStatus"
          }
        },
        "pipelineDeployPhases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineDeployPhase"
          }
        },
        "queuedOn": {
          "type": "string",
          "format": "date-time"
        },
        "reason": {
          "enum": [
            "none",
            "manual",
            "automated",
            "scheduled"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.DeploymentReason"
          }
        },
        "requestedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "status": {
          "enum": [
            "undefined",
            "notDeployed",
            "inProgress",
            "succeeded",
            "partiallySucceeded",
            "failed"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.DeploymentStatus"
          }
        }
      }
    },
    "deploymentInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/baseDeploymentInput"
        }
      ],
      "properties": {
        "clean": {
          "type": "boolean"
        },
        "cleanOptions": {
          "enum": [
            "source",
            "sourceAndOutputDir",
            "sourceDir",
            "allBuildDir"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.RepositoryCleanOptions"
          }
        },
        "demands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demand"
          }
        },
        "enableAccessToken": {
          "type": "boolean"
        },
        "skipArtifactsDownload": {
          "type": "boolean"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "deploymentJob": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/pipelineTask"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineTask"
          }
        }
      }
    },
    "deployPhase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phaseType": {
          "enum": [
            "undefined",
            "agentBasedDeployment",
            "runOnServer",
            "machineGroupBasedDeployment"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.DeployPhaseTypes"
          }
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "workflowTasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowTask"
          }
        }
      }
    },
    "environmentExecutionPolicy": {
      "type": "object",
      "properties": {
        "concurrencyCount": {
          "description": "This policy decides, how many environments would be with Environment Runner.",
          "type": "integer",
          "format": "int32"
        },
        "queueDepthCount": {
          "description": "Queue depth in the EnvironmentQueue table, this table keeps the environment entries till Environment Runner is free [as per it's policy] to take another environment for running.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "environmentOptions": {
      "type": "object",
      "properties": {
        "emailNotificationType": {
          "type": "string"
        },
        "emailRecipients": {
          "type": "string"
        }
      }
    },
    "environmentRetentionPolicy": {
      "type": "object",
      "properties": {
        "daysToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "pipelinesToKeep": {
          "type": "integer",
          "format": "int32"
        },
        "retainBuild": {
          "type": "boolean"
        }
      }
    },
    "executionInput": {
      "type": "object",
      "properties": {
        "parallelExecutionType": {
          "enum": [
            "none",
            "multiConfiguration",
            "multiMachine"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.ParallelExecutionTypes"
          }
        }
      }
    },
    "identityRef": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "issue": {
      "type": "object",
      "properties": {
        "issueType": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "machineGroupBasedDeployPhase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/deployPhase"
        }
      ],
      "properties": {
        "deploymentInput": {
          "$ref": "#/definitions/machineGroupDeploymentInput"
        }
      }
    },
    "machineGroupDeploymentInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/deploymentInput"
        }
      ],
      "properties": {
        "deploymentHealthOption": {
          "type": "string"
        },
        "healthPercent": {
          "type": "integer",
          "format": "int32"
        },
        "machineGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "manualIntervention": {
      "type": "object",
      "properties": {
        "approver": {
          "$ref": "#/definitions/identityRef"
        },
        "comments": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "instructions": {
          "type": "string"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "pipeline": {
          "$ref": "#/definitions/shallowReference"
        },
        "pipelineDefinition": {
          "$ref": "#/definitions/shallowReference"
        },
        "pipelineEnvironment": {
          "$ref": "#/definitions/shallowReference"
        },
        "status": {
          "enum": [
            "unknown",
            "pending",
            "rejected",
            "approved",
            "canceled"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.ManualInterventionStatus"
          }
        },
        "taskInstanceId": {
          "type": "string",
          "format": "uuid"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "multiConfigInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/parallelExecutionInputBase"
        }
      ],
      "properties": {
        "multipliers": {
          "type": "string"
        }
      }
    },
    "multiMachineInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/parallelExecutionInputBase"
        }
      ],
      "properties": {
      }
    },
    "noneExecutionInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/executionInput"
        }
      ],
      "properties": {
      }
    },
    "parallelExecutionInputBase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/executionInput"
        }
      ],
      "properties": {
        "continueOnError": {
          "type": "boolean"
        },
        "maxNumberOfAgents": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pipeline": {
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifact"
          }
        },
        "comment": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/identityRef"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "definitionSnapshotRevision": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineEnvironment"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "keepForever": {
          "type": "boolean"
        },
        "logsContainerUrl": {
          "type": "string"
        },
        "modifiedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "pipelineDefinition": {
          "$ref": "#/definitions/shallowReference"
        },
        "pipelineNameFormat": {
          "type": "string"
        },
        "poolName": {
          "type": "string"
        },
        "projectReference": {
          "$ref": "#/definitions/projectReference"
        },
        "reason": {
          "enum": [
            "none",
            "manual",
            "continuousIntegration",
            "schedule"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.PipelineReason"
          }
        },
        "status": {
          "enum": [
            "undefined",
            "draft",
            "active",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.PipelineStatus"
          }
        },
        "url": {
          "type": "string"
        },
        "variableGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/variableGroup"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/configurationVariableValue"
          }
        }
      }
    },
    "pipelineApproval": {
      "type": "object",
      "properties": {
        "approvalType": {
          "enum": [
            "undefined",
            "preDeploy",
            "postDeploy",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.ApprovalType"
          }
        },
        "approvedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "approver": {
          "$ref": "#/definitions/identityRef"
        },
        "attempt": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineApprovalHistory"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isAutomated": {
          "type": "boolean"
        },
        "isNotificationOn": {
          "type": "boolean"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "pipeline": {
          "$ref": "#/definitions/shallowReference"
        },
        "pipelineDefinition": {
          "$ref": "#/definitions/shallowReference"
        },
        "pipelineEnvironment": {
          "$ref": "#/definitions/shallowReference"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "enum": [
            "undefined",
            "pending",
            "approved",
            "rejected",
            "reassigned",
            "canceled",
            "skipped"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.ApprovalStatus"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "pipelineApprovalHistory": {
      "type": "object",
      "properties": {
        "approver": {
          "$ref": "#/definitions/identityRef"
        },
        "changedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "comments": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pipelineDefinition": {
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "artifactSources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifactSource"
          }
        },
        "comment": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/identityRef"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineDefinitionEnvironment"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastPipeline": {
          "$ref": "#/definitions/pipelineReference"
        },
        "modifiedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "pipelineNameFormat": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/projectReference"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineTriggerBase"
          }
        },
        "url": {
          "type": "string"
        },
        "variableGroups": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/configurationVariableValue"
          }
        }
      }
    },
    "pipelineDefinitionApprovals": {
      "type": "object",
      "properties": {
        "approvalOptions": {
          "$ref": "#/definitions/approvalOptions"
        },
        "approvals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineDefinitionApprovalStep"
          }
        }
      }
    },
    "pipelineDefinitionApprovalStep": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/pipelineDefinitionEnvironmentStep"
        }
      ],
      "properties": {
        "approver": {
          "$ref": "#/definitions/identityRef"
        },
        "isAutomated": {
          "type": "boolean"
        },
        "isNotificationOn": {
          "type": "boolean"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pipelineDefinitionDeployStep": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/pipelineDefinitionEnvironmentStep"
        }
      ],
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowTask"
          }
        }
      }
    },
    "pipelineDefinitionEnvironment": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/condition"
          }
        },
        "demands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demand"
          }
        },
        "deployPhases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/deployPhase"
          }
        },
        "deployStep": {
          "$ref": "#/definitions/pipelineDefinitionDeployStep"
        },
        "environmentOptions": {
          "$ref": "#/definitions/environmentOptions"
        },
        "executionPolicy": {
          "$ref": "#/definitions/environmentExecutionPolicy"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/identityRef"
        },
        "postDeployApprovals": {
          "$ref": "#/definitions/pipelineDefinitionApprovals"
        },
        "preDeployApprovals": {
          "$ref": "#/definitions/pipelineDefinitionApprovals"
        },
        "queueId": {
          "type": "integer",
          "format": "int32"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/environmentRetentionPolicy"
        },
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineSchedule"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/configurationVariableValue"
          }
        }
      }
    },
    "pipelineDefinitionEnvironmentStep": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pipelineDefinitionEnvironmentTemplate": {
      "type": "object",
      "properties": {
        "canDelete": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "definitionType": {
          "enum": [
            "release",
            "build"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.DefinitionType"
          }
        },
        "description": {
          "type": "string"
        },
        "environment": {
          "$ref": "#/definitions/pipelineDefinitionEnvironment"
        },
        "iconTaskId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "pipelineDeployPhase": {
      "type": "object",
      "properties": {
        "deploymentJobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/deploymentJob"
          }
        },
        "errorLog": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "manualInterventions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/manualIntervention"
          }
        },
        "phaseType": {
          "enum": [
            "undefined",
            "agentBasedDeployment",
            "runOnServer",
            "machineGroupBasedDeployment"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.DeployPhaseTypes"
          }
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "runPlanId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "enum": [
            "undefined",
            "notStarted",
            "inProgress",
            "partiallySucceeded",
            "succeeded",
            "failed",
            "canceled",
            "skipped"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.DeployPhaseStatus"
          }
        }
      }
    },
    "pipelineEnvironment": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/condition"
          }
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "definitionEnvironmentId": {
          "type": "integer",
          "format": "int32"
        },
        "deployPhasesSnapshot": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/deployPhase"
          }
        },
        "deploySteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/deploymentAttempt"
          }
        },
        "environmentOptions": {
          "$ref": "#/definitions/environmentOptions"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "nextScheduledUtcTime": {
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "$ref": "#/definitions/identityRef"
        },
        "pipeline": {
          "$ref": "#/definitions/shallowReference"
        },
        "pipelineCreatedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "pipelineDefinition": {
          "$ref": "#/definitions/shallowReference"
        },
        "pipelineDescription": {
          "type": "string"
        },
        "pipelineId": {
          "type": "integer",
          "format": "int32"
        },
        "postApprovalsSnapshot": {
          "$ref": "#/definitions/pipelineDefinitionApprovals"
        },
        "postDeployApprovals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineApproval"
          }
        },
        "preApprovalsSnapshot": {
          "$ref": "#/definitions/pipelineDefinitionApprovals"
        },
        "preDeployApprovals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineApproval"
          }
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "scheduledDeploymentTime": {
          "type": "string",
          "format": "date-time"
        },
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineSchedule"
          }
        },
        "status": {
          "enum": [
            "undefined",
            "notStarted",
            "inProgress",
            "succeeded",
            "canceled",
            "rejected",
            "queued",
            "scheduled",
            "partiallySucceeded"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.EnvironmentStatus"
          }
        },
        "timeToDeploy": {
          "type": "number",
          "format": "double"
        },
        "triggerReason": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/configurationVariableValue"
          }
        }
      }
    },
    "pipelineEnvironmentUpdateMetadata": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "scheduledDeploymentTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "enum": [
            "undefined",
            "notStarted",
            "inProgress",
            "succeeded",
            "canceled",
            "rejected",
            "queued",
            "scheduled",
            "partiallySucceeded"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.EnvironmentStatus"
          }
        }
      }
    },
    "pipelineReference": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifactSource"
          }
        },
        "createdBy": {
          "$ref": "#/definitions/identityRef"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pipelineDefinition": {
          "$ref": "#/definitions/shallowReference"
        },
        "url": {
          "type": "string"
        },
        "webAccessUri": {
          "type": "string"
        }
      }
    },
    "pipelineSchedule": {
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Team Foundation Job Definition Job Id",
          "type": "string",
          "format": "uuid"
        },
        "scheduleDays": {
          "description": "Days of the week to pipeline",
          "enum": [
            "none",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.ScheduleDays"
          }
        },
        "startHours": {
          "description": "Local time zone hour to start",
          "type": "integer",
          "format": "int32"
        },
        "startMinutes": {
          "description": "Local time zone minute to start",
          "type": "integer",
          "format": "int32"
        },
        "timeZoneId": {
          "description": "Time zone Id of release schedule, such as 'UTC'",
          "type": "string"
        }
      }
    },
    "pipelineStartMetadata": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifactMetadata"
          }
        },
        "definitionId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "isDraft": {
          "type": "boolean"
        },
        "manualEnvironments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reason": {
          "enum": [
            "none",
            "manual",
            "continuousIntegration",
            "schedule"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.PipelineReason"
          }
        }
      }
    },
    "pipelineTask": {
      "type": "object",
      "properties": {
        "agentName": {
          "type": "string"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "issues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/issue"
          }
        },
        "lineCount": {
          "type": "integer",
          "format": "int64"
        },
        "logUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "enum": [
            "unknown",
            "pending",
            "inProgress",
            "canceled",
            "skipped",
            "succeeded",
            "failed",
            "partiallySucceeded"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.TaskStatus"
          }
        },
        "timelineRecordId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "pipelineTriggerBase": {
      "type": "object",
      "properties": {
        "triggerType": {
          "enum": [
            "undefined",
            "artifactSource",
            "schedule"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.PipelineTriggerType"
          }
        }
      }
    },
    "pipelineUpdatedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/realtimePipelineEvent"
        }
      ],
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/pipeline"
        }
      }
    },
    "pipelineUpdateMetadata": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "keepForever": {
          "type": "boolean"
        },
        "manualEnvironments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "enum": [
            "undefined",
            "draft",
            "active",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Pipeline.WebApi.Contracts.PipelineStatus"
          }
        }
      }
    },
    "projectReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "realtimePipelineEvent": {
      "type": "object",
      "properties": {
        "pipelineId": {
          "type": "integer",
          "format": "int32"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "referenceLinks": {
      "type": "object",
      "properties": {
        "links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "runOnServerDeployPhase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/deployPhase"
        }
      ],
      "properties": {
      }
    },
    "scheduledPipelineTrigger": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/pipelineTriggerBase"
        }
      ],
      "properties": {
        "schedule": {
          "description": "Release schedule for Scheduled Release trigger type",
          "$ref": "#/definitions/pipelineSchedule"
        }
      }
    },
    "shallowReference": {
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/referenceLinks"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "timelineRecordsUpdatedEvent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/realtimePipelineEvent"
        }
      ],
      "properties": {
        "job": {
          "$ref": "#/definitions/pipelineTask"
        },
        "pipelineTasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineTask"
          }
        }
      }
    },
    "variableGroup": {
      "type": "object",
      "properties": {
        "createdBy": {
          "$ref": "#/definitions/identityRef"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedBy": {
          "$ref": "#/definitions/identityRef"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/variableValue"
          }
        }
      }
    },
    "variableValue": {
      "type": "object",
      "properties": {
        "isSecret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "workflowTask": {
      "type": "object",
      "properties": {
        "alwaysRun": {
          "type": "boolean"
        },
        "continueOnError": {
          "type": "boolean"
        },
        "definitionType": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}