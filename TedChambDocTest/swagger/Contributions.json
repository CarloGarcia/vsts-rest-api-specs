{
  "swagger": "2.0",
  "info": {
    "title": "Contributions",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.0"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "contributionNodeQuery"
    },
    {
      "name": "dataProvidersQuery"
    },
    {
      "name": "installedApps"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/contribution/dataProviders/query": {
      "post": {
        "tags": [
          "dataProvidersQuery"
        ],
        "summary": "QueryDataProviders",
        "description": "",
        "operationId": "queryDataProviders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataProviderQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataProviderResult"
            }
          }
        }
      }
    },
    "/_apis/contribution/installedapps": {
      "get": {
        "tags": [
          "installedApps"
        ],
        "summary": "GetInstalledExtensions",
        "description": "",
        "operationId": "getInstalledExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "contributionIds",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "includeDisabledApps",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "assetTypes",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InstalledExtension"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.extension.data"
            ]
          }
        ]
      }
    },
    "/_apis/contribution/installedapps/{publisherName}/{extensionName}": {
      "get": {
        "tags": [
          "installedApps"
        ],
        "summary": "GetInstalledExtensionByName",
        "description": "",
        "operationId": "getInstalledExtensionByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "publisherName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "extensionName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "assetTypes",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InstalledExtension"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.extension.data"
            ]
          }
        ]
      }
    },
    "/_apis/contribution/nodes/query": {
      "post": {
        "tags": [
          "contributionNodeQuery"
        ],
        "summary": "QueryContributionNodes",
        "description": "Query for contribution nodes and provider details according the parameters in the passed in query object.",
        "operationId": "queryContributionNodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContributionNodeQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ContributionNodeQueryResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Contribution": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ContributionBase"
        }
      ],
      "properties": {
        "constraints": {
          "description": "List of constraints (filters) that should be applied to the availability of this contribution",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContributionConstraint"
          }
        },
        "includes": {
          "description": "Includes is a set of contributions that should have this contribution included in their targets list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties/attributes of this contribution",
          "$ref": "#/definitions/JObject"
        },
        "targets": {
          "description": "The ids of the contribution(s) that this contribution targets. (parent contributions)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Id of the Contribution Type",
          "type": "string"
        }
      }
    },
    "ContributionBase": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the contribution/type",
          "type": "string"
        },
        "id": {
          "description": "Fully qualified identifier of the contribution/type",
          "type": "string"
        },
        "visibleTo": {
          "description": "VisibleTo can be used to restrict whom can reference a given contribution/type. This value should be a list of publishers or extensions access is restricted too.  Examples: \"ms\" - Means only the \"ms\" publisher can reference this. \"ms.vss-web\" - Means only the \"vss-web\" extension from the \"ms\" publisher can reference this.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContributionConstraint": {
      "type": "object",
      "properties": {
        "group": {
          "description": "An optional property that can be specified to group constraints together. All constraints within a group are AND'd together (all must be evaluate to True in order for the contribution to be included). Different groups of constraints are OR'd (only one group needs to evaluate to True for the contribution to be included).",
          "type": "integer",
          "format": "int32"
        },
        "inverse": {
          "description": "If true, negate the result of the filter (include the contribution if the applied filter returns false instead of true)",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the IContributionFilter class",
          "type": "string"
        },
        "properties": {
          "description": "Properties that are fed to the contribution filter class",
          "$ref": "#/definitions/JObject"
        },
        "relationships": {
          "description": "Constraints can be optionally be applied to one or more of the relationships defined in the contribution. If no relationships are defined then all relationships are associated with the constraint. This means the default behaviour will elimiate the contribution from the tree completely if the constraint is applied.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContributionNodeQuery": {
      "type": "object",
      "properties": {
        "contributionIds": {
          "description": "The contribution ids of the nodes to find.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeProviderDetails": {
          "description": "Indicator if contribution provider details should be included in the result.",
          "type": "boolean"
        },
        "queryOptions": {
          "description": "Query options tpo be used when fetching ContributionNodes",
          "enum": [
            "none",
            "includeSelf",
            "includeChildren",
            "includeSubTree",
            "includeAll",
            "ignoreConstraints"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionQueryOptions"
          }
        }
      }
    },
    "ContributionNodeQueryResult": {
      "type": "object",
      "properties": {
        "nodes": {
          "description": "Map of contribution ids to corresponding node.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SerializedContributionNode"
          }
        },
        "providerDetails": {
          "description": "Map of provder ids to the corresponding provider details object.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ContributionProviderDetails"
          }
        }
      }
    },
    "ContributionPropertyDescription": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the property",
          "type": "string"
        },
        "name": {
          "description": "Name of the property",
          "type": "string"
        },
        "required": {
          "description": "True if this property is required",
          "type": "boolean"
        },
        "type": {
          "description": "The type of value used for this property",
          "enum": [
            "unknown",
            "string",
            "uri",
            "guid",
            "boolean",
            "integer",
            "double",
            "dateTime",
            "dictionary",
            "array",
            "object"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionPropertyType"
          }
        }
      }
    },
    "ContributionProviderDetails": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Friendly name for the provider.",
          "type": "string"
        },
        "name": {
          "description": "Unique identifier for this provider. The provider name can be used to cache the contribution data and refer back to it when looking for changes",
          "type": "string"
        },
        "properties": {
          "description": "Properties associated with the provider",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version": {
          "description": "Version of contributions assoicated with this contribution provider.",
          "type": "string"
        }
      }
    },
    "ContributionType": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ContributionBase"
        }
      ],
      "properties": {
        "indexed": {
          "description": "Controls whether or not contributions of this type have the type indexed for queries. This allows clients to find all extensions that have a contribution of this type.  NOTE: Only TrustedPartners are allowed to specify indexed contribution types.",
          "type": "boolean"
        },
        "name": {
          "description": "Friendly name of the contribution/type",
          "type": "string"
        },
        "properties": {
          "description": "Describes the allowed properties for this contribution type",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ContributionPropertyDescription"
          }
        }
      }
    },
    "DataProviderContext": {
      "type": "object",
      "properties": {
        "properties": {
          "description": "Generic property bag that contains context-specific properties that data providers can use when populating their data dictionary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DataProviderQuery": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Contextual information to pass to the data providers",
          "$ref": "#/definitions/DataProviderContext"
        },
        "contributionIds": {
          "description": "The contribution ids of the data providers to resolve",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataProviderResult": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Property bag of data keyed off of the data provider contribution id",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resolvedProviders": {
          "description": "List of data providers resolved in the data-provider query",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolvedDataProvider"
          }
        }
      }
    },
    "ExtensionEventCallback": {
      "type": "object",
      "properties": {
        "uri": {
          "description": "The uri of the endpoint that is hit when an event occurs",
          "type": "string"
        }
      }
    },
    "ExtensionEventCallbackCollection": {
      "type": "object",
      "properties": {
        "postDisable": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension disable has occurred.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "postEnable": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension enable has occurred.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "postInstall": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension install has completed.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "postUninstall": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension uninstall has occurred.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "postUpdate": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension update has occurred.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "preInstall": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension install is about to occur.  Response indicates whether to proceed or abort.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "versionCheck": {
          "description": "For multi-version extensions, defines an endpoint that gets called via an OPTIONS request to determine the particular version of the extension to be used",
          "$ref": "#/definitions/ExtensionEventCallback"
        }
      }
    },
    "ExtensionFile": {
      "type": "object",
      "properties": {
        "assetType": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "fileId": {
          "type": "integer",
          "format": "int32"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isPublic": {
          "type": "boolean"
        },
        "language": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ExtensionLicensing": {
      "type": "object",
      "properties": {
        "overrides": {
          "description": "A list of contributions which deviate from the default licensing behavior",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LicensingOverride"
          }
        }
      }
    },
    "ExtensionManifest": {
      "type": "object",
      "properties": {
        "baseUri": {
          "description": "Uri used as base for other relative uri's defined in extension",
          "type": "string"
        },
        "contributions": {
          "description": "List of contributions made by this extension",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contribution"
          }
        },
        "contributionTypes": {
          "description": "List of contribution types defined by this extension",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContributionType"
          }
        },
        "demands": {
          "description": "List of explicit demands required by this extension",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "eventCallbacks": {
          "description": "Collection of endpoints that get called when particular extension events occur",
          "$ref": "#/definitions/ExtensionEventCallbackCollection"
        },
        "fallbackBaseUri": {
          "description": "Secondary location that can be used as base for other relative uri's defined in extension",
          "type": "string"
        },
        "language": {
          "description": "Language Culture Name set by the Gallery",
          "type": "string"
        },
        "licensing": {
          "description": "How this extension behaves with respect to licensing",
          "$ref": "#/definitions/ExtensionLicensing"
        },
        "manifestVersion": {
          "description": "Version of the extension manifest format/content",
          "type": "number",
          "format": "double"
        },
        "scopes": {
          "description": "List of all oauth scopes required by this extension",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceInstanceType": {
          "description": "The ServiceInstanceType(Guid) of the VSTS service that must be available to an account in order for the extension to be installed",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "InstalledExtension": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionManifest"
        }
      ],
      "properties": {
        "extensionId": {
          "description": "The friendly extension id for this extension - unique for a given publisher.",
          "type": "string"
        },
        "extensionName": {
          "description": "The display name of the extension.",
          "type": "string"
        },
        "files": {
          "description": "This is the set of files available from the extension.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionFile"
          }
        },
        "flags": {
          "description": "Extension flags relevant to contribution consumers",
          "enum": [
            "builtIn",
            "trusted"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionFlags"
          }
        },
        "installState": {
          "description": "Information about this particular installation of the extension",
          "$ref": "#/definitions/InstalledExtensionState"
        },
        "lastPublished": {
          "description": "This represents the date/time the extensions was last updated in the gallery. This doesnt mean this version was updated the value represents changes to any and all versions of the extension.",
          "type": "string",
          "format": "date-time"
        },
        "publisherId": {
          "description": "Unique id of the publisher of this extension",
          "type": "string"
        },
        "publisherName": {
          "description": "The display name of the publisher",
          "type": "string"
        },
        "registrationId": {
          "description": "Unique id for this extension (the same id is used for all versions of a single extension)",
          "type": "string",
          "format": "uuid"
        },
        "version": {
          "description": "Version of this extension",
          "type": "string"
        }
      }
    },
    "InstalledExtensionState": {
      "type": "object",
      "properties": {
        "flags": {
          "description": "States of an installed extension",
          "enum": [
            "none",
            "disabled",
            "builtIn",
            "multiVersion",
            "unInstalled",
            "versionCheckError",
            "trusted",
            "error",
            "needsReauthorization",
            "autoUpgradeError",
            "warning"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionStateFlags"
          }
        },
        "installationIssues": {
          "description": "List of installation issues",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstalledExtensionStateIssue"
          }
        },
        "lastUpdated": {
          "description": "The time at which this installation was last updated",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "InstalledExtensionStateIssue": {
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message",
          "type": "string"
        },
        "source": {
          "description": "Source of the installation issue, for example  \"Demands\"",
          "type": "string"
        },
        "type": {
          "description": "Installation issue type (Warning, Error)",
          "enum": [
            "warning",
            "error"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtensionStateIssueType"
          }
        }
      }
    },
    "JObject": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "JContainer"
        }
      ],
      "properties": {
        "item": {
          "type": "string",
          "format": "JToken"
        },
        "type": {
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "LicensingOverride": {
      "type": "object",
      "properties": {
        "behavior": {
          "description": "How the inclusion of this contribution should change based on licensing",
          "enum": [
            "onlyIfLicensed",
            "onlyIfUnlicensed",
            "alwaysInclude"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionLicensingBehaviorType"
          }
        },
        "id": {
          "description": "Fully qualified contribution id which we want to define licensing behavior for",
          "type": "string"
        }
      }
    },
    "ResolvedDataProvider": {
      "type": "object",
      "properties": {
        "duration": {
          "description": "The total time the data provider took to resolve its data (in milliseconds)",
          "type": "string",
          "format": "Single"
        },
        "error": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "SerializedContributionNode": {
      "type": "object",
      "properties": {
        "children": {
          "description": "List of ids for contributions which are children to the current contribution.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contribution": {
          "description": "Contribution associated with this node.",
          "$ref": "#/definitions/Contribution"
        },
        "parents": {
          "description": "List of ids for contributions which are parents to the current contribution.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.0-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.extension.data": "Grants the ability to read data (settings and documents) stored by installed extensions."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}