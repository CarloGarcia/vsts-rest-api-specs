{
  "swagger": "2.0",
  "info": {
    "title": "DelegatedAuthorization",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "authorizations"
    },
    {
      "name": "hostAuthorization"
    },
    {
      "name": "registration"
    },
    {
      "name": "registrationSecret"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/delegatedauth/authorizations": {
      "post": {
        "tags": [
          "authorizations"
        ],
        "summary": "Authorize",
        "description": "",
        "operationId": "authorize",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "responseType",
            "description": "",
            "required": true,
            "type": "string",
            "format": "ResponseType"
          },
          {
            "in": "query",
            "name": "clientId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "scopes",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuthorizationDecision"
            }
          }
        }
      },
      "get": {
        "tags": [
          "authorizations"
        ],
        "summary": "InitiateAuthorization",
        "description": "",
        "operationId": "initiateAuthorization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "responseType",
            "description": "",
            "required": true,
            "type": "string",
            "format": "ResponseType"
          },
          {
            "in": "query",
            "name": "clientId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "scopes",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuthorizationDescription"
            }
          }
        }
      }
    },
    "/_apis/delegatedauth/authorizations/{userId}": {
      "post": {
        "tags": [
          "authorizations"
        ],
        "summary": "Authorize",
        "description": "",
        "operationId": "authorize",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "responseType",
            "description": "",
            "required": true,
            "type": "string",
            "format": "ResponseType"
          },
          {
            "in": "query",
            "name": "clientId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "scopes",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuthorizationDecision"
            }
          }
        }
      },
      "get": {
        "tags": [
          "authorizations"
        ],
        "summary": "GetAuthorizations",
        "description": "",
        "operationId": "getAuthorizations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuthorizationDetails"
              }
            }
          }
        }
      }
    },
    "/_apis/delegatedauth/hostauthorization": {
      "post": {
        "tags": [
          "hostAuthorization"
        ],
        "summary": "Host",
        "description": "",
        "operationId": "host",
        "parameters": [
          {
            "in": "query",
            "name": "clientId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "hostAuthorization"
        ],
        "summary": "Revoke",
        "description": "",
        "operationId": "revoke",
        "parameters": [
          {
            "in": "query",
            "name": "clientId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "hostId",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/delegatedauth/registration": {
      "put": {
        "tags": [
          "registration"
        ],
        "summary": "Create",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          }
        }
      },
      "get": {
        "tags": [
          "registration"
        ],
        "summary": "List",
        "description": "",
        "operationId": "list",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Registration"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Update",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          }
        }
      }
    },
    "/_apis/delegatedauth/registration/{registrationId}": {
      "delete": {
        "tags": [
          "registration"
        ],
        "summary": "Delete",
        "description": "",
        "operationId": "delete",
        "parameters": [
          {
            "in": "path",
            "name": "registrationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "registration"
        ],
        "summary": "Get",
        "description": "",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "registrationId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeSecret",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          }
        }
      }
    },
    "/_apis/delegatedauth/registrationsecret/{registrationId}": {
      "get": {
        "tags": [
          "registrationSecret"
        ],
        "summary": "GetSecret",
        "description": "",
        "operationId": "getSecret",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "registrationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/JsonWebToken"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenResult": {
      "type": "object",
      "properties": {
        "accessToken": {
          "$ref": "#/definitions/JsonWebToken"
        },
        "accessTokenError": {
          "enum": [
            "none",
            "grantTypeRequired",
            "authorizationGrantRequired",
            "clientSecretRequired",
            "redirectUriRequired",
            "invalidAuthorizationGrant",
            "invalidAuthorizationScopes",
            "invalidRefreshToken",
            "authorizationNotFound",
            "authorizationGrantExpired",
            "accessAlreadyIssued",
            "invalidRedirectUri",
            "accessTokenNotFound",
            "invalidAccessToken",
            "accessTokenAlreadyRefreshed",
            "invalidClientSecret",
            "clientSecretExpired",
            "serverError",
            "accessDenied",
            "accessTokenKeyRequired",
            "invalidAccessTokenKey",
            "failedToGetAccessToken",
            "invalidClientId",
            "invalidClient",
            "invalidValidTo",
            "invalidUserId",
            "failedToIssueAccessToken",
            "authorizationGrantScopeMissing",
            "invalidPublicAccessTokenKey",
            "invalidPublicAccessToken"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.DelegatedAuthorization.TokenError"
          }
        },
        "authorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "errorDescription": {
          "type": "string"
        },
        "hasError": {
          "type": "boolean"
        },
        "refreshToken": {
          "$ref": "#/definitions/RefreshTokenGrant"
        },
        "tokenType": {
          "type": "string"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Authorization": {
      "type": "object",
      "properties": {
        "accessIssued": {
          "type": "string",
          "format": "date-time"
        },
        "audience": {
          "type": "string"
        },
        "authorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "identityId": {
          "type": "string",
          "format": "uuid"
        },
        "isAccessUsed": {
          "type": "boolean"
        },
        "isValid": {
          "type": "boolean"
        },
        "redirectUri": {
          "type": "string"
        },
        "registrationId": {
          "type": "string",
          "format": "uuid"
        },
        "scopes": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AuthorizationDecision": {
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/Authorization"
        },
        "authorizationError": {
          "enum": [
            "none",
            "clientIdRequired",
            "invalidClientId",
            "responseTypeRequired",
            "responseTypeNotSupported",
            "scopeRequired",
            "invalidScope",
            "redirectUriRequired",
            "insecureRedirectUri",
            "invalidRedirectUri",
            "invalidUserId",
            "invalidUserType",
            "accessDenied"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationError"
          }
        },
        "authorizationGrant": {
          "$ref": "#/definitions/AuthorizationGrant"
        },
        "hasError": {
          "type": "boolean"
        },
        "isAuthorized": {
          "type": "boolean"
        }
      }
    },
    "AuthorizationDescription": {
      "type": "object",
      "properties": {
        "clientRegistration": {
          "$ref": "#/definitions/Registration"
        },
        "hasError": {
          "type": "boolean"
        },
        "initiationError": {
          "enum": [
            "none",
            "clientIdRequired",
            "invalidClientId",
            "responseTypeRequired",
            "responseTypeNotSupported",
            "scopeRequired",
            "invalidScope",
            "redirectUriRequired",
            "insecureRedirectUri",
            "invalidRedirectUri"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.DelegatedAuthorization.InitiationError"
          }
        },
        "scopeDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationScopeDescription"
          }
        }
      }
    },
    "AuthorizationDetails": {
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/Authorization"
        },
        "clientRegistration": {
          "$ref": "#/definitions/Registration"
        },
        "scopeDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationScopeDescription"
          }
        }
      }
    },
    "AuthorizationGrant": {
      "type": "object",
      "properties": {
        "grantType": {
          "enum": [
            "none",
            "jwtBearer",
            "refreshToken",
            "implicit",
            "clientCredentials"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.DelegatedAuthorization.GrantType"
          }
        }
      }
    },
    "AuthorizationScopeDescription": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "market": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "HostAuthorization": {
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isValid": {
          "type": "boolean"
        },
        "registrationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "JsonWebToken": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "issuedToken"
        }
      ],
      "properties": {
      }
    },
    "RefreshTokenGrant": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/authorizationGrant"
        }
      ],
      "properties": {
        "jwt": {
          "$ref": "#/definitions/JsonWebToken"
        }
      }
    },
    "Registration": {
      "type": "object",
      "properties": {
        "clientType": {
          "enum": [
            "confidential",
            "public",
            "mediumTrust",
            "highTrust",
            "fullTrust"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.DelegatedAuthorization.ClientType"
          }
        },
        "identityId": {
          "type": "string",
          "format": "uuid"
        },
        "isValid": {
          "type": "boolean"
        },
        "isWellKnown": {
          "type": "boolean"
        },
        "organizationLocation": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "publicKey": {
          "description": "Raw cert data string from public key. This will be used for authenticating medium trust clients.",
          "type": "string"
        },
        "redirectUris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "registrationDescription": {
          "type": "string"
        },
        "registrationId": {
          "type": "string",
          "format": "uuid"
        },
        "registrationLocation": {
          "type": "string"
        },
        "registrationLogoSecureLocation": {
          "type": "string"
        },
        "registrationName": {
          "type": "string"
        },
        "registrationPrivacyStatementLocation": {
          "type": "string"
        },
        "registrationTermsOfServiceLocation": {
          "type": "string"
        },
        "responseTypes": {
          "type": "string"
        },
        "scopes": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        },
        "secretVersionId": {
          "type": "string",
          "format": "uuid"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}