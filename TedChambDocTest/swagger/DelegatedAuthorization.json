{
    "swagger": "2.0",
    "info": {
        "title": "DelegatedAuthorization",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "fabrikam-fiber-inc.visualstudio.com",
    "basePath": "/",
    "tags": [
        {
            "name": "authorizations"
        },
        {
            "name": "hostAuthorization"
        },
        {
            "name": "registration"
        },
        {
            "name": "registrationSecret"
        }
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "pat": {
            "type": "basic",
            "description": "Personal access token"
        }
    },
    "security": [
        {
            "pat": []
        }
    ], 
    "paths": {
        "/_apis/delegatedauth/authorizations/{userId}": {
            "post": {
                "tags": [
                    "authorizations"
                ],
                "summary": "Authorize",
                "description": "",
                "operationId": "authorize",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "responseType",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "responseType"
                    },
                    {
                        "in": "query",
                        "name": "clientId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "scopes",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/authorizationDecision"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "authorizations"
                ],
                "summary": "GetAuthorizations",
                "description": "",
                "operationId": "getAuthorizations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/authorizationDetails"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/delegatedauth/hostauthorization": {
            "post": {
                "tags": [
                    "hostAuthorization"
                ],
                "summary": "Host",
                "description": "",
                "operationId": "host",
                "parameters": [
                    {
                        "in": "query",
                        "name": "clientId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "hostAuthorization"
                ],
                "summary": "Revoke",
                "description": "",
                "operationId": "revoke",
                "parameters": [
                    {
                        "in": "query",
                        "name": "clientId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hostId",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/delegatedauth/registration": {
            "put": {
                "tags": [
                    "registration"
                ],
                "summary": "Create",
                "description": "",
                "operationId": "create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/registration"
                        }
                    },
                    {
                        "in": "query",
                        "name": "includeSecret",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/registration"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "registration"
                ],
                "summary": "List",
                "description": "",
                "operationId": "list",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/registration"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "registration"
                ],
                "summary": "Update",
                "description": "",
                "operationId": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/registration"
                        }
                    },
                    {
                        "in": "query",
                        "name": "includeSecret",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/registration"
                        }
                    }
                }
            }
        },
        "/_apis/delegatedauth/registration/{registrationId}": {
            "delete": {
                "tags": [
                    "registration"
                ],
                "summary": "Delete",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "registrationId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "registration"
                ],
                "summary": "Get",
                "description": "",
                "operationId": "get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "registrationId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "includeSecret",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/registration"
                        }
                    }
                }
            }
        },
        "/_apis/delegatedauth/registrationsecret/{registrationId}": {
            "get": {
                "tags": [
                    "registrationSecret"
                ],
                "summary": "GetSecret",
                "description": "",
                "operationId": "getSecret",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "registrationId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/jsonWebToken"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "accessTokenResult": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "$ref": "#/definitions/jsonWebToken"
                },
                "accessTokenError": {
                    "enum": [
                        "none",
                        "grantTypeRequired",
                        "authorizationGrantRequired",
                        "clientSecretRequired",
                        "redirectUriRequired",
                        "invalidAuthorizationGrant",
                        "invalidAuthorizationScopes",
                        "invalidRefreshToken",
                        "authorizationNotFound",
                        "authorizationGrantExpired",
                        "accessAlreadyIssued",
                        "invalidRedirectUri",
                        "accessTokenNotFound",
                        "invalidAccessToken",
                        "accessTokenAlreadyRefreshed",
                        "invalidClientSecret",
                        "clientSecretExpired",
                        "serverError",
                        "accessDenied",
                        "accessTokenKeyRequired",
                        "invalidAccessTokenKey",
                        "failedToGetAccessToken",
                        "invalidClientId",
                        "invalidClient",
                        "invalidValidTo",
                        "invalidUserId",
                        "failedToIssueAccessToken",
                        "authorizationGrantScopeMissing",
                        "invalidPublicAccessTokenKey",
                        "invalidPublicAccessToken"
                    ]
                },
                "authorizationId": {
                    "type": "string",
                    "format": "uuid"
                },
                "errorDescription": {
                    "type": "string"
                },
                "hasError": {
                    "type": "boolean"
                },
                "refreshToken": {
                    "$ref": "#/definitions/refreshTokenGrant"
                },
                "tokenType": {
                    "type": "string"
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "authorization": {
            "type": "object",
            "properties": {
                "accessIssued": {
                    "type": "string",
                    "format": "date-time"
                },
                "audience": {
                    "type": "string"
                },
                "authorizationId": {
                    "type": "string",
                    "format": "uuid"
                },
                "identityId": {
                    "type": "string",
                    "format": "uuid"
                },
                "isAccessUsed": {
                    "type": "boolean"
                },
                "isValid": {
                    "type": "boolean"
                },
                "redirectUri": {
                    "type": "string"
                },
                "registrationId": {
                    "type": "string",
                    "format": "uuid"
                },
                "scopes": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "validFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "authorizationDecision": {
            "type": "object",
            "properties": {
                "authorization": {
                    "$ref": "#/definitions/authorization"
                },
                "authorizationError": {
                    "enum": [
                        "none",
                        "clientIdRequired",
                        "invalidClientId",
                        "responseTypeRequired",
                        "responseTypeNotSupported",
                        "scopeRequired",
                        "invalidScope",
                        "redirectUriRequired",
                        "insecureRedirectUri",
                        "invalidRedirectUri",
                        "invalidUserId",
                        "invalidUserType",
                        "accessDenied"
                    ]
                },
                "authorizationGrant": {
                    "$ref": "#/definitions/authorizationGrant"
                },
                "hasError": {
                    "type": "boolean"
                },
                "isAuthorized": {
                    "type": "boolean"
                }
            }
        },
        "authorizationDescription": {
            "type": "object",
            "properties": {
                "clientRegistration": {
                    "$ref": "#/definitions/registration"
                },
                "hasError": {
                    "type": "boolean"
                },
                "initiationError": {
                    "enum": [
                        "none",
                        "clientIdRequired",
                        "invalidClientId",
                        "responseTypeRequired",
                        "responseTypeNotSupported",
                        "scopeRequired",
                        "invalidScope",
                        "redirectUriRequired",
                        "insecureRedirectUri",
                        "invalidRedirectUri"
                    ]
                },
                "scopeDescriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authorizationScopeDescription"
                    }
                }
            }
        },
        "authorizationDetails": {
            "type": "object",
            "properties": {
                "authorization": {
                    "$ref": "#/definitions/authorization"
                },
                "clientRegistration": {
                    "$ref": "#/definitions/registration"
                },
                "scopeDescriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authorizationScopeDescription"
                    }
                }
            }
        },
        "authorizationGrant": {
            "type": "object",
            "properties": {
                "grantType": {
                    "enum": [
                        "none",
                        "jwtBearer",
                        "refreshToken",
                        "implicit",
                        "clientCredentials"
                    ]
                }
            }
        },
        "authorizationScopeDescription": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "market": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "jsonWebToken": {
            "type": "object",
            "allOf": [
                {
                    "type": "string",
                    "format": "issuedToken"
                }
            ],
            "properties": {
            }
        },
        "refreshTokenGrant": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/authorizationGrant"
                }
            ],
            "properties": {
                "jwt": {
                    "$ref": "#/definitions/jsonWebToken"
                }
            }
        },
        "registration": {
            "type": "object",
            "properties": {
                "clientType": {
                    "enum": [
                        "confidential",
                        "public",
                        "mediumTrust",
                        "highTrust",
                        "fullTrust"
                    ]
                },
                "identityId": {
                    "type": "string",
                    "format": "uuid"
                },
                "isValid": {
                    "type": "boolean"
                },
                "isWellKnown": {
                    "type": "boolean"
                },
                "organizationLocation": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "publicKey": {
                    "description": "Raw cert data string from public key. This will be used for authenticating medium trust clients.",
                    "type": "string"
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registrationDescription": {
                    "type": "string"
                },
                "registrationId": {
                    "type": "string",
                    "format": "uuid"
                },
                "registrationLocation": {
                    "type": "string"
                },
                "registrationLogoSecureLocation": {
                    "type": "string"
                },
                "registrationName": {
                    "type": "string"
                },
                "registrationPrivacyStatementLocation": {
                    "type": "string"
                },
                "registrationTermsOfServiceLocation": {
                    "type": "string"
                },
                "responseTypes": {
                    "type": "string"
                },
                "scopes": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "secretVersionId": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        }
    },
    "parameters": {
        "api-Version": {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
            "required": true,
            "type": "string"
        }
    },
    "externalDocs": {
        "description": "Visual Studio Team Services REST APIs",
        "url": "https://www.visualstudio.com/docs/integrate/api/overview"
    } 
}