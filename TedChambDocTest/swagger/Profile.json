{
  "swagger": "2.0",
  "info": {
    "title": "Profile",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.2"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "attributes"
    },
    {
      "name": "avatar"
    },
    {
      "name": "geoRegion"
    },
    {
      "name": "profiles"
    },
    {
      "name": "regions"
    },
    {
      "name": "supportedLcids"
    },
    {
      "name": "userDefaults"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/profile/attributes/{id}": {
      "delete": {
        "tags": [
          "attributes"
        ],
        "summary": "DeleteProfileAttribute",
        "description": "",
        "operationId": "deleteProfileAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "descriptor",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "attributes"
        ],
        "summary": "GetProfileAttribute",
        "description": "",
        "operationId": "getProfileAttribute",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "descriptor",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProfileAttribute"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "attributes"
        ],
        "summary": "SetProfileAttribute",
        "description": "",
        "operationId": "setProfileAttribute",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JObject"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "descriptor",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "patch": {
        "tags": [
          "attributes"
        ],
        "summary": "SetProfileAttributes",
        "description": "",
        "operationId": "setProfileAttributes",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "VssJsonCollectionWrapperV"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/profile/avatar/{id}": {
      "get": {
        "tags": [
          "avatar"
        ],
        "summary": "GetAvatar",
        "description": "",
        "operationId": "getAvatar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "size",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "format",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          }
        }
      },
      "post": {
        "tags": [
          "avatar"
        ],
        "summary": "GetAvatarPreview",
        "description": "",
        "operationId": "getAvatarPreview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JObject"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "size",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "format",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "displayName",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "avatar"
        ],
        "summary": "ResetAvatar",
        "description": "",
        "operationId": "resetAvatar",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "avatar"
        ],
        "summary": "SetAvatar",
        "description": "",
        "operationId": "setAvatar",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JObject"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/profile/georegion": {
      "get": {
        "tags": [
          "geoRegion"
        ],
        "summary": "GetGeoRegion",
        "description": "Lookup up country/region based on provided IPv4, null if using the remote IPv4 address.",
        "operationId": "getGeoRegion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ipaddress",
            "description": "IPv4 address to be used for reverse lookup, null if using RemoteIPAddress in request context",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GeoRegion"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/profile/profiles": {
      "post": {
        "tags": [
          "profiles"
        ],
        "summary": "CreateProfile",
        "description": "Create profile",
        "operationId": "createProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Context for profile creation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProfileContext"
            }
          },
          {
            "in": "query",
            "name": "autoCreate",
            "description": "Create profile automatically",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        }
      }
    },
    "/_apis/profile/profiles/{id}": {
      "get": {
        "tags": [
          "profiles"
        ],
        "summary": "GetProfile",
        "description": "",
        "operationId": "getProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "details",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "withAttributes",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "partition",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "coreAttributes",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "forceRefresh",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "profiles"
        ],
        "summary": "UpdateProfile",
        "description": "Update profile",
        "operationId": "updateProfile",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Profile ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile_write"
            ]
          }
        ]
      }
    },
    "/_apis/profile/regions": {
      "get": {
        "tags": [
          "regions"
        ],
        "summary": "GetRegions",
        "description": "",
        "operationId": "getRegions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProfileRegions"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/profile/supportedlcids": {
      "get": {
        "tags": [
          "supportedLcids"
        ],
        "summary": "GetSupportedLcids",
        "description": "",
        "operationId": "getSupportedLcids",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/_apis/profile/userdefaults": {
      "get": {
        "tags": [
          "userDefaults"
        ],
        "summary": "GetRemoteProfile",
        "description": "",
        "operationId": "getRemoteProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "includeAvatar",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RemoteProfile"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/profile/userdefaults/{id}": {
      "put": {
        "tags": [
          "userDefaults"
        ],
        "summary": "RefreshUserDefaults",
        "description": "",
        "operationId": "refreshUserDefaults",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AttributeDescriptor": {
      "type": "object",
      "properties": {
        "attributeName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        }
      }
    },
    "AttributesContainer": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ProfileAttribute"
          }
        },
        "containerName": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Avatar": {
      "type": "object",
      "properties": {
        "isAutoGenerated": {
          "type": "boolean"
        },
        "size": {
          "enum": [
            "small",
            "medium",
            "large"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Profile.AvatarSize"
          }
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "CoreProfileAttribute": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "ProfileAttributeBase"
        }
      ],
      "properties": {
      }
    },
    "Country": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "englishName": {
          "type": "string"
        }
      }
    },
    "CreateProfileContext": {
      "type": "object",
      "properties": {
        "cIData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "contactWithOffers": {
          "type": "boolean"
        },
        "countryName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "hasAccount": {
          "type": "boolean"
        },
        "language": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    },
    "GeoRegion": {
      "type": "object",
      "properties": {
        "regionCode": {
          "type": "string"
        }
      }
    },
    "JObject": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "JContainer"
        }
      ],
      "properties": {
        "item": {
          "type": "string",
          "format": "JToken"
        },
        "type": {
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "applicationContainer": {
          "$ref": "#/definitions/AttributesContainer"
        },
        "coreAttributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CoreProfileAttribute"
          }
        },
        "coreRevision": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProfileAttribute": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "ProfileAttributeBase"
        }
      ],
      "properties": {
      }
    },
    "ProfileAttributeBase": {
      "type": "object",
      "properties": {
        "descriptor": {
          "$ref": "#/definitions/AttributeDescriptor"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    },
    "ProfileRegion": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The two-letter code defined in ISO 3166 for the country/region.",
          "type": "string"
        },
        "name": {
          "description": "Localized country/region name",
          "type": "string"
        }
      }
    },
    "ProfileRegions": {
      "type": "object",
      "properties": {
        "noticeContactConsentRequirementRegions": {
          "description": "List of country/region code with contact consent requirement type of notice",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "optOutContactConsentRequirementRegions": {
          "description": "List of country/region code with contact consent requirement type of opt-out",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "description": "List of country/regions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProfileRegion"
          }
        }
      }
    },
    "RemoteProfile": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "displayName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "VssJsonCollectionWrapperV": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.2-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.profile": "Grants the ability to read your profile, accounts, collections, projects, teams, and other top-level organizational artifacts.",
        "vso.profile_write": "Grants the ability to write to your profile."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}