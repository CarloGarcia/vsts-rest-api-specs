{
  "swagger": "2.0",
  "info": {
    "title": "Kalypso",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.2"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "accountSettings"
    },
    {
      "name": "alertEndpoints"
    },
    {
      "name": "builtInMonitors"
    },
    {
      "name": "containers"
    },
    {
      "name": "deploymentSettings"
    },
    {
      "name": "healthAlertMonitors"
    },
    {
      "name": "inputValuesQuery"
    },
    {
      "name": "insightsQueryResults"
    },
    {
      "name": "monitors"
    },
    {
      "name": "queries"
    },
    {
      "name": "queryContainers"
    },
    {
      "name": "queryResultMonitors"
    },
    {
      "name": "queryResults"
    },
    {
      "name": "summary"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/health/accountsettings": {
      "get": {
        "tags": [
          "accountSettings"
        ],
        "summary": "GetAccountSettings",
        "description": "",
        "operationId": "getAccountSettings",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccountSettings"
            }
          }
        }
      },
      "post": {
        "tags": [
          "accountSettings"
        ],
        "summary": "SaveAccountSettings",
        "description": "",
        "operationId": "saveAccountSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KustoEndpointProperties"
            }
          }
        }
      }
    },
    "/_apis/health/alertendpoints": {
      "post": {
        "tags": [
          "alertEndpoints"
        ],
        "summary": "CreateAlertEndpoint",
        "description": "",
        "operationId": "createAlertEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertEndpointProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AlertEndpointProperties"
            }
          }
        }
      },
      "get": {
        "tags": [
          "alertEndpoints"
        ],
        "summary": "GetAlertEndpoints",
        "description": "",
        "operationId": "getAlertEndpoints",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlertEndpointProperties"
              }
            }
          }
        }
      }
    },
    "/_apis/health/alertendpoints/{alertEndpointId}": {
      "delete": {
        "tags": [
          "alertEndpoints"
        ],
        "summary": "DeleteAlertEndpoint",
        "description": "",
        "operationId": "deleteAlertEndpoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "alertEndpointId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AlertEndpointProperties"
            }
          }
        }
      },
      "get": {
        "tags": [
          "alertEndpoints"
        ],
        "summary": "GetAlertEndpoint",
        "description": "",
        "operationId": "getAlertEndpoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "alertEndpointId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AlertEndpointProperties"
            }
          }
        }
      },
      "put": {
        "tags": [
          "alertEndpoints"
        ],
        "summary": "UpdateAlertEndpoint",
        "description": "",
        "operationId": "updateAlertEndpoint",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertEndpointProperties"
            }
          },
          {
            "in": "path",
            "name": "alertEndpointId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/health/containers": {
      "post": {
        "tags": [
          "containers"
        ],
        "summary": "CreateContainer",
        "description": "",
        "operationId": "createContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryContainerProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryContainerProperties"
            }
          }
        }
      },
      "get": {
        "tags": [
          "containers"
        ],
        "summary": "GetContainers",
        "description": "",
        "operationId": "getContainers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryContainerProperties"
              }
            }
          }
        }
      }
    },
    "/_apis/health/containers/{containerId}": {
      "delete": {
        "tags": [
          "containers"
        ],
        "summary": "DeleteContainer",
        "description": "",
        "operationId": "deleteContainer",
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "containers"
        ],
        "summary": "GetContainer",
        "description": "",
        "operationId": "getContainer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryContainerProperties"
            }
          }
        }
      },
      "put": {
        "tags": [
          "containers"
        ],
        "summary": "UpdateContainer",
        "description": "",
        "operationId": "updateContainer",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryContainerProperties"
            }
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/health/Containers/{containerId}/healthalertmonitors": {
      "post": {
        "tags": [
          "healthAlertMonitors"
        ],
        "summary": "CreateHealthAlertMonitor",
        "description": "",
        "operationId": "createHealthAlertMonitor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HealthAlertMonitorProperties"
            }
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/HealthAlertMonitorProperties"
            }
          }
        }
      }
    },
    "/_apis/health/Containers/{containerId}/healthalertmonitors/{monitorId}": {
      "delete": {
        "tags": [
          "healthAlertMonitors"
        ],
        "summary": "DeleteHealthAlertMonitor",
        "description": "",
        "operationId": "deleteHealthAlertMonitor",
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "monitorId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "healthAlertMonitors"
        ],
        "summary": "GetHealthAlertMonitor",
        "description": "",
        "operationId": "getHealthAlertMonitor",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "monitorId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/HealthAlertMonitorProperties"
            }
          }
        }
      }
    },
    "/_apis/health/Containers/{containerId}/monitors": {
      "get": {
        "tags": [
          "monitors"
        ],
        "summary": "GetMonitors",
        "description": "",
        "operationId": "getMonitors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MonitorProperties"
              }
            }
          }
        }
      }
    },
    "/_apis/health/Containers/{containerId}/Monitors/{monitorId}/insightsqueryresults": {
      "get": {
        "tags": [
          "insightsQueryResults"
        ],
        "summary": "GetQueryResultData",
        "description": "",
        "operationId": "getQueryResultData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "monitorId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "stepId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VisualizationQueryResults"
              }
            }
          }
        }
      }
    },
    "/_apis/health/Containers/{containerId}/queries": {
      "post": {
        "tags": [
          "queries"
        ],
        "summary": "AddQueryDefinition",
        "description": "",
        "operationId": "addQueryDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryDefinitionProperties"
            }
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "queries"
        ],
        "summary": "GetQueryDefinitions",
        "description": "",
        "operationId": "getQueryDefinitions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryDefinitionProperties"
              }
            }
          }
        }
      }
    },
    "/_apis/health/Containers/{containerId}/queries/{queryId}": {
      "delete": {
        "tags": [
          "queries"
        ],
        "summary": "DeleteQueryDefinition",
        "description": "",
        "operationId": "deleteQueryDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "queryId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "queries"
        ],
        "summary": "GetQueryDefinition",
        "description": "",
        "operationId": "getQueryDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "queryId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryDefinitionProperties"
            }
          }
        }
      },
      "put": {
        "tags": [
          "queries"
        ],
        "summary": "UpdateQueryDefinition",
        "description": "",
        "operationId": "updateQueryDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryDefinitionProperties"
            }
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "queryId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryResponse"
            }
          }
        }
      }
    },
    "/_apis/health/Containers/{containerId}/queryresultmonitors": {
      "post": {
        "tags": [
          "queryResultMonitors"
        ],
        "summary": "CreateQueryResultMonitor",
        "description": "",
        "operationId": "createQueryResultMonitor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryResultMonitorProperties"
            }
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryResultMonitorProperties"
            }
          }
        }
      }
    },
    "/_apis/health/Containers/{containerId}/queryresultmonitors/{monitorId}": {
      "delete": {
        "tags": [
          "queryResultMonitors"
        ],
        "summary": "DeleteQueryResultMonitor",
        "description": "",
        "operationId": "deleteQueryResultMonitor",
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "monitorId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "queryResultMonitors"
        ],
        "summary": "GetMonitorRunData",
        "description": "",
        "operationId": "getMonitorRunData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "monitorId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "runId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MonitorRunData"
            }
          }
        }
      },
      "put": {
        "tags": [
          "queryResultMonitors"
        ],
        "summary": "UpdateQueryResultMonitor",
        "description": "",
        "operationId": "updateQueryResultMonitor",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryResultMonitorProperties"
            }
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "monitorId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/health/Containers/{containerId}/summary": {
      "get": {
        "tags": [
          "summary"
        ],
        "summary": "GetSummary",
        "description": "",
        "operationId": "getSummary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "lastMonitorRuns",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ContainerSummary"
            }
          }
        }
      }
    },
    "/_apis/health/deploymentsettings": {
      "get": {
        "tags": [
          "deploymentSettings"
        ],
        "summary": "GetDeploymentSettings",
        "description": "",
        "operationId": "getDeploymentSettings",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentSettings"
            }
          }
        }
      }
    },
    "/_apis/health/inputvaluesquery": {
      "post": {
        "tags": [
          "inputValuesQuery"
        ],
        "summary": "GetInputValues",
        "description": "",
        "operationId": "getInputValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputValuesQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InputValuesQuery"
            }
          }
        }
      }
    },
    "/_apis/health/Monitors/builtinmonitors": {
      "post": {
        "tags": [
          "builtInMonitors"
        ],
        "summary": "CreateBuiltInMonitor",
        "description": "",
        "operationId": "createBuiltInMonitor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuiltInMonitorProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuiltInMonitorProperties"
            }
          }
        }
      },
      "get": {
        "tags": [
          "builtInMonitors"
        ],
        "summary": "GetBuiltInMonitors",
        "description": "",
        "operationId": "getBuiltInMonitors",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuiltInMonitorProperties"
              }
            }
          }
        }
      }
    },
    "/_apis/health/Monitors/builtinmonitors/{monitorId}": {
      "delete": {
        "tags": [
          "builtInMonitors"
        ],
        "summary": "DeleteBuiltInMonitor",
        "description": "",
        "operationId": "deleteBuiltInMonitor",
        "parameters": [
          {
            "in": "path",
            "name": "monitorId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "builtInMonitors"
        ],
        "summary": "GetBuiltInMonitor",
        "description": "",
        "operationId": "getBuiltInMonitor",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "monitorId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuiltInMonitorProperties"
            }
          }
        }
      }
    },
    "/_apis/health/querycontainers": {
      "post": {
        "tags": [
          "queryContainers"
        ],
        "summary": "CreateQueryContainer",
        "description": "",
        "operationId": "createQueryContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryContainerProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryContainerProperties"
            }
          }
        }
      },
      "get": {
        "tags": [
          "queryContainers"
        ],
        "summary": "GetQueryContainers",
        "description": "",
        "operationId": "getQueryContainers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryContainerProperties"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "queryContainers"
        ],
        "summary": "UpdateQueryContainer",
        "description": "",
        "operationId": "updateQueryContainer",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryContainerProperties"
            }
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/health/querycontainers/{containerId}": {
      "delete": {
        "tags": [
          "queryContainers"
        ],
        "summary": "DeleteQueryContainer",
        "description": "",
        "operationId": "deleteQueryContainer",
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "queryContainers"
        ],
        "summary": "GetQueryContainer",
        "description": "",
        "operationId": "getQueryContainer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryContainerProperties"
            }
          }
        }
      }
    },
    "/_apis/health/QueryContainers/{containerId}/Queries/{queryId}/queryresults": {
      "post": {
        "tags": [
          "queryResults"
        ],
        "summary": "Execute",
        "description": "Return result data if the user supplies a getData parameter in the URL. Surfaced as a REST endpoint for debugging purposes only. The underlying run query call in the service is valid for internal scenarios where we are running a query pipeline.",
        "operationId": "execute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryResult"
            }
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "queryId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "getData",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountSettings": {
      "type": "object",
      "properties": {
        "finalStageRowLimit": {
          "type": "integer",
          "format": "int32"
        },
        "healthClientUrl": {
          "type": "string"
        },
        "kustoEndpointProperties": {
          "$ref": "#/definitions/KustoEndpointProperties"
        },
        "monitorRunHistoryRetentionInDays": {
          "type": "integer",
          "format": "int32"
        },
        "nonFinalStageRowLimit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdvancedProperties": {
      "type": "object",
      "properties": {
        "severity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AlertEndpointProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ItemMetadata"
        }
      ],
      "properties": {
        "mdmAccount": {
          "description": "Mdm Account name",
          "type": "string"
        },
        "serviceBusConnectionString": {
          "description": "Service Bus connection string.",
          "type": "string"
        },
        "serviceBusEndpointUri": {
          "description": "Uri of the Service Bus namespace (without secrets).",
          "type": "string"
        },
        "tenantName": {
          "description": "Tenant Name",
          "type": "string"
        }
      }
    },
    "BlobEndpointProperties": {
      "type": "object",
      "properties": {
        "blobStorageConnectionString": {
          "description": "Blob storage connection string",
          "type": "string"
        }
      }
    },
    "BuiltInMonitorProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitorProperties"
        }
      ],
      "properties": {
        "notification": {
          "$ref": "#/definitions/EmailNotification"
        },
        "trigger": {
          "$ref": "#/definitions/ScheduledTrigger"
        },
        "type": {
          "enum": [
            "appInsightsPipeline"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.BuiltInMonitorType"
          }
        }
      }
    },
    "ColumnMetadata": {
      "type": "object",
      "properties": {
        "dataType": {
          "description": "The data type of the column",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the column",
          "type": "string"
        }
      }
    },
    "ColumnValue": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the column",
          "type": "string"
        }
      }
    },
    "ContainerSummary": {
      "type": "object",
      "properties": {
        "monitorSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorSummary"
          }
        }
      }
    },
    "DeploymentSettings": {
      "type": "object",
      "properties": {
        "supportEmail": {
          "type": "string"
        },
        "wikiUrl": {
          "type": "string"
        },
        "workItemUrl": {
          "type": "string"
        }
      }
    },
    "EmailAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "addressType": {
          "enum": [
            "to",
            "cc"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.EmailAddressType"
          }
        },
        "vsid": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "EmailNotification": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Notification"
        }
      ],
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailAddress"
          }
        }
      }
    },
    "EndpointAuthorization": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scheme": {
          "enum": [
            "personalAccessToken"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.AuthorizationScheme"
          }
        }
      }
    },
    "HealthAlertMonitorProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitorProperties"
        }
      ],
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/Pipeline"
        },
        "trigger": {
          "$ref": "#/definitions/HealthAlertTrigger"
        },
        "tsg": {
          "$ref": "#/definitions/Pipeline"
        }
      }
    },
    "HealthAlertTrigger": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "alertEndpointId": {
          "description": "AlertEndpoint reference.",
          "type": "string",
          "format": "uuid"
        },
        "incidentType": {
          "enum": [
            "preCreateIncident",
            "postCreateIncident"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.HealthAlertMonitorType"
          }
        },
        "monitorName": {
          "description": "This is the name of the MDM monitor to match in order to trigger the pipeline.  The monitor name can be found in the first position of an IcM incident title (sample: \"ASPNETRequestQueued_AT\").",
          "type": "string"
        }
      }
    },
    "IcmNotification": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Notification"
        }
      ],
      "properties": {
        "advancedProperties": {
          "$ref": "#/definitions/AdvancedProperties"
        },
        "mdmAccount": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "InputValue": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Any other data about this input",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "displayValue": {
          "description": "The text to show for the display of this value",
          "type": "string"
        },
        "value": {
          "description": "The value to store for this input",
          "type": "string"
        }
      }
    },
    "InputValues": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "description": "The default value to use for this input",
          "type": "string"
        },
        "error": {
          "description": "Errors encountered while computing dynamic values.",
          "$ref": "#/definitions/InputValuesError"
        },
        "inputId": {
          "description": "The id of the input",
          "type": "string"
        },
        "isDisabled": {
          "description": "Should this input be disabled",
          "type": "boolean"
        },
        "isLimitedToPossibleValues": {
          "description": "Should the value be restricted to one of the values in the PossibleValues (True) or are the values in PossibleValues just a suggestion (False)",
          "type": "boolean"
        },
        "isReadOnly": {
          "description": "Should this input be made read-only",
          "type": "boolean"
        },
        "possibleValues": {
          "description": "Possible values that this input can take",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputValue"
          }
        }
      }
    },
    "InputValuesError": {
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      }
    },
    "InputValuesQuery": {
      "type": "object",
      "properties": {
        "currentValues": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "inputValues": {
          "description": "The input values to return on input, and the result from the consumer on output.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputValues"
          }
        },
        "resource": {
          "description": "Subscription containing information about the publisher/consumer and the current input values",
          "type": "object"
        }
      }
    },
    "ItemMetadata": {
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "Created By",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdOn": {
          "description": "Created On",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name.",
          "type": "string"
        },
        "id": {
          "description": "An immutable id to support stable references.",
          "type": "string",
          "format": "uuid"
        },
        "modifiedBy": {
          "description": "Created By",
          "$ref": "#/definitions/IdentityRef"
        },
        "modifiedOn": {
          "description": "Created On",
          "type": "string",
          "format": "date-time"
        },
        "refName": {
          "description": "Reference name that can be used in place of the id.",
          "type": "string"
        }
      }
    },
    "KustoEndpointProperties": {
      "type": "object",
      "properties": {
        "clusterName": {
          "description": "Kusto cluster name",
          "type": "string"
        },
        "databaseName": {
          "description": "Kusto database name",
          "type": "string"
        }
      }
    },
    "Log": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "runId": {
          "type": "string",
          "format": "uuid"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "verbosity": {
          "enum": [
            "info",
            "warning",
            "error"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.LoggingVerbosity"
          }
        }
      }
    },
    "MonitorOutputStore": {
      "type": "object",
      "properties": {
        "blobEndpoint": {
          "$ref": "#/definitions/BlobEndpointProperties"
        },
        "kustoEndpoint": {
          "$ref": "#/definitions/KustoEndpointProperties"
        },
        "storeNamePrefix": {
          "type": "string"
        },
        "type": {
          "enum": [
            "kusto",
            "blob"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.MonitorOutputStoreType"
          }
        }
      }
    },
    "MonitorProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ItemMetadata"
        }
      ],
      "properties": {
        "category": {
          "enum": [
            "queryResultMonitor",
            "healthAlertMonitor",
            "builtInMonitor"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.MonitorCategory"
          }
        },
        "containerId": {
          "type": "string",
          "format": "uuid"
        },
        "disabled": {
          "type": "boolean"
        },
        "silent": {
          "type": "boolean"
        },
        "tsgLink": {
          "description": "TSG Link.",
          "type": "string"
        }
      }
    },
    "MonitorRunData": {
      "type": "object",
      "properties": {
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "jobResult": {
          "enum": [
            "succeeded",
            "partiallySucceeded",
            "failed",
            "stopped",
            "blocked"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.JobResult"
          }
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Log"
          }
        },
        "monitorId": {
          "type": "string",
          "format": "uuid"
        },
        "monitorRunResult": {
          "enum": [
            "succeeded",
            "signaled",
            "platformError",
            "userError",
            "signaledWithError"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.MonitorRunResult"
          }
        },
        "runId": {
          "type": "string",
          "format": "uuid"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "stepData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorRunStepData"
          }
        }
      }
    },
    "MonitorRunStepData": {
      "type": "object",
      "properties": {
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "type": "string"
        },
        "monitorStepResult": {
          "enum": [
            "passed",
            "passedNonZeroResults",
            "platformError",
            "userError"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.MonitorStepResult"
          }
        },
        "ordinal": {
          "type": "integer",
          "format": "int32"
        },
        "queryContainerId": {
          "type": "string",
          "format": "uuid"
        },
        "queryPath": {
          "type": "string"
        },
        "querySnapshot": {
          "type": "integer",
          "format": "int32"
        },
        "runId": {
          "type": "string",
          "format": "uuid"
        },
        "stage": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "stepId": {
          "type": "integer",
          "format": "int32"
        },
        "tokenBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenBinding"
          }
        }
      }
    },
    "MonitorSummary": {
      "type": "object",
      "properties": {
        "monitorId": {
          "type": "string",
          "format": "uuid"
        },
        "monitorRuns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorRunData"
          }
        }
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "email",
            "icm"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.AlertNotificationType"
          }
        }
      }
    },
    "NotificationInsights": {
      "type": "object",
      "properties": {
        "insights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryReference"
          }
        },
        "tsg": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryReference"
          }
        }
      }
    },
    "Pipeline": {
      "type": "object",
      "properties": {
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryReference"
          }
        },
        "tokenBindings": {
          "description": "Default token values globally scoped to the pipeline",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenBinding"
          }
        }
      }
    },
    "QueryContainerProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ItemMetadata"
        }
      ],
      "properties": {
        "accountUri": {
          "description": "Uri of the VSTS account hosting the repo supplying queries.",
          "type": "string"
        },
        "authorization": {
          "description": "Authorization details for accessing the repo.",
          "$ref": "#/definitions/EndpointAuthorization"
        },
        "contentPath": {
          "description": "Path within the repo to use when reading content.",
          "type": "string"
        },
        "outputStore": {
          "description": "Storage details for monitor output",
          "$ref": "#/definitions/MonitorOutputStore"
        },
        "project": {
          "description": "Name of the team project.  Used to look up the repository.",
          "type": "string"
        },
        "repoName": {
          "description": "Name of the repo.  Used to look up the repository id during a content fetch.",
          "type": "string"
        }
      }
    },
    "QueryDefinitionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/QueryItemMetadata"
        }
      ],
      "properties": {
        "contentType": {
          "description": "A definition with one query returns one set of results and can be used to drive fan-out.  A definition with multiple embedded queries is a collection that can be used in monitors.",
          "enum": [
            "singleQuery",
            "multiQuery"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.ContentType"
          }
        },
        "path": {
          "description": "Path in the repository",
          "type": "string"
        },
        "queryInstances": {
          "description": "A set of executable query instances derived from the raw query string.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryInstance"
          }
        },
        "rawQuery": {
          "description": "Raw query string.",
          "type": "string"
        }
      }
    },
    "QueryInstance": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "results": {
          "type": "string"
        }
      }
    },
    "QueryItemMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ItemMetadata"
        }
      ],
      "properties": {
        "containerId": {
          "description": "Reference to the container associated with this query",
          "type": "string",
          "format": "uuid"
        },
        "tokenList": {
          "description": "List of tokens that must be bound to run the query.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryReference": {
      "type": "object",
      "properties": {
        "containerId": {
          "description": "Container id where the query is located",
          "type": "string",
          "format": "uuid"
        },
        "ordinal": {
          "description": "the stage of the query in the pipeline",
          "type": "integer",
          "format": "int32"
        },
        "queryPath": {
          "description": "Repository path of the query",
          "type": "string"
        },
        "stage": {
          "description": "the stage of the query in the pipeline",
          "type": "integer",
          "format": "int32"
        },
        "tokenBindings": {
          "description": "Default token values locally scoped",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenBinding"
          }
        }
      }
    },
    "QueryResponse": {
      "type": "object",
      "properties": {
        "pullRequestId": {
          "description": "The Id of the pull request.",
          "type": "integer",
          "format": "int32"
        },
        "pullRequestUrl": {
          "description": "The URL to the pull request.",
          "type": "string"
        }
      }
    },
    "QueryResult": {
      "type": "object",
      "properties": {
        "deepLink": {
          "description": "Base-64 encoded deep link of bound query string.",
          "type": "string"
        },
        "results": {
          "description": "Collection of queries from a query definition file with descriptions, query text and Uri references to results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryInstance"
          }
        },
        "tokenBindings": {
          "description": "Token bindings needed to run a query.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenBinding"
          }
        }
      }
    },
    "QueryResultMonitorProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitorProperties"
        }
      ],
      "properties": {
        "icmNotification": {
          "$ref": "#/definitions/IcmNotification"
        },
        "notification": {
          "$ref": "#/definitions/EmailNotification"
        },
        "notificationInsights": {
          "$ref": "#/definitions/NotificationInsights"
        },
        "pipeline": {
          "$ref": "#/definitions/Pipeline"
        },
        "trigger": {
          "$ref": "#/definitions/ScheduledTrigger"
        },
        "type": {
          "enum": [
            "zeroRowMonitor"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.QueryResultMonitorType"
          }
        },
        "visualizationInsights": {
          "$ref": "#/definitions/VisualizationInsights"
        }
      }
    },
    "QueryResults": {
      "type": "object",
      "properties": {
        "columns": {
          "description": "The schema of the result data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnMetadata"
          }
        },
        "columnValues": {
          "description": "The column-store result data All of values of each column is stored as a list",
          "type": "array",
          "items": {
            "type": "array"
          }
        }
      }
    },
    "ScheduledTrigger": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TokenBinding": {
      "type": "object",
      "properties": {
        "token": {
          "description": "Token name used as replacement string when binding queries.",
          "type": "string"
        },
        "type": {
          "description": "Cast type determines transform applied to value string.",
          "enum": [
            "none",
            "string",
            "timeSpan",
            "dateTime"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.CastType"
          }
        },
        "value": {
          "description": "Token value as a string which is cast to a type at bind time.",
          "type": "string"
        }
      }
    },
    "Trigger": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "scheduled",
            "healthAlert"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.TriggerType"
          }
        }
      }
    },
    "VisualizationInsights": {
      "type": "object",
      "properties": {
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisualizationQueryReference"
          }
        }
      }
    },
    "VisualizationQueryReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/QueryReference"
        }
      ],
      "properties": {
        "boundQueryText": {
          "description": "Repository path of the query",
          "type": "string"
        },
        "includeInNotification": {
          "description": "Promote the visualization query to notification",
          "type": "boolean"
        },
        "queryDeepLink": {
          "description": "Kusto query deep link in Kusto explorer",
          "type": "string"
        },
        "queryWebDeepLink": {
          "description": "Kusto query deep link in Kusto web explorer",
          "type": "string"
        },
        "visualizationType": {
          "description": "The visualization type of the query results",
          "enum": [
            "timeseries",
            "table"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Kalypso.WebApi.VisualizationType"
          }
        }
      }
    },
    "VisualizationQueryResults": {
      "type": "object",
      "properties": {
        "containerId": {
          "type": "string",
          "format": "uuid"
        },
        "monitorId": {
          "type": "string",
          "format": "uuid"
        },
        "query": {
          "$ref": "#/definitions/VisualizationQueryReference"
        },
        "results": {
          "$ref": "#/definitions/QueryResults"
        },
        "runId": {
          "type": "string",
          "format": "uuid"
        },
        "stepId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.2-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}