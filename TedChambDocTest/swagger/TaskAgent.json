{
    "$schema":Â "http://swagger.io/v2/schema.json#",
    "swagger": "2.0",
    "info": {
        "title": "TaskAgent",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "fabrikam-fiber-inc.visualstudio.com",
    "basePath": "/",
    "tags": [
        {
            "name": "agents"
        },
        {
            "name": "azurermsubscriptions"
        },
        {
            "name": "endpoint"
        },
        {
            "name": "hublicense"
        },
        {
            "name": "icon"
        },
        {
            "name": "jobrequests"
        },
        {
            "name": "machinegroups"
        },
        {
            "name": "machines"
        },
        {
            "name": "messages"
        },
        {
            "name": "packages"
        },
        {
            "name": "poolroles"
        },
        {
            "name": "pools"
        },
        {
            "name": "queueroles"
        },
        {
            "name": "queues"
        },
        {
            "name": "serviceendpointproxy"
        },
        {
            "name": "serviceendpoints"
        },
        {
            "name": "serviceendpointtypes"
        },
        {
            "name": "sessions"
        },
        {
            "name": "taskgroups"
        },
        {
            "name": "tasks"
        },
        {
            "name": "usercapabilities"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/_apis/distributedtask/endpoint": {
            "post": {
                "tags": [
                    "endpoint"
                ],
                "summary": "QueryEndpoint",
                "description": "Proxy for a GET request defined by an 'endpoint'. The request is authorized using a service connection. The response is filtered using an XPath/Json based selector.",
                "operationId": "queryEndpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Describes the URL to fetch.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskDefinitionEndpoint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/hublicense/{hubName}": {
            "get": {
                "tags": [
                    "hublicense"
                ],
                "summary": "GetTaskHubLicenseDetails",
                "description": "",
                "operationId": "getTaskHubLicenseDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "hubName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "includeEnterpriseUsersCount",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskHubLicenseDetails"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "hublicense"
                ],
                "summary": "UpdateTaskHubLicenseDetails",
                "description": "",
                "operationId": "updateTaskHubLicenseDetails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskHubLicenseDetails"
                        }
                    },
                    {
                        "in": "path",
                        "name": "hubName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskHubLicenseDetails"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/packages/{packageType}/{platform}": {
            "get": {
                "tags": [
                    "packages"
                ],
                "summary": "GetPackages",
                "description": "",
                "operationId": "getPackages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "packageType",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "platform",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PackageMetadata"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/packages/{packageType}/{platform}/{version}": {
            "get": {
                "tags": [
                    "packages"
                ],
                "summary": "GetPackage",
                "description": "",
                "operationId": "getPackage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "packageType",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "platform",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PackageMetadata"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/poolroles/{poolId}": {
            "get": {
                "tags": [
                    "poolroles"
                ],
                "summary": "GetAgentPoolRoles",
                "description": "",
                "operationId": "getAgentPoolRoles",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "IdentityRef"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/pools": {
            "post": {
                "tags": [
                    "pools"
                ],
                "summary": "AddAgentPool",
                "description": "",
                "operationId": "addAgentPool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskAgentPool"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentPool"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "pools"
                ],
                "summary": "GetAgentPools",
                "description": "",
                "operationId": "getAgentPools",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "poolName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "properties",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "poolType",
                        "description": "",
                        "required": false,
                        "type": "TaskAgentPoolType"
                    },
                    {
                        "in": "query",
                        "name": "actionFilter",
                        "description": "",
                        "required": false,
                        "type": "TaskAgentPoolActionFilter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskAgentPool"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}": {
            "delete": {
                "tags": [
                    "pools"
                ],
                "summary": "DeleteAgentPool",
                "description": "",
                "operationId": "deleteAgentPool",
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "pools"
                ],
                "summary": "GetAgentPool",
                "description": "",
                "operationId": "getAgentPool",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "properties",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "actionFilter",
                        "description": "",
                        "required": false,
                        "type": "TaskAgentPoolActionFilter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentPool"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "pools"
                ],
                "summary": "UpdateAgentPool",
                "description": "",
                "operationId": "updateAgentPool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskAgentPool"
                        }
                    },
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentPool"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}/agents": {
            "post": {
                "tags": [
                    "agents"
                ],
                "summary": "AddAgent",
                "description": "",
                "operationId": "addAgent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskAgent"
                        }
                    },
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgent"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "agents"
                ],
                "summary": "GetAgents",
                "description": "",
                "operationId": "getAgents",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "agentName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "includeCapabilities",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "includeAssignedRequest",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "demands",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskAgent"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}/agents/{agentId}": {
            "delete": {
                "tags": [
                    "agents"
                ],
                "summary": "DeleteAgent",
                "description": "",
                "operationId": "deleteAgent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "agentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "agents"
                ],
                "summary": "GetAgent",
                "description": "",
                "operationId": "getAgent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "agentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "includeCapabilities",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "includeAssignedRequest",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgent"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "agents"
                ],
                "summary": "ReplaceAgent",
                "description": "",
                "operationId": "replaceAgent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskAgent"
                        }
                    },
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "agentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgent"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "agents"
                ],
                "summary": "UpdateAgent",
                "description": "",
                "operationId": "updateAgent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskAgent"
                        }
                    },
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "agentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgent"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}/agents/{agentId}/usercapabilities": {
            "put": {
                "tags": [
                    "usercapabilities"
                ],
                "summary": "UpdateAgentUserCapabilities",
                "description": "",
                "operationId": "updateAgentUserCapabilities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "agentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgent"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}/jobrequests": {
            "get": {
                "tags": [
                    "jobrequests"
                ],
                "summary": "GetAgentRequestsForAgent",
                "description": "",
                "operationId": "getAgentRequestsForAgent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "agentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "completedRequestCount",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskAgentJobRequest"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "jobrequests"
                ],
                "summary": "QueueAgentRequest",
                "description": "",
                "operationId": "queueAgentRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskAgentJobRequest"
                        }
                    },
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentJobRequest"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}": {
            "delete": {
                "tags": [
                    "jobrequests"
                ],
                "summary": "DeleteAgentRequest",
                "description": "",
                "operationId": "deleteAgentRequest",
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "requestId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "lockToken",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "jobrequests"
                ],
                "summary": "GetAgentRequest",
                "description": "",
                "operationId": "getAgentRequest",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "requestId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentJobRequest"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "jobrequests"
                ],
                "summary": "UpdateAgentRequest",
                "description": "",
                "operationId": "updateAgentRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskAgentJobRequest"
                        }
                    },
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "requestId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "lockToken",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentJobRequest"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}/messages": {
            "get": {
                "tags": [
                    "messages"
                ],
                "summary": "GetMessage",
                "description": "",
                "operationId": "getMessage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "sessionId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "lastMessageId",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentMessage"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "messages"
                ],
                "summary": "RefreshAgent",
                "description": "",
                "operationId": "refreshAgent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "agentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}/messages/{messageId}": {
            "delete": {
                "tags": [
                    "messages"
                ],
                "summary": "DeleteMessage",
                "description": "",
                "operationId": "deleteMessage",
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "messageId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "sessionId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}/sessions": {
            "post": {
                "tags": [
                    "sessions"
                ],
                "summary": "CreateAgentSession",
                "description": "",
                "operationId": "createAgentSession",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskAgentSession"
                        }
                    },
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentSession"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/pools/{poolId}/sessions/{sessionId}": {
            "delete": {
                "tags": [
                    "sessions"
                ],
                "summary": "DeleteAgentSession",
                "description": "",
                "operationId": "deleteAgentSession",
                "parameters": [
                    {
                        "in": "path",
                        "name": "poolId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "sessionId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/distributedtask/queueroles/{queueId}": {
            "get": {
                "tags": [
                    "queueroles"
                ],
                "summary": "GetAgentQueueRoles",
                "description": "",
                "operationId": "getAgentQueueRoles",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "queueId",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "IdentityRef"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/serviceendpointproxy/azurermsubscriptions": {
            "get": {
                "tags": [
                    "azurermsubscriptions"
                ],
                "summary": "GetAzureSubscriptions",
                "description": "",
                "operationId": "getAzureSubscriptions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AzureSubscriptionQueryResult"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/serviceendpointtypes": {
            "get": {
                "tags": [
                    "serviceendpointtypes"
                ],
                "summary": "GetServiceEndpointTypes",
                "description": "",
                "operationId": "getServiceEndpointTypes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "type",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "scheme",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceEndpointType"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/tasks/{taskId}": {
            "delete": {
                "tags": [
                    "tasks"
                ],
                "summary": "DeleteTaskDefinition",
                "description": "",
                "operationId": "deleteTaskDefinition",
                "parameters": [
                    {
                        "in": "path",
                        "name": "taskId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "GetTaskDefinitions",
                "description": "",
                "operationId": "getTaskDefinitions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "taskId",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "visibility",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scopeLocal",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskDefinition"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/tasks/{taskId}/{versionString}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "GetTaskContentZip",
                "description": "",
                "operationId": "getTaskContentZip",
                "produces": [
                    "application/json",
                    "application/zip"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "taskId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "path",
                        "name": "versionString",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "visibility",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scopeLocal",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "Stream"
                        }
                    }
                }
            }
        },
        "/_apis/distributedtask/tasks/{taskId}/{versionString}/icon": {
            "get": {
                "tags": [
                    "icon"
                ],
                "summary": "GetTaskIcon",
                "description": "",
                "operationId": "getTaskIcon",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "taskId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "path",
                        "name": "versionString",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "StreamContent"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/machinegroups": {
            "post": {
                "tags": [
                    "machinegroups"
                ],
                "summary": "AddDeploymentMachineGroup",
                "description": "",
                "operationId": "addDeploymentMachineGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeploymentMachineGroup"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentMachineGroup"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "machinegroups"
                ],
                "summary": "GetDeploymentMachineGroups",
                "description": "",
                "operationId": "getDeploymentMachineGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "machineGroupName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "actionFilter",
                        "description": "",
                        "required": false,
                        "type": "MachineGroupActionFilter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentMachineGroup"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/machinegroups/{machineGroupId}": {
            "delete": {
                "tags": [
                    "machinegroups"
                ],
                "summary": "DeleteDeploymentMachineGroup",
                "description": "",
                "operationId": "deleteDeploymentMachineGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "machineGroupId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "machinegroups"
                ],
                "summary": "GetDeploymentMachineGroup",
                "description": "",
                "operationId": "getDeploymentMachineGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "machineGroupId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "actionFilter",
                        "description": "",
                        "required": false,
                        "type": "MachineGroupActionFilter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentMachineGroup"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "machinegroups"
                ],
                "summary": "UpdateDeploymentMachineGroup",
                "description": "",
                "operationId": "updateDeploymentMachineGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeploymentMachineGroup"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "machineGroupId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeploymentMachineGroup"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/machinegroups/{machineGroupId}/machines": {
            "get": {
                "tags": [
                    "machines"
                ],
                "summary": "GetDeploymentMachines",
                "description": "",
                "operationId": "getDeploymentMachines",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "machineGroupId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "tagFilters",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentMachine"
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "machines"
                ],
                "summary": "UpdateDeploymentMachines",
                "description": "",
                "operationId": "updateDeploymentMachines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/DeploymentMachine"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "machineGroupId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentMachine"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/queues": {
            "post": {
                "tags": [
                    "queues"
                ],
                "summary": "AddAgentQueue",
                "description": "",
                "operationId": "addAgentQueue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskAgentQueue"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentQueue"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "queues"
                ],
                "summary": "CreateTeamProject",
                "description": "",
                "operationId": "createTeamProject",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "queues"
                ],
                "summary": "GetAgentQueues",
                "description": "",
                "operationId": "getAgentQueues",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "queueName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "actionFilter",
                        "description": "",
                        "required": false,
                        "type": "TaskAgentQueueActionFilter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskAgentQueue"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/queues/{queueId}": {
            "delete": {
                "tags": [
                    "queues"
                ],
                "summary": "DeleteAgentQueue",
                "description": "",
                "operationId": "deleteAgentQueue",
                "parameters": [
                    {
                        "in": "path",
                        "name": "queueId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "queues"
                ],
                "summary": "GetAgentQueue",
                "description": "",
                "operationId": "getAgentQueue",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "queueId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "actionFilter",
                        "description": "",
                        "required": false,
                        "type": "TaskAgentQueueActionFilter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskAgentQueue"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/serviceendpointproxy": {
            "post": {
                "tags": [
                    "serviceendpointproxy"
                ],
                "summary": "ExecuteServiceEndpointRequest",
                "description": "",
                "operationId": "executeServiceEndpointRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServiceEndpointRequest"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "endpointId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ServiceEndpointRequestResult"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/serviceendpoints": {
            "post": {
                "tags": [
                    "serviceendpoints"
                ],
                "summary": "CreateServiceEndpoint",
                "description": "",
                "operationId": "createServiceEndpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServiceEndpoint"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ServiceEndpoint"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "serviceendpoints"
                ],
                "summary": "GetServiceEndpoints",
                "description": "",
                "operationId": "getServiceEndpoints",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "authSchemes",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "endpointIds",
                        "description": "",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "Guid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "includeFailed",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceEndpoint"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/serviceendpoints/{endpointId}": {
            "delete": {
                "tags": [
                    "serviceendpoints"
                ],
                "summary": "DeleteServiceEndpoint",
                "description": "",
                "operationId": "deleteServiceEndpoint",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "endpointId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "serviceendpoints"
                ],
                "summary": "GetServiceEndpointDetails",
                "description": "",
                "operationId": "getServiceEndpointDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "endpointId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ServiceEndpoint"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "serviceendpoints"
                ],
                "summary": "UpdateServiceEndpoint",
                "description": "",
                "operationId": "updateServiceEndpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServiceEndpoint"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "endpointId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ServiceEndpoint"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/taskgroups": {
            "post": {
                "tags": [
                    "taskgroups"
                ],
                "summary": "AddTaskGroup",
                "description": "",
                "operationId": "addTaskGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskGroup"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskGroup"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "taskgroups"
                ],
                "summary": "UpdateTaskGroup",
                "description": "",
                "operationId": "updateTaskGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskGroup"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TaskGroup"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/distributedtask/taskgroups/{taskGroupId}": {
            "delete": {
                "tags": [
                    "taskgroups"
                ],
                "summary": "DeleteTaskGroup",
                "description": "",
                "operationId": "deleteTaskGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "taskGroupId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "taskgroups"
                ],
                "summary": "GetTaskGroups",
                "description": "",
                "operationId": "getTaskGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "taskGroupId",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "expanded",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskGroup"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AgentChangeEvent": {
            "type": "object",
            "properties": {
                "agent": {
                    "$ref": "#/definitions/TaskAgent"
                },
                "eventType": {
                    "type": "string"
                },
                "pool": {
                    "$ref": "#/definitions/TaskAgentPoolReference"
                },
                "poolId": {
                    "type": "integer",
                    "format": "int32"
                },
                "timeStamp": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AgentJobRequestMessage": {
            "type": "JobRequestMessage",
            "properties": {
                "lockedUntil": {
                    "type": "string",
                    "format": "date-time"
                },
                "lockToken": {
                    "type": "string",
                    "format": "uuid"
                },
                "requestId": {
                    "type": "integer",
                    "format": "int64"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "TaskInstance"
                    }
                }
            }
        },
        "AgentMigrationMessage": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "AgentPoolEvent": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string"
                },
                "pool": {
                    "$ref": "#/definitions/TaskAgentPool"
                }
            }
        },
        "AgentQueueEvent": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string"
                },
                "queue": {
                    "$ref": "#/definitions/TaskAgentQueue"
                }
            }
        },
        "AgentRefreshMessage": {
            "type": "object",
            "properties": {
                "agentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "timeout": {
                    "type": "TimeSpan"
                }
            }
        },
        "AgentRequestEvent": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string"
                },
                "planId": {
                    "type": "string",
                    "format": "uuid"
                },
                "poolId": {
                    "type": "integer",
                    "format": "int32"
                },
                "reservedAgentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "result": {
                    "enum": [
                        "succeeded",
                        "succeededWithIssues",
                        "failed",
                        "canceled",
                        "skipped",
                        "abandoned"
                    ]
                },
                "timeStamp": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AuthorizationHeader": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "AzureSpnOperationStatus": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string"
                },
                "statusMessage": {
                    "type": "string"
                }
            }
        },
        "AzureSubscription": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "string"
                },
                "subscriptionTenantId": {
                    "type": "string"
                },
                "subscriptionTenantName": {
                    "type": "string"
                }
            }
        },
        "AzureSubscriptionQueryResult": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "AzureSubscription"
                    }
                }
            }
        },
        "DataSource": {
            "type": "object",
            "properties": {
                "endpointUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resultSelector": {
                    "type": "string"
                }
            }
        },
        "DataSourceBinding": {
            "type": "DataSourceBindingBase",
            "properties": {
            }
        },
        "DataSourceDetails": {
            "type": "object",
            "properties": {
                "dataSourceName": {
                    "type": "string"
                },
                "dataSourceUrl": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "resultSelector": {
                    "type": "string"
                }
            }
        },
        "Demand": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "DependencyBinding": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "DependsOn": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "string"
                },
                "map": {
                    "type": "array",
                    "items": {
                        "type": "DependencyBinding"
                    }
                }
            }
        },
        "DeploymentMachine": {
            "type": "object",
            "properties": {
                "agent": {
                    "$ref": "#/definitions/TaskAgentReference"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DeploymentMachineGroup": {
            "type": "DeploymentMachineGroupReference",
            "properties": {
                "machines": {
                    "type": "array",
                    "items": {
                        "type": "DeploymentMachine"
                    }
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DeploymentMachineGroupReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "pool": {
                    "$ref": "#/definitions/TaskAgentPoolReference"
                },
                "projectId": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "DeploymentMachinesChangeEvent": {
            "type": "object",
            "properties": {
                "machineGroupReference": {
                    "$ref": "#/definitions/DeploymentMachineGroupReference"
                },
                "machines": {
                    "type": "array",
                    "items": {
                        "type": "DeploymentMachine"
                    }
                }
            }
        },
        "EndpointAuthorization": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "scheme": {
                    "type": "string"
                }
            }
        },
        "EndpointUrl": {
            "type": "object",
            "properties": {
                "dependsOn": {
                    "$ref": "#/definitions/DependsOn"
                },
                "displayName": {
                    "type": "string"
                },
                "helpText": {
                    "type": "string"
                },
                "isVisible": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "HelpLink": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "Issue": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "error",
                        "warning"
                    ]
                }
            }
        },
        "JobAssignedEvent": {
            "type": "JobEvent",
            "properties": {
                "request": {
                    "$ref": "#/definitions/TaskAgentJobRequest"
                }
            }
        },
        "JobCancelMessage": {
            "type": "object",
            "properties": {
                "jobId": {
                    "type": "string",
                    "format": "uuid"
                },
                "timeout": {
                    "type": "TimeSpan"
                }
            }
        },
        "JobCompletedEvent": {
            "type": "JobEvent",
            "properties": {
                "requestId": {
                    "type": "integer",
                    "format": "int64"
                },
                "result": {
                    "enum": [
                        "succeeded",
                        "succeededWithIssues",
                        "failed",
                        "canceled",
                        "skipped",
                        "abandoned"
                    ]
                }
            }
        },
        "JobEnvironment": {
            "type": "object",
            "properties": {
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "ServiceEndpoint"
                    }
                },
                "mask": {
                    "type": "array",
                    "items": {
                        "type": "MaskHint"
                    }
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/JobOption"
                    }
                },
                "systemConnection": {
                    "description": "Gets or sets the endpoint used for communicating back to the calling service.",
                    "$ref": "#/definitions/ServiceEndpoint"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "JobEvent": {
            "type": "object",
            "properties": {
                "jobId": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "JobEventConfig": {
            "type": "object",
            "properties": {
                "timeout": {
                    "type": "string"
                }
            }
        },
        "JobEventsConfig": {
            "type": "object",
            "properties": {
                "jobAssigned": {
                    "$ref": "#/definitions/JobEventConfig"
                },
                "jobCompleted": {
                    "$ref": "#/definitions/JobEventConfig"
                },
                "jobStarted": {
                    "$ref": "#/definitions/JobEventConfig"
                }
            }
        },
        "JobOption": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "Gets the id of the option.",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "JobRequestMessage": {
            "type": "object",
            "properties": {
                "environment": {
                    "$ref": "#/definitions/JobEnvironment"
                },
                "jobId": {
                    "type": "string",
                    "format": "uuid"
                },
                "jobName": {
                    "type": "string"
                },
                "messageType": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/definitions/TaskOrchestrationPlanReference"
                },
                "timeline": {
                    "$ref": "#/definitions/TimelineReference"
                }
            }
        },
        "JobStartedEvent": {
            "type": "JobEvent",
            "properties": {
            }
        },
        "MaskHint": {
            "type": "object",
            "properties": {
                "type": {
                    "enum": [
                        "variable",
                        "regex"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "MetaTaskDefinition": {
            "type": "TaskDefinition",
            "properties": {
                "owner": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "MetaTaskStep"
                    }
                }
            }
        },
        "MetaTaskStep": {
            "type": "object",
            "properties": {
                "alwaysRun": {
                    "type": "boolean"
                },
                "continueOnError": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "inputs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "task": {
                    "$ref": "#/definitions/TaskDefinitionReference"
                },
                "timeoutInMinutes": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PackageMetadata": {
            "type": "object",
            "properties": {
                "createdOn": {
                    "description": "The date the package was created",
                    "type": "string",
                    "format": "date-time"
                },
                "downloadUrl": {
                    "description": "A direct link to download the package.",
                    "type": "string"
                },
                "filename": {
                    "description": "The UI uses this to display instructions, i.e. \"unzip MyAgent.zip\"",
                    "type": "string"
                },
                "hashValue": {
                    "description": "MD5 hash as a base64 string",
                    "type": "string"
                },
                "infoUrl": {
                    "description": "A link to documentation",
                    "type": "string"
                },
                "platform": {
                    "description": "The platform (win7, linux, etc.)",
                    "type": "string"
                },
                "type": {
                    "description": "The type of package (e.g. \"agent\")",
                    "type": "string"
                },
                "version": {
                    "description": "The package version.",
                    "$ref": "#/definitions/PackageVersion"
                }
            }
        },
        "PackageVersion": {
            "type": "object",
            "properties": {
                "major": {
                    "type": "integer",
                    "format": "int32"
                },
                "minor": {
                    "type": "integer",
                    "format": "int32"
                },
                "patch": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PlanEnvironment": {
            "type": "object",
            "properties": {
                "mask": {
                    "type": "array",
                    "items": {
                        "type": "MaskHint"
                    }
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/JobOption"
                    }
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ResultTransformationDetails": {
            "type": "object",
            "properties": {
                "resultTemplate": {
                    "type": "string"
                }
            }
        },
        "SendJobResponse": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/definitions/JobEventsConfig"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ServerExecutionDefinition": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/definitions/JobEventsConfig"
                }
            }
        },
        "ServerJobRequestMessage": {
            "type": "JobRequestMessage",
            "properties": {
                "taskDefinition": {
                    "$ref": "#/definitions/TaskDefinition"
                },
                "taskInstance": {
                    "$ref": "#/definitions/TaskInstance"
                }
            }
        },
        "ServiceEndpoint": {
            "type": "object",
            "properties": {
                "administratorsGroup": {
                    "type": "IdentityRef"
                },
                "authorization": {
                    "description": "Gets or sets the authorization data for talking to the endpoint.",
                    "$ref": "#/definitions/EndpointAuthorization"
                },
                "createdBy": {
                    "description": "The Gets or sets Identity reference for the user who created the Service endpoint",
                    "type": "IdentityRef"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "description": {
                    "description": "Gets or Sets description of endpoint",
                    "type": "string"
                },
                "groupScopeId": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "description": "Gets or sets the identifier of this endpoint.",
                    "type": "string",
                    "format": "uuid"
                },
                "isReady": {
                    "description": "EndPoint state indictor",
                    "type": "boolean"
                },
                "name": {
                    "description": "Gets or sets the friendly name of the endpoint.",
                    "type": "string"
                },
                "operationStatus": {
                    "description": "Error message during creation/deletion of endpoint",
                    "type": "JObject"
                },
                "readersGroup": {
                    "type": "IdentityRef"
                },
                "type": {
                    "description": "Gets or sets the type of the endpoint.",
                    "type": "string"
                },
                "url": {
                    "description": "Gets or sets the url of the endpoint.",
                    "type": "string"
                }
            }
        },
        "ServiceEndpointAuthenticationScheme": {
            "type": "object",
            "properties": {
                "authorizationHeaders": {
                    "type": "array",
                    "items": {
                        "type": "AuthorizationHeader"
                    }
                },
                "displayName": {
                    "type": "string"
                },
                "inputDescriptors": {
                    "type": "array",
                    "items": {
                        "type": "InputDescriptor"
                    }
                },
                "scheme": {
                    "type": "string"
                }
            }
        },
        "ServiceEndpointDetails": {
            "type": "object",
            "properties": {
                "authorization": {
                    "$ref": "#/definitions/EndpointAuthorization"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ServiceEndpointRequest": {
            "type": "object",
            "properties": {
                "dataSourceDetails": {
                    "$ref": "#/definitions/DataSourceDetails"
                },
                "resultTransformationDetails": {
                    "$ref": "#/definitions/ResultTransformationDetails"
                },
                "serviceEndpointDetails": {
                    "$ref": "#/definitions/ServiceEndpointDetails"
                }
            }
        },
        "ServiceEndpointRequestResult": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "type": "JToken"
                },
                "statusCode": {
                    "type": "HttpStatusCode"
                }
            }
        },
        "ServiceEndpointType": {
            "type": "object",
            "properties": {
                "authenticationSchemes": {
                    "type": "array",
                    "items": {
                        "type": "ServiceEndpointAuthenticationScheme"
                    }
                },
                "dataSources": {
                    "type": "array",
                    "items": {
                        "type": "DataSource"
                    }
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "endpointUrl": {
                    "$ref": "#/definitions/EndpointUrl"
                },
                "helpLink": {
                    "$ref": "#/definitions/HelpLink"
                },
                "helpMarkDown": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "inputDescriptors": {
                    "type": "array",
                    "items": {
                        "type": "InputDescriptor"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TaskAgent": {
            "type": "TaskAgentReference",
            "properties": {
                "assignedRequest": {
                    "description": "Gets the request which is currently assigned to this agent.",
                    "$ref": "#/definitions/TaskAgentJobRequest"
                },
                "authorization": {
                    "description": "Gets or sets the authorization information for this agent.",
                    "$ref": "#/definitions/TaskAgentAuthorization"
                },
                "createdOn": {
                    "description": "Gets the date on which this agent was created.",
                    "type": "string",
                    "format": "date-time"
                },
                "maxParallelism": {
                    "description": "Gets or sets the maximum job parallelism allowed on this host.",
                    "type": "integer",
                    "format": "int32"
                },
                "properties": {
                    "type": "PropertiesCollection"
                },
                "statusChangedOn": {
                    "description": "Gets the date on which the last connectivity status change occurred.",
                    "type": "string",
                    "format": "date-time"
                },
                "systemCapabilities": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userCapabilities": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskAgentAuthorization": {
            "type": "object",
            "properties": {
                "authorizationUrl": {
                    "description": "Gets or sets the endpoint used to obtain access tokens from the configured token service.",
                    "type": "string"
                },
                "clientId": {
                    "description": "Gets or sets the client identifier for this agent.",
                    "type": "string",
                    "format": "uuid"
                },
                "publicKey": {
                    "description": "Gets or sets the public key used to verify the identity of this agent.",
                    "$ref": "#/definitions/TaskAgentPublicKey"
                }
            }
        },
        "TaskAgentJobRequest": {
            "type": "object",
            "properties": {
                "assignTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "definition": {
                    "$ref": "#/definitions/TaskOrchestrationOwner"
                },
                "demands": {
                    "type": "array",
                    "items": {
                        "type": "Demand"
                    }
                },
                "finishTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "hostId": {
                    "type": "string",
                    "format": "uuid"
                },
                "jobId": {
                    "type": "string",
                    "format": "uuid"
                },
                "jobName": {
                    "type": "string"
                },
                "lockedUntil": {
                    "type": "string",
                    "format": "date-time"
                },
                "matchedAgents": {
                    "type": "array",
                    "items": {
                        "type": "TaskAgentReference"
                    }
                },
                "owner": {
                    "$ref": "#/definitions/TaskOrchestrationOwner"
                },
                "planId": {
                    "type": "string",
                    "format": "uuid"
                },
                "planType": {
                    "type": "string"
                },
                "queueTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "receiveTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "requestId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reservedAgent": {
                    "$ref": "#/definitions/TaskAgentReference"
                },
                "result": {
                    "enum": [
                        "succeeded",
                        "succeededWithIssues",
                        "failed",
                        "canceled",
                        "skipped",
                        "abandoned"
                    ]
                },
                "scopeId": {
                    "type": "string",
                    "format": "uuid"
                },
                "serviceOwner": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "TaskAgentMessage": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "Gets or sets the body of the message. If the IV property is provided the body will need to be decrypted using the TaskAgentSession.EncryptionKey value in addition to the IV.",
                    "type": "string"
                },
                "iV": {
                    "description": "Gets or sets the intialization vector used to encrypt this message.",
                    "type": "array",
                    "items": {
                        "type": "byte"
                    }
                },
                "messageId": {
                    "description": "Gets or sets the message identifier.",
                    "type": "integer",
                    "format": "int64"
                },
                "messageType": {
                    "description": "Gets or sets the message type, describing the data contract found in TaskAgentMessage.Body.",
                    "type": "string"
                }
            }
        },
        "TaskAgentPool": {
            "type": "TaskAgentPoolReference",
            "properties": {
                "administratorsGroup": {
                    "description": "Gets the administrators group for this agent pool.",
                    "type": "IdentityRef"
                },
                "autoProvision": {
                    "description": "Gets or sets a value indicating whether or not a queue should be automatically provisioned for each project collection or not.",
                    "type": "boolean"
                },
                "createdBy": {
                    "description": "Gets the identity who created this pool. The creator of the pool is automatically added into the administrators group for the pool on creation.",
                    "type": "IdentityRef"
                },
                "createdOn": {
                    "description": "Gets the date/time of the pool creation.",
                    "type": "string",
                    "format": "date-time"
                },
                "groupScopeId": {
                    "description": "Gets the scope identifier for groups/roles which are owned by this pool.",
                    "type": "string",
                    "format": "uuid"
                },
                "isHosted": {
                    "description": "Gets or sets a value indicating whether or not this pool is managed by the service.",
                    "type": "boolean"
                },
                "properties": {
                    "type": "PropertiesCollection"
                },
                "provisioned": {
                    "description": "Gets a value indicating whether or not roles have been provisioned for this pool.",
                    "type": "boolean"
                },
                "serviceAccountsGroup": {
                    "description": "Gets the service accounts group for this agent pool.",
                    "type": "IdentityRef"
                },
                "size": {
                    "description": "Gets the current size of the pool.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TaskAgentPoolReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "poolType": {
                    "description": "Gets or sets the type of the pool",
                    "enum": [
                        "automation",
                        "deployment"
                    ]
                },
                "scope": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "TaskAgentPublicKey": {
            "type": "object",
            "properties": {
                "exponent": {
                    "description": "Gets or sets the exponent for the public key.",
                    "type": "array",
                    "items": {
                        "type": "byte"
                    }
                },
                "modulus": {
                    "description": "Gets or sets the modulus for the public key.",
                    "type": "array",
                    "items": {
                        "type": "byte"
                    }
                }
            }
        },
        "TaskAgentQueue": {
            "type": "object",
            "properties": {
                "groupScopeId": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "pool": {
                    "$ref": "#/definitions/TaskAgentPoolReference"
                },
                "projectId": {
                    "type": "string",
                    "format": "uuid"
                },
                "provisioned": {
                    "type": "boolean"
                }
            }
        },
        "TaskAgentReference": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "enabled": {
                    "description": "Gets or sets a value indicating whether or not this agent should be enabled for job execution.",
                    "type": "boolean"
                },
                "id": {
                    "description": "Gets the identifier of the agent.",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "Gets the name of the agent.",
                    "type": "string"
                },
                "status": {
                    "description": "Gets the current connectivity status of the agent.",
                    "enum": [
                        "offline",
                        "online"
                    ]
                },
                "version": {
                    "description": "Gets the version of the agent.",
                    "type": "string"
                }
            }
        },
        "TaskAgentSession": {
            "type": "object",
            "properties": {
                "agent": {
                    "description": "Gets or sets the agent which is the target of the session.",
                    "$ref": "#/definitions/TaskAgentReference"
                },
                "encryptionKey": {
                    "description": "Gets the key used to encrypt message traffic for this session.",
                    "$ref": "#/definitions/TaskAgentSessionKey"
                },
                "ownerName": {
                    "description": "Gets or sets the owner name of this session. Generally this will be the machine of origination.",
                    "type": "string"
                },
                "sessionId": {
                    "description": "Gets the unique identifier for this session.",
                    "type": "string",
                    "format": "uuid"
                },
                "systemCapabilities": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskAgentSessionKey": {
            "type": "object",
            "properties": {
                "encrypted": {
                    "description": "Gets or sets a value indicating whether or not the key value is encrypted. If this value is true, the property should be decrypted using the RSA key exchanged with the server during registration.",
                    "type": "boolean"
                },
                "value": {
                    "description": "Gets or sets the symmetric key value.",
                    "type": "array",
                    "items": {
                        "type": "byte"
                    }
                }
            }
        },
        "TaskAttachment": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastChangedBy": {
                    "type": "string",
                    "format": "uuid"
                },
                "lastChangedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "recordId": {
                    "type": "string",
                    "format": "uuid"
                },
                "timelineId": {
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "TaskChangeEvent": {
            "type": "object",
            "properties": {
            }
        },
        "TaskDefinition": {
            "type": "object",
            "properties": {
                "agentExecution": {
                    "$ref": "#/definitions/TaskExecution"
                },
                "author": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "contentsUploaded": {
                    "type": "boolean"
                },
                "contributionIdentifier": {
                    "type": "string"
                },
                "contributionVersion": {
                    "type": "string"
                },
                "dataSourceBindings": {
                    "type": "array",
                    "items": {
                        "type": "DataSourceBinding"
                    }
                },
                "definitionType": {
                    "type": "string"
                },
                "demands": {
                    "type": "array",
                    "items": {
                        "type": "Demand"
                    }
                },
                "description": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "execution": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "JObject"
                    }
                },
                "friendlyName": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "TaskGroupDefinition"
                    }
                },
                "helpMarkDown": {
                    "type": "string"
                },
                "hostType": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "TaskInputDefinition"
                    }
                },
                "instanceNameFormat": {
                    "type": "string"
                },
                "minimumAgentVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "packageLocation": {
                    "type": "string"
                },
                "packageType": {
                    "type": "string"
                },
                "runsOn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serverOwned": {
                    "type": "boolean"
                },
                "sourceDefinitions": {
                    "type": "array",
                    "items": {
                        "type": "TaskSourceDefinition"
                    }
                },
                "sourceLocation": {
                    "type": "string"
                },
                "version": {
                    "$ref": "#/definitions/TaskVersion"
                },
                "visibility": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskDefinitionEndpoint": {
            "type": "object",
            "properties": {
                "connectionId": {
                    "description": "An ID that identifies a service connection to be used for authenticating endpoint requests.",
                    "type": "string"
                },
                "keySelector": {
                    "description": "An Json based keyselector to filter response returned by fetching the endpoint Url.A Json based keyselector must be prefixed with \"jsonpath:\". KeySelector can be used to specify the filter to get the keys for the values specified with Selector.  The following keyselector defines an Json for extracting nodes named 'ServiceName'.  endpoint.KeySelector = \"jsonpath://ServiceName\";",
                    "type": "string"
                },
                "scope": {
                    "description": "The scope as understood by Connected Services. Essentialy, a project-id for now.",
                    "type": "string"
                },
                "selector": {
                    "description": "An XPath/Json based selector to filter response returned by fetching the endpoint Url. An XPath based selector must be prefixed with the string \"xpath:\". A Json based selector must be prefixed with \"jsonpath:\".  The following selector defines an XPath for extracting nodes named 'ServiceName'.  endpoint.Selector = \"xpath://ServiceName\";",
                    "type": "string"
                },
                "taskId": {
                    "description": "TaskId that this endpoint belongs to.",
                    "type": "string"
                },
                "url": {
                    "description": "URL to GET.",
                    "type": "string"
                }
            }
        },
        "TaskDefinitionReference": {
            "type": "object",
            "properties": {
                "definitionType": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "versionSpec": {
                    "type": "string"
                }
            }
        },
        "TaskExecution": {
            "type": "object",
            "properties": {
                "execTask": {
                    "description": "The utility task to run.  Specifying this means that this task definition is simply a meta task to call another task. This is useful for tasks that call utility tasks like powershell and commandline",
                    "$ref": "#/definitions/TaskReference"
                },
                "platformInstructions": {
                    "description": "If a task is going to run code, then this provides the type/script etc... information by platform. For example, it might look like. net45: { typeName: \"Microsoft.TeamFoundation.Automation.Tasks.PowerShellTask\", assemblyName: \"Microsoft.TeamFoundation.Automation.Tasks.PowerShell.dll\" } net20: { typeName: \"Microsoft.TeamFoundation.Automation.Tasks.PowerShellTask\", assemblyName: \"Microsoft.TeamFoundation.Automation.Tasks.PowerShell.dll\" } java: { jar: \"powershelltask.tasks.automation.teamfoundation.microsoft.com\", } node: { script: \"powershellhost.js\", }",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "TaskGroup": {
            "type": "TaskDefinition",
            "properties": {
                "owner": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "TaskGroupStep"
                    }
                }
            }
        },
        "TaskGroupDefinition": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "isExpanded": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskGroupStep": {
            "type": "object",
            "properties": {
                "alwaysRun": {
                    "type": "boolean"
                },
                "continueOnError": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "inputs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "task": {
                    "$ref": "#/definitions/TaskDefinitionReference"
                },
                "timeoutInMinutes": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TaskHubLicenseDetails": {
            "type": "object",
            "properties": {
                "enterpriseUsersCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "freeLicenseCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "hasLicenseCountEverUpdated": {
                    "type": "boolean"
                },
                "msdnUsersCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "purchasedLicenseCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalLicenseCount": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TaskInputDefinition": {
            "type": "TaskInputDefinitionBase",
            "properties": {
            }
        },
        "TaskInstance": {
            "type": "TaskReference",
            "properties": {
                "alwaysRun": {
                    "type": "boolean"
                },
                "continueOnError": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "instanceId": {
                    "type": "string",
                    "format": "uuid"
                },
                "timeoutInMinutes": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TaskLog": {
            "type": "TaskLogReference",
            "properties": {
                "createdOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "indexLocation": {
                    "type": "string"
                },
                "lastChangedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "lineCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "TaskLogReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "TaskOrchestrationContainer": {
            "type": "TaskOrchestrationItem",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "type": "TaskOrchestrationItem"
                    }
                },
                "continueOnError": {
                    "type": "boolean"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxConcurrency": {
                    "type": "integer",
                    "format": "int32"
                },
                "parallel": {
                    "type": "boolean"
                },
                "rollback": {
                    "$ref": "#/definitions/TaskOrchestrationContainer"
                }
            }
        },
        "TaskOrchestrationItem": {
            "type": "object",
            "properties": {
                "itemType": {
                    "enum": [
                        "container",
                        "job"
                    ]
                }
            }
        },
        "TaskOrchestrationJob": {
            "type": "TaskOrchestrationItem",
            "properties": {
                "demands": {
                    "type": "array",
                    "items": {
                        "type": "Demand"
                    }
                },
                "executeAs": {
                    "type": "IdentityRef"
                },
                "executionMode": {
                    "type": "string"
                },
                "executionTimeout": {
                    "type": "TimeSpan"
                },
                "instanceId": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "TaskInstance"
                    }
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskOrchestrationOwner": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TaskOrchestrationPlan": {
            "type": "TaskOrchestrationPlanReference",
            "properties": {
                "environment": {
                    "$ref": "#/definitions/PlanEnvironment"
                },
                "finishTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "implementation": {
                    "$ref": "#/definitions/TaskOrchestrationContainer"
                },
                "planGroup": {
                    "type": "string"
                },
                "requestedById": {
                    "type": "string",
                    "format": "uuid"
                },
                "requestedForId": {
                    "type": "string",
                    "format": "uuid"
                },
                "result": {
                    "enum": [
                        "succeeded",
                        "succeededWithIssues",
                        "failed",
                        "canceled",
                        "skipped",
                        "abandoned"
                    ]
                },
                "resultCode": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "state": {
                    "enum": [
                        "inProgress",
                        "queued",
                        "completed"
                    ]
                },
                "timeline": {
                    "$ref": "#/definitions/TimelineReference"
                }
            }
        },
        "TaskOrchestrationPlanReference": {
            "type": "object",
            "properties": {
                "artifactLocation": {
                    "type": "string"
                },
                "artifactUri": {
                    "type": "string"
                },
                "planId": {
                    "type": "string",
                    "format": "uuid"
                },
                "planType": {
                    "type": "string"
                },
                "scopeIdentifier": {
                    "type": "string",
                    "format": "uuid"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TaskPackageMetadata": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "Gets the name of the package.",
                    "type": "string"
                },
                "url": {
                    "description": "Gets the url of the package.",
                    "type": "string"
                },
                "version": {
                    "description": "Gets the version of the package.",
                    "type": "string"
                }
            }
        },
        "TaskReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "inputs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "TaskSourceDefinition": {
            "type": "TaskSourceDefinitionBase",
            "properties": {
            }
        },
        "TaskVersion": {
            "type": "object",
            "properties": {
                "isTest": {
                    "type": "boolean"
                },
                "major": {
                    "type": "integer",
                    "format": "int32"
                },
                "minor": {
                    "type": "integer",
                    "format": "int32"
                },
                "patch": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Timeline": {
            "type": "TimelineReference",
            "properties": {
                "lastChangedBy": {
                    "type": "string",
                    "format": "uuid"
                },
                "lastChangedOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "type": "TimelineRecord"
                    }
                }
            }
        },
        "TimelineRecord": {
            "type": "object",
            "properties": {
                "changeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "currentOperation": {
                    "type": "string"
                },
                "details": {
                    "$ref": "#/definitions/TimelineReference"
                },
                "errorCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "finishTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "issues": {
                    "type": "array",
                    "items": {
                        "type": "Issue"
                    }
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time"
                },
                "location": {
                    "type": "string"
                },
                "log": {
                    "$ref": "#/definitions/TaskLogReference"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "format": "int32"
                },
                "parentId": {
                    "type": "string",
                    "format": "uuid"
                },
                "percentComplete": {
                    "type": "integer",
                    "format": "int32"
                },
                "result": {
                    "enum": [
                        "succeeded",
                        "succeededWithIssues",
                        "failed",
                        "canceled",
                        "skipped",
                        "abandoned"
                    ]
                },
                "resultCode": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "state": {
                    "enum": [
                        "pending",
                        "inProgress",
                        "completed"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "warningCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "workerName": {
                    "type": "string"
                }
            }
        },
        "TimelineReference": {
            "type": "object",
            "properties": {
                "changeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "location": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}