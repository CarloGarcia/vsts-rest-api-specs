{
  "swagger": "2.0",
  "info": {
    "title": "MemberEntitlementManagement",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.2"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "memberEntitlements"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/memberentitlements": {
      "post": {
        "tags": [
          "memberEntitlements"
        ],
        "summary": "AddMemberEntitlement",
        "description": "Used to add members to a project in an account. It adds them to groups, assigns licenses, and assigns extensions.",
        "operationId": "addMemberEntitlement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Member model for where to add the member and what licenses and extensions they should receive.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MemberEntitlement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MemberEntitlementsPostResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "memberEntitlements"
        ],
        "summary": "GetMemberEntitlements",
        "description": "Used to get member entitlement information in an account",
        "operationId": "getMemberEntitlements",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "select",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MemberEntitlement"
              }
            }
          }
        }
      }
    },
    "/_apis/memberentitlements/{memberId}": {
      "delete": {
        "tags": [
          "memberEntitlements"
        ],
        "summary": "DeleteMemberEntitlement",
        "description": "Deletes members from an account",
        "operationId": "deleteMemberEntitlement",
        "parameters": [
          {
            "in": "path",
            "name": "memberId",
            "description": "memberId of the member to be removed.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "memberEntitlements"
        ],
        "summary": "GetMemberEntitlement",
        "description": "Used to get member entitlement information in an account",
        "operationId": "getMemberEntitlement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "memberId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MemberEntitlement"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "memberEntitlements"
        ],
        "summary": "UpdateMemberEntitlement",
        "description": "Used to edit a member in an account. Edits groups, licenses, and extensions.",
        "operationId": "updateMemberEntitlement",
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "document of operations to be used",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          },
          {
            "in": "path",
            "name": "memberId",
            "description": "member Id of the member to be edit",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MemberEntitlementsPatchResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessLevel": {
      "type": "object",
      "properties": {
        "accountLicenseType": {
          "enum": [
            "none",
            "earlyAdopter",
            "express",
            "professional",
            "advanced",
            "stakeholder"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.AccountLicenseType"
          }
        },
        "licenseDisplayName": {
          "type": "string"
        },
        "licensingSource": {
          "enum": [
            "none",
            "account",
            "msdn",
            "profile",
            "auto",
            "trial"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.LicensingSource"
          }
        },
        "status": {
          "enum": [
            "none",
            "active",
            "disabled",
            "deleted",
            "pending",
            "expired",
            "pendingDisabled"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Account.AccountUserStatus"
          }
        },
        "statusMessage": {
          "type": "string"
        }
      }
    },
    "Extension": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Gallery Id of the Extension",
          "type": "string"
        },
        "name": {
          "description": "Friendly name of this extension",
          "type": "string"
        },
        "source": {
          "description": "Source of this extension assignment. Ex: msdn, account, none, ect.",
          "enum": [
            "none",
            "account",
            "msdn",
            "profile",
            "auto",
            "trial"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Licensing.LicensingSource"
          }
        }
      }
    },
    "GraphMember": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphSubject"
        }
      ],
      "properties": {
        "domain": {
          "description": "This represents the name of the container of origin for a graph member. (For MSA this is \"Windows Live ID\", for AD the name of the domain, for AAD the name of the directory, for Vsts groups the ScopeId, etc)",
          "type": "string"
        },
        "mailAddress": {
          "description": "The email address of record for a given graph member. This may be different than the principal name.",
          "type": "string"
        },
        "metaTypeId": {
          "description": "Used only for internal back-compat scenarios.",
          "type": "integer",
          "format": "int32"
        },
        "principalName": {
          "description": "This is the PrincipalName of this graph member from the source provider. The source provider may change this field over time and it is not guaranteed to be immutable for the life of the graph member by Vsts.",
          "type": "string"
        }
      }
    },
    "GraphSubject": {
      "type": "object",
      "properties": {
        "_links": {
          "description": "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "descriptor": {
          "description": "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.",
          "type": "string"
        },
        "disabled": {
          "description": "If this value is true, the graph subject is not active within the current Vsts scope. This graph subject can be used reliably for presenting historical data but may not be valid for other operations.",
          "type": "boolean"
        },
        "displayName": {
          "description": "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier within the subject's scope. This identifier will not change for the lifetime of the subject. If you must persist a reference to a graph subject within your system, only persist this field. All other fields can change over time.",
          "type": "string",
          "format": "uuid"
        },
        "origin": {
          "description": "The type of source provider for the origin identifier (ex:AD, AAD, MSA)",
          "type": "string"
        },
        "originId": {
          "description": "The unique identifier from the system of origin. Typically a sid, object id or Guid. Linking and unlinking operations can cause this value to change for a user because the user is not backed by a different provider and has a different unique id in the new provider.",
          "type": "string"
        },
        "subjectKind": {
          "description": "This field identifies the type of the graph subject (ex: Group, Scope, User).",
          "type": "string"
        },
        "url": {
          "description": "This url is the full route to the source resource of this graph subject.",
          "type": "string"
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "groupType": {
          "enum": [
            "projectStakeholder",
            "projectReader",
            "projectContributor",
            "projectAdministrator",
            "custom"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.MemberEntitlementManagement.WebApi.GroupType"
          }
        }
      }
    },
    "JsonPatchDocument": {
      "type": "object",
      "allOf": [
        {
          "type": "array",
          "items": {
          }
        }
      ],
      "properties": {
      }
    },
    "JsonPatchOperation": {
      "type": "object",
      "properties": {
        "from": {
          "description": "The path to copy from for the Move/Copy operation.",
          "type": "string"
        },
        "op": {
          "description": "The patch operation",
          "enum": [
            "add",
            "remove",
            "replace",
            "move",
            "copy",
            "test"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.WebApi.Patch.Operation"
          }
        },
        "path": {
          "description": "The path for the operation",
          "type": "string"
        },
        "value": {
          "description": "The value for the operation. This is either a primitive or a JToken.",
          "type": "object"
        }
      }
    },
    "MemberEntitlement": {
      "type": "object",
      "properties": {
        "accessLevel": {
          "description": "Member's access level denoted by a license",
          "$ref": "#/definitions/AccessLevel"
        },
        "extensions": {
          "description": "Member's extensions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "id": {
          "description": "The unique identifier which matches the Id of the GraphMember",
          "type": "string",
          "format": "uuid"
        },
        "lastAccessedDate": {
          "description": "Date the Member last access the collection",
          "type": "string",
          "format": "date-time"
        },
        "member": {
          "description": "Member reference",
          "$ref": "#/definitions/GraphMember"
        },
        "projectEntitlements": {
          "description": "Relation between a project and the member's effective permissions in that project",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectEntitlement"
          }
        }
      }
    },
    "MemberEntitlementsPatchResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MemberEntitlementsResponseBase"
        }
      ],
      "properties": {
        "operationResults": {
          "description": "List of results for each operation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationResult"
          }
        }
      }
    },
    "MemberEntitlementsPostResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MemberEntitlementsResponseBase"
        }
      ],
      "properties": {
        "operationResult": {
          "description": "Operation result",
          "$ref": "#/definitions/OperationResult"
        }
      }
    },
    "MemberEntitlementsResponseBase": {
      "type": "object",
      "properties": {
        "isSuccess": {
          "description": "True if all operations were successful",
          "type": "boolean"
        },
        "memberEntitlement": {
          "description": "Result of the member entitlement after the operations have been applied",
          "$ref": "#/definitions/MemberEntitlement"
        }
      }
    },
    "OperationResult": {
      "type": "object",
      "properties": {
        "errors": {
          "description": "List of error codes paired with their corresponding error messages",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "isSuccess": {
          "description": "Success status of the operation",
          "type": "boolean"
        },
        "result": {
          "description": "Result of the MemberEntitlement after the operation",
          "$ref": "#/definitions/MemberEntitlement"
        }
      }
    },
    "ProjectEntitlement": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/Group"
        },
        "isProjectPermissionInherited": {
          "type": "boolean"
        },
        "projectRef": {
          "$ref": "#/definitions/ProjectRef"
        }
      }
    },
    "ProjectRef": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.2-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}