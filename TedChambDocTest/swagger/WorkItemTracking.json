{
  "swagger": "2.0",
  "info": {
    "title": "WorkItemTracking",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.2"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "accountMyWork"
    },
    {
      "name": "accountMyWorkRecentActivity"
    },
    {
      "name": "attachments"
    },
    {
      "name": "classificationNodes"
    },
    {
      "name": "comments"
    },
    {
      "name": "fields"
    },
    {
      "name": "queries"
    },
    {
      "name": "recyclebin"
    },
    {
      "name": "revisions"
    },
    {
      "name": "ruleEngine"
    },
    {
      "name": "templates"
    },
    {
      "name": "updates"
    },
    {
      "name": "wiql"
    },
    {
      "name": "workItemLinks"
    },
    {
      "name": "workItemRelationTypes"
    },
    {
      "name": "workItemRevisions"
    },
    {
      "name": "workItems"
    },
    {
      "name": "workitemStateColor"
    },
    {
      "name": "workItemTypeCategories"
    },
    {
      "name": "workitemTypeColor"
    },
    {
      "name": "workItemTypes"
    },
    {
      "name": "workItemTypesField"
    },
    {
      "name": "workItemTypeStates"
    },
    {
      "name": "workItemTypeTemplate"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/wit/$ruleengine": {
      "post": {
        "tags": [
          "ruleEngine"
        ],
        "summary": "EvaluateRulesOnField",
        "description": "Validates the fields values.",
        "operationId": "evaluateRulesOnField",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldsToEvaluate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/attachments": {
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "CreateAttachment",
        "description": "Creates an attachment.",
        "operationId": "createAttachment",
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          },
          {
            "in": "query",
            "name": "fileName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "uploadType",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AttachmentReference"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/_apis/wit/attachments/{id}": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "GetAttachmentContent",
        "description": "Returns an attachment",
        "operationId": "getAttachmentContent",
        "produces": [
          "application/zip",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "fileName",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/fields": {
      "get": {
        "tags": [
          "fields"
        ],
        "summary": "GetFields",
        "description": "Returns information for all fields.",
        "operationId": "getFields",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "expand",
            "description": "Use ExtensionFields to include extension fields, otherwise exclude them. Unless the feature flag for this parameter is enabled, extension fields are always included.",
            "required": false,
            "type": "string",
            "format": "GetFieldsExpand"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemField"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/fields/{fieldNameOrRefName}": {
      "get": {
        "tags": [
          "fields"
        ],
        "summary": "GetField",
        "description": "Gets information on a specific field.",
        "operationId": "getField",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fieldNameOrRefName",
            "description": "Field simple name or reference name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemField"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/recyclebin": {
      "get": {
        "tags": [
          "recyclebin"
        ],
        "summary": "GetDeletedWorkItems",
        "description": "",
        "operationId": "getDeletedWorkItems",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemDeleteShallowReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/_apis/wit/recyclebin/{id}": {
      "delete": {
        "tags": [
          "recyclebin"
        ],
        "summary": "DestroyWorkItem",
        "description": "",
        "operationId": "destroyWorkItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "recyclebin"
        ],
        "summary": "GetDeletedWorkItem",
        "description": "",
        "operationId": "getDeletedWorkItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "recyclebin"
        ],
        "summary": "RestoreWorkItem",
        "description": "",
        "operationId": "restoreWorkItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemDeleteUpdate"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/_apis/wit/reporting/workitemlinks": {
      "get": {
        "tags": [
          "workItemLinks"
        ],
        "summary": "GetReportingLinks",
        "description": "Get a batch of work item links",
        "operationId": "getReportingLinks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "types",
            "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item links of all work item types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Specifies the continuationToken to start the batch from. Omit this parameter to get the first batch of links.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "Date/time to use as a starting point for link changes. Only link changes that occurred after that date/time will be returned. Cannot be used in conjunction with 'watermark' parameter.",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemLinksBatch"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/reporting/workitemrevisions": {
      "get": {
        "tags": [
          "workItemRevisions"
        ],
        "summary": "ReadReportingRevisionsGet",
        "description": "Get a batch of work item revisions with the option of including deleted items",
        "operationId": "readReportingRevisionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fields",
            "description": "A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "types",
            "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "includeIdentityRef",
            "description": "Return an identity reference instead of a string value for identity fields.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "description": "Specify if the deleted item should be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeTagRef",
            "description": "Specify if the tag objects should be returned for System.Tags field.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLatestOnly",
            "description": "Return only the latest revisions of work items, skipping all historical revisions",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "Return all the fields in work item revisions, including long text fields which are not returned by default",
            "required": false,
            "type": "string",
            "format": "ReportingRevisionsExpand"
          },
          {
            "in": "query",
            "name": "includeDiscussionChangesOnly",
            "description": "Return only the those revisions of work items, where only history field was changed",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsBatch"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "workItemRevisions"
        ],
        "summary": "ReadReportingRevisionsPost",
        "description": "Get a batch of work item revisions",
        "operationId": "readReportingRevisionsPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "An object that contains request settings: field filter, type filter, identity format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsFilter"
            }
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "ReportingRevisionsExpand"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsBatch"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/wiql": {
      "post": {
        "tags": [
          "wiql"
        ],
        "summary": "QueryByWiql",
        "description": "Gets the results of the query.",
        "operationId": "queryByWiql",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The query containing the wiql.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wiql"
            }
          },
          {
            "in": "query",
            "name": "timePrecision",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/wiql/{id}": {
      "get": {
        "tags": [
          "wiql"
        ],
        "summary": "QueryById",
        "description": "Gets the results of the query by id.",
        "operationId": "queryById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The query id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "timePrecision",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workitemrelationtypes": {
      "get": {
        "tags": [
          "workItemRelationTypes"
        ],
        "summary": "GetRelationTypes",
        "description": "",
        "operationId": "getRelationTypes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemRelationType"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workitemrelationtypes/{relation}": {
      "get": {
        "tags": [
          "workItemRelationTypes"
        ],
        "summary": "GetRelationType",
        "description": "Gets the work item relation types.",
        "operationId": "getRelationType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "relation",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemRelationType"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workitems": {
      "get": {
        "tags": [
          "workItems"
        ],
        "summary": "GetWorkItems",
        "description": "Returns a list of work items",
        "operationId": "getWorkItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "fields",
            "description": "",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "asOf",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          },
          {
            "in": "query",
            "name": "errorPolicy",
            "description": "",
            "required": false,
            "type": "string",
            "format": "WorkItemErrorPolicy"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItem"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workitems/{id}": {
      "delete": {
        "tags": [
          "workItems"
        ],
        "summary": "DeleteWorkItem",
        "description": "",
        "operationId": "deleteWorkItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "destroy",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "workItems"
        ],
        "summary": "GetWorkItem",
        "description": "Returns a single work item",
        "operationId": "getWorkItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "fields",
            "description": "",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "asOf",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "workItems"
        ],
        "summary": "UpdateWorkItem",
        "description": "",
        "operationId": "updateWorkItem",
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "bypassRules",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workItems/{id}/comments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "GetComments",
        "description": "Returns specified number of comments for a work item from the specified revision",
        "operationId": "getComments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Work item id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "fromRevision",
            "description": "Revision from which comments are to be fetched",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "The number of comments to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Ascending or descending by revision id",
            "required": false,
            "type": "string",
            "format": "CommentSortOrder"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemComments"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workItems/{id}/comments/{revision}": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "GetComment",
        "description": "Returns comment for a work item at the specified revision",
        "operationId": "getComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "revision",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemComment"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workItems/{id}/revisions": {
      "get": {
        "tags": [
          "revisions"
        ],
        "summary": "GetRevisions",
        "description": "Returns the list of fully hydrated work item revisions, paged.",
        "operationId": "getRevisions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItem"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workItems/{id}/revisions/{revisionNumber}": {
      "get": {
        "tags": [
          "revisions"
        ],
        "summary": "GetRevision",
        "description": "Returns a fully hydrated work item for the requested revision",
        "operationId": "getRevision",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "revisionNumber",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workItems/{id}/updates": {
      "get": {
        "tags": [
          "updates"
        ],
        "summary": "GetUpdates",
        "description": "Returns a the deltas between work item revisions",
        "operationId": "getUpdates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemUpdate"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workItems/{id}/updates/{updateNumber}": {
      "get": {
        "tags": [
          "updates"
        ],
        "summary": "GetUpdate",
        "description": "Returns a single update for a work item",
        "operationId": "getUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "updateNumber",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemUpdate"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workitemtypetemplate": {
      "post": {
        "tags": [
          "workItemTypeTemplate"
        ],
        "summary": "UpdateWorkItemTypeDefinition",
        "description": "Add/updates a work item type",
        "operationId": "updateWorkItemTypeDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTypeTemplateUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProvisioningResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/_apis/wit/workitemtypetemplate/{type}": {
      "get": {
        "tags": [
          "workItemTypeTemplate"
        ],
        "summary": "ExportWorkItemTypeDefinition",
        "description": "Export work item type",
        "operationId": "exportWorkItemTypeDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "exportGlobalLists",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTypeTemplate"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/classificationnodes": {
      "get": {
        "tags": [
          "classificationNodes"
        ],
        "summary": "GetRootNodes",
        "description": "",
        "operationId": "getRootNodes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "depth",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemClassificationNode"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/classificationnodes/{structureGroup}/{*path}": {
      "post": {
        "tags": [
          "classificationNodes"
        ],
        "summary": "CreateOrUpdateClassificationNode",
        "description": "",
        "operationId": "createOrUpdateClassificationNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "structureGroup",
            "description": "",
            "required": true,
            "type": "string",
            "format": "TreeStructureGroup"
          },
          {
            "in": "path",
            "name": "path",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "classificationNodes"
        ],
        "summary": "DeleteClassificationNode",
        "description": "",
        "operationId": "deleteClassificationNode",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "structureGroup",
            "description": "",
            "required": true,
            "type": "string",
            "format": "TreeStructureGroup"
          },
          {
            "in": "path",
            "name": "path",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "reclassifyId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "classificationNodes"
        ],
        "summary": "GetClassificationNode",
        "description": "",
        "operationId": "getClassificationNode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "structureGroup",
            "description": "",
            "required": true,
            "type": "string",
            "format": "TreeStructureGroup"
          },
          {
            "in": "path",
            "name": "path",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "depth",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "classificationNodes"
        ],
        "summary": "UpdateClassificationNode",
        "description": "",
        "operationId": "updateClassificationNode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "structureGroup",
            "description": "",
            "required": true,
            "type": "string",
            "format": "TreeStructureGroup"
          },
          {
            "in": "path",
            "name": "path",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/fields": {
      "get": {
        "tags": [
          "fields"
        ],
        "summary": "GetFields",
        "description": "Returns information for all fields.",
        "operationId": "getFields",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "Use ExtensionFields to include extension fields, otherwise exclude them. Unless the feature flag for this parameter is enabled, extension fields are always included.",
            "required": false,
            "type": "string",
            "format": "GetFieldsExpand"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemField"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/fields/{fieldNameOrRefName}": {
      "get": {
        "tags": [
          "fields"
        ],
        "summary": "GetField",
        "description": "Gets information on a specific field.",
        "operationId": "getField",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "fieldNameOrRefName",
            "description": "Field simple name or reference name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemField"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/queries": {
      "get": {
        "tags": [
          "queries"
        ],
        "summary": "GetQueries",
        "description": "Retrieves all queries the user has access to in the current project",
        "operationId": "getQueries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "QueryExpand"
          },
          {
            "in": "query",
            "name": "depth",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryHierarchyItem"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/queries/{query}": {
      "post": {
        "tags": [
          "queries"
        ],
        "summary": "CreateQuery",
        "description": "Creates a query, or moves a query.",
        "operationId": "createQuery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The query to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "query",
            "description": "The parent path for the query to create.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "queries"
        ],
        "summary": "DeleteQuery",
        "description": "",
        "operationId": "deleteQuery",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "queries"
        ],
        "summary": "GetQuery",
        "description": "Retrieves a single query by project and either id or path",
        "operationId": "getQuery",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "query",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "QueryExpand"
          },
          {
            "in": "query",
            "name": "depth",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "queries"
        ],
        "summary": "UpdateQuery",
        "description": "",
        "operationId": "updateQuery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "query",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "undeleteDescendants",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/recyclebin": {
      "get": {
        "tags": [
          "recyclebin"
        ],
        "summary": "GetDeletedWorkItems",
        "description": "",
        "operationId": "getDeletedWorkItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemDeleteShallowReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/recyclebin/{id}": {
      "delete": {
        "tags": [
          "recyclebin"
        ],
        "summary": "DestroyWorkItem",
        "description": "",
        "operationId": "destroyWorkItem",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "recyclebin"
        ],
        "summary": "GetDeletedWorkItem",
        "description": "",
        "operationId": "getDeletedWorkItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "recyclebin"
        ],
        "summary": "RestoreWorkItem",
        "description": "",
        "operationId": "restoreWorkItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemDeleteUpdate"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/reporting/workitemlinks": {
      "get": {
        "tags": [
          "workItemLinks"
        ],
        "summary": "GetReportingLinks",
        "description": "Get a batch of work item links",
        "operationId": "getReportingLinks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "types",
            "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item links of all work item types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Specifies the continuationToken to start the batch from. Omit this parameter to get the first batch of links.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "Date/time to use as a starting point for link changes. Only link changes that occurred after that date/time will be returned. Cannot be used in conjunction with 'watermark' parameter.",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemLinksBatch"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/reporting/workitemrevisions": {
      "get": {
        "tags": [
          "workItemRevisions"
        ],
        "summary": "ReadReportingRevisionsGet",
        "description": "Get a batch of work item revisions with the option of including deleted items",
        "operationId": "readReportingRevisionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "fields",
            "description": "A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "types",
            "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "includeIdentityRef",
            "description": "Return an identity reference instead of a string value for identity fields.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "description": "Specify if the deleted item should be returned.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeTagRef",
            "description": "Specify if the tag objects should be returned for System.Tags field.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLatestOnly",
            "description": "Return only the latest revisions of work items, skipping all historical revisions",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "Return all the fields in work item revisions, including long text fields which are not returned by default",
            "required": false,
            "type": "string",
            "format": "ReportingRevisionsExpand"
          },
          {
            "in": "query",
            "name": "includeDiscussionChangesOnly",
            "description": "Return only the those revisions of work items, where only history field was changed",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsBatch"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "workItemRevisions"
        ],
        "summary": "ReadReportingRevisionsPost",
        "description": "Get a batch of work item revisions",
        "operationId": "readReportingRevisionsPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "An object that contains request settings: field filter, type filter, identity format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsFilter"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "ReportingRevisionsExpand"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsBatch"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/wiql": {
      "post": {
        "tags": [
          "wiql"
        ],
        "summary": "QueryByWiql",
        "description": "Gets the results of the query.",
        "operationId": "queryByWiql",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The query containing the wiql.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wiql"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "timePrecision",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/wiql/{id}": {
      "get": {
        "tags": [
          "wiql"
        ],
        "summary": "QueryById",
        "description": "Gets the results of the query by id.",
        "operationId": "queryById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The query id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "timePrecision",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitems/${type}": {
      "post": {
        "tags": [
          "workItems"
        ],
        "summary": "CreateWorkItem",
        "description": "",
        "operationId": "createWorkItem",
        "consumes": [
          "application/json-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "bypassRules",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "workItems"
        ],
        "summary": "GetWorkItemTemplate",
        "description": "Returns a single work item from a template",
        "operationId": "getWorkItemTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "fields",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "asOf",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "expand",
            "description": "",
            "required": false,
            "type": "string",
            "format": "WorkItemExpand"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitemtypecategories": {
      "get": {
        "tags": [
          "workItemTypeCategories"
        ],
        "summary": "GetWorkItemTypeCategories",
        "description": "",
        "operationId": "getWorkItemTypeCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemTypeCategory"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitemtypecategories/{category}": {
      "get": {
        "tags": [
          "workItemTypeCategories"
        ],
        "summary": "GetWorkItemTypeCategory",
        "description": "Returns a the deltas between work item revisions",
        "operationId": "getWorkItemTypeCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "category",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTypeCategory"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitemtypes": {
      "get": {
        "tags": [
          "workItemTypes"
        ],
        "summary": "GetWorkItemTypes",
        "description": "",
        "operationId": "getWorkItemTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemType"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitemtypes/{type}": {
      "get": {
        "tags": [
          "workItemTypes"
        ],
        "summary": "GetWorkItemType",
        "description": "Returns a the deltas between work item revisions",
        "operationId": "getWorkItemType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemType"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitemtypes/{type}/fields/{field}": {
      "get": {
        "tags": [
          "workItemTypesField"
        ],
        "summary": "GetDependentFields",
        "description": "Returns the dependent fields for the corresponding workitem type and fieldname",
        "operationId": "getDependentFields",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "field",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FieldDependentRule"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitemtypes/{type}/states": {
      "get": {
        "tags": [
          "workItemTypeStates"
        ],
        "summary": "GetWorkItemTypeStates",
        "description": "Returns the state names and colors for a work item type",
        "operationId": "getWorkItemTypeStates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemStateColor"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitemtypetemplate": {
      "post": {
        "tags": [
          "workItemTypeTemplate"
        ],
        "summary": "UpdateWorkItemTypeDefinition",
        "description": "Add/updates a work item type",
        "operationId": "updateWorkItemTypeDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTypeTemplateUpdateModel"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProvisioningResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/wit/workitemtypetemplate/{type}": {
      "get": {
        "tags": [
          "workItemTypeTemplate"
        ],
        "summary": "ExportWorkItemTypeDefinition",
        "description": "Export work item type",
        "operationId": "exportWorkItemTypeDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "exportGlobalLists",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTypeTemplate"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/wit/templates": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "CreateTemplate",
        "description": "Creates a template",
        "operationId": "createTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Template contents",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "GetTemplates",
        "description": "Gets template",
        "operationId": "getTemplates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workitemtypename",
            "description": "Optional, When specified returns templates for given Work item type.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemTemplateReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/wit/templates/{templateId}": {
      "delete": {
        "tags": [
          "templates"
        ],
        "summary": "DeleteTemplate",
        "description": "Deletes the template with given id",
        "operationId": "deleteTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "Template id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "GetTemplate",
        "description": "Gets the template with specified id",
        "operationId": "getTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "Template Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "templates"
        ],
        "summary": "ReplaceTemplate",
        "description": "Replace template contents",
        "operationId": "replaceTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Template contents to replace with",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "templateId",
            "description": "Template id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/wit/wiql": {
      "post": {
        "tags": [
          "wiql"
        ],
        "summary": "QueryByWiql",
        "description": "Gets the results of the query.",
        "operationId": "queryByWiql",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The query containing the wiql.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wiql"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "timePrecision",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/wit/wiql/{id}": {
      "get": {
        "tags": [
          "wiql"
        ],
        "summary": "QueryById",
        "description": "Gets the results of the query by id.",
        "operationId": "queryById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The query id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "timePrecision",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "AccountMyWorkResult": {
      "type": "object",
      "properties": {
        "querySizeLimitExceeded": {
          "description": "True, when length of WorkItemDetails is same as the limit",
          "type": "boolean"
        },
        "workItemDetails": {
          "description": "WorkItem Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountWorkWorkItemModel"
          }
        }
      }
    },
    "AccountRecentActivityWorkItemModel": {
      "type": "object",
      "properties": {
        "activityDate": {
          "description": "Date of the last Activity by the user",
          "type": "string",
          "format": "date-time"
        },
        "activityType": {
          "description": "Type of the activity",
          "enum": [
            "visited",
            "edited",
            "deleted",
            "restored"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.WorkItemRecentActivityType"
          }
        },
        "assignedTo": {
          "description": "Assigned To",
          "type": "string"
        },
        "changedDate": {
          "description": "Last changed date of the work item",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Work Item Id",
          "type": "integer",
          "format": "int32"
        },
        "identityId": {
          "description": "TeamFoundationId of the user this activity belongs to",
          "type": "string",
          "format": "uuid"
        },
        "state": {
          "description": "State of the work item",
          "type": "string"
        },
        "teamProject": {
          "description": "Team project the work item belongs to",
          "type": "string"
        },
        "title": {
          "description": "Title of the work item",
          "type": "string"
        },
        "workItemType": {
          "description": "Type of Work Item",
          "type": "string"
        }
      }
    },
    "AccountWorkWorkItemModel": {
      "type": "object",
      "properties": {
        "assignedTo": {
          "type": "string"
        },
        "changedDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "teamProject": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "workItemType": {
          "type": "string"
        }
      }
    },
    "AttachmentReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "FieldDependentRule": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "dependentFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        }
      }
    },
    "FieldsToEvaluate": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldUpdates": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "fieldValues": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "rulesFrom": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IdentityRef": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "IdentityReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "JsonPatchDocument": {
      "type": "object",
      "allOf": [
        {
          "type": "array"
        }
      ],
      "properties": {
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "rel": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ProjectWorkItemStateColors": {
      "type": "object",
      "properties": {
        "projectName": {
          "description": "Project name",
          "type": "string"
        },
        "workItemTypeStateColors": {
          "description": "State colors for all work item type in a project",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeStateColors"
          }
        }
      }
    },
    "ProvisioningResult": {
      "type": "object",
      "properties": {
        "provisioningImportEvents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryHierarchyItem": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryHierarchyItem"
          }
        },
        "clauses": {
          "$ref": "#/definitions/WorkItemQueryClause"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "createdBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "filterOptions": {
          "enum": [
            "workItems",
            "linksOneHopMustContain",
            "linksOneHopMayContain",
            "linksOneHopDoesNotContain",
            "linksRecursiveMustContain",
            "linksRecursiveMayContain",
            "linksRecursiveDoesNotContain"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.LinkQueryMode"
          }
        },
        "hasChildren": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "isFolder": {
          "type": "boolean"
        },
        "isInvalidSyntax": {
          "type": "boolean"
        },
        "isPublic": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "linkClauses": {
          "$ref": "#/definitions/WorkItemQueryClause"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "queryType": {
          "enum": [
            "flat",
            "tree",
            "oneHop"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.QueryType"
          }
        },
        "sortColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemQuerySortColumn"
          }
        },
        "sourceClauses": {
          "$ref": "#/definitions/WorkItemQueryClause"
        },
        "targetClauses": {
          "$ref": "#/definitions/WorkItemQueryClause"
        },
        "wiql": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ReportingWorkItemLink": {
      "type": "object",
      "properties": {
        "changedBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "changedDate": {
          "type": "string",
          "format": "date-time"
        },
        "changedOperation": {
          "enum": [
            "create",
            "remove"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.LinkChangeType"
          }
        },
        "comment": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "linkType": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "sourceId": {
          "type": "integer",
          "format": "int32"
        },
        "targetId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportingWorkItemLinksBatch": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "StreamedBatch"
        }
      ],
      "properties": {
      }
    },
    "ReportingWorkItemRevisionsBatch": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "StreamedBatch"
        }
      ],
      "properties": {
      }
    },
    "ReportingWorkItemRevisionsFilter": {
      "type": "object",
      "properties": {
        "fields": {
          "description": "A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeDeleted": {
          "description": "Include deleted work item in the result.",
          "type": "boolean"
        },
        "includeIdentityRef": {
          "description": "Return an identity reference instead of a string value for identity fields.",
          "type": "boolean"
        },
        "includeLatestOnly": {
          "description": "Include only the latest version of a work item, skipping over all previous revisions of the work item.",
          "type": "boolean"
        },
        "includeTagRef": {
          "description": "Include tag reference instead of string value for System.Tags field",
          "type": "boolean"
        },
        "types": {
          "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StreamedBatch": {
      "type": "object",
      "properties": {
        "continuationToken": {
          "type": "string"
        },
        "isLastBatch": {
          "type": "boolean"
        },
        "nextLink": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "T"
          }
        }
      }
    },
    "TeamContext": {
      "type": "object",
      "properties": {
        "project": {
          "description": "The team project Id or name.  Ignored if ProjectId is set.",
          "type": "string"
        },
        "projectId": {
          "description": "The Team Project ID.  Required if Project is not set.",
          "type": "string",
          "format": "uuid"
        },
        "team": {
          "description": "The Team Id or name.  Ignored if TeamId is set.",
          "type": "string"
        },
        "teamId": {
          "description": "The Team Id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Wiql": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "WorkItem": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "relations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemRelation"
          }
        },
        "rev": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkItemClassificationNode": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemClassificationNode"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "identifier": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "structureType": {
          "enum": [
            "area",
            "iteration"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.TreeNodeStructureType"
          }
        }
      }
    },
    "WorkItemComment": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "revisedBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "revisedDate": {
          "type": "string",
          "format": "date-time"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "WorkItemComments": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemComment"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "fromRevisionCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkItemDelete": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemDeleteReference"
        }
      ],
      "properties": {
        "resource": {
          "$ref": "#/definitions/WorkItem"
        }
      }
    },
    "WorkItemDeleteReference": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "deletedBy": {
          "type": "string"
        },
        "deletedDate": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemDeleteShallowReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemDeleteUpdate": {
      "type": "object",
      "properties": {
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "WorkItemField": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "referenceName": {
          "type": "string"
        },
        "supportedOperations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldOperation"
          }
        },
        "type": {
          "enum": [
            "string",
            "integer",
            "dateTime",
            "plainText",
            "html",
            "treePath",
            "history",
            "double",
            "guid",
            "boolean"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.FieldType"
          }
        }
      }
    },
    "WorkItemFieldOperation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "referenceName": {
          "type": "string"
        }
      }
    },
    "WorkItemFieldReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "referenceName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemFieldUpdate": {
      "type": "object",
      "properties": {
        "newValue": {
          "type": "object"
        },
        "oldValue": {
          "type": "object"
        }
      }
    },
    "WorkItemHistory": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "rev": {
          "type": "integer",
          "format": "int32"
        },
        "revisedBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "revisedDate": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WorkItemLink": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/WorkItemReference"
        },
        "target": {
          "$ref": "#/definitions/WorkItemReference"
        }
      }
    },
    "WorkItemQueryClause": {
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemQueryClause"
          }
        },
        "field": {
          "$ref": "#/definitions/WorkItemFieldReference"
        },
        "fieldValue": {
          "$ref": "#/definitions/WorkItemFieldReference"
        },
        "isFieldValue": {
          "type": "boolean"
        },
        "logicalOperator": {
          "enum": [
            "nONE",
            "aND",
            "oR"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.LogicalOperation"
          }
        },
        "operator": {
          "$ref": "#/definitions/WorkItemFieldOperation"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WorkItemQueryResult": {
      "type": "object",
      "properties": {
        "asOf": {
          "type": "string",
          "format": "date-time"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemFieldReference"
          }
        },
        "queryResultType": {
          "enum": [
            "workItem",
            "workItemLink"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.QueryResultType"
          }
        },
        "queryType": {
          "enum": [
            "flat",
            "tree",
            "oneHop"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.QueryType"
          }
        },
        "sortColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemQuerySortColumn"
          }
        },
        "workItemRelations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemLink"
          }
        },
        "workItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemReference"
          }
        }
      }
    },
    "WorkItemQuerySortColumn": {
      "type": "object",
      "properties": {
        "descending": {
          "type": "boolean"
        },
        "field": {
          "$ref": "#/definitions/WorkItemFieldReference"
        }
      }
    },
    "WorkItemReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemRelation": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Link"
        }
      ],
      "properties": {
      }
    },
    "WorkItemRelationType": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingReference"
        }
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "WorkItemRelationUpdates": {
      "type": "object",
      "properties": {
        "added": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemRelation"
          }
        },
        "removed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemRelation"
          }
        },
        "updated": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemRelation"
          }
        }
      }
    },
    "WorkItemStateColor": {
      "type": "object",
      "properties": {
        "color": {
          "description": "Color value",
          "type": "string"
        },
        "name": {
          "description": "Work item type state name",
          "type": "string"
        }
      }
    },
    "WorkItemStateTransition": {
      "type": "object",
      "properties": {
        "to": {
          "type": "string"
        }
      }
    },
    "WorkItemTemplate": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTemplateReference"
        }
      ],
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "WorkItemTemplateReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "workItemTypeName": {
          "type": "string"
        }
      }
    },
    "WorkItemTrackingReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "referenceName": {
          "type": "string"
        }
      }
    },
    "WorkItemTrackingResource": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        }
      }
    },
    "WorkItemTrackingResourceReference": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "WorkItemType": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "color": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fieldInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeFieldInstance"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeFieldInstance"
          }
        },
        "name": {
          "type": "string"
        },
        "transitions": {
          "type": "object",
          "additionalProperties": {
            "type": "array"
          }
        },
        "xmlForm": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeCategory": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResource"
        }
      ],
      "properties": {
        "defaultWorkItemType": {
          "$ref": "#/definitions/WorkItemTypeReference"
        },
        "name": {
          "type": "string"
        },
        "referenceName": {
          "type": "string"
        },
        "workItemTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemTypeReference"
          }
        }
      }
    },
    "WorkItemTypeColor": {
      "type": "object",
      "properties": {
        "primaryColor": {
          "type": "string"
        },
        "secondaryColor": {
          "type": "string"
        },
        "workItemTypeName": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeFieldInstance": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemFieldReference"
        }
      ],
      "properties": {
        "alwaysRequired": {
          "type": "boolean"
        },
        "field": {
          "$ref": "#/definitions/WorkItemFieldReference"
        },
        "helpText": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeStateColors": {
      "type": "object",
      "properties": {
        "stateColors": {
          "description": "Work item type state colors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkItemStateColor"
          }
        },
        "workItemTypeName": {
          "description": "Work item type name",
          "type": "string"
        }
      }
    },
    "WorkItemTypeTemplate": {
      "type": "object",
      "properties": {
        "template": {
          "type": "string"
        }
      }
    },
    "WorkItemTypeTemplateUpdateModel": {
      "type": "object",
      "properties": {
        "actionType": {
          "enum": [
            "import",
            "validate"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.ProvisioningActionType"
          }
        },
        "methodology": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "templateType": {
          "enum": [
            "workItemType",
            "globalWorkflow"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.WorkItemTracking.WebApi.Models.TemplateType"
          }
        }
      }
    },
    "WorkItemUpdate": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkItemTrackingResourceReference"
        }
      ],
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WorkItemFieldUpdate"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "relations": {
          "$ref": "#/definitions/WorkItemRelationUpdates"
        },
        "rev": {
          "type": "integer",
          "format": "int32"
        },
        "revisedBy": {
          "$ref": "#/definitions/IdentityReference"
        },
        "revisedDate": {
          "type": "string",
          "format": "date-time"
        },
        "workItemId": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.2-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.work_write": "Grants the ability to read, create, and update work items and queries, update board metadata, read area and iterations paths other work item tracking related metadata, execute queries, and to receive notifications about work item events via service hooks.",
        "vso.work": "Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries and to receive notifications about work item events via service hooks."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}