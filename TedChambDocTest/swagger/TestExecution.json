{
    "swagger": "2.0",
    "info": {
        "title": "Test",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "fabrikam-fiber-inc.visualstudio.com",
    "basePath": "/",
    "tags": [
        {
            "name": "agents"
        },
        {
            "name": "commands"
        },
        {
            "name": "distributedTestRuns"
        },
        {
            "name": "slices"
        }
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "pat": {
            "type": "basic",
            "description": "Personal access token"
        }
    },
    "security": [
        {
            "pat": []
        }
    ], 
    "paths": {
        "/_apis/test/agents": {
            "post": {
                "tags": [
                    "agents"
                ],
                "summary": "CreateAgent",
                "description": "http://(tfsserver):8080/tfs/DefaultCollection/_apis/test/agents Request: Json of TestAgent",
                "operationId": "createAgent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/testAgent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/testAgent"
                        }
                    }
                }
            }
        },
        "/_apis/test/agents/{id}": {
            "delete": {
                "tags": [
                    "agents"
                ],
                "summary": "DeleteAgent",
                "description": "http://(tfsserver):8080/tfs/DefaultCollection/_apis/test/agents/id Request: Json of id",
                "operationId": "deleteAgent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "agents"
                ],
                "summary": "GetAgent",
                "description": "http://(tfsserver):8080/tfs/DefaultCollection/_apis/test/agents/id Request: Json of id",
                "operationId": "getAgent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/testAgent"
                        }
                    }
                }
            }
        },
        "/_apis/test/Agents/{testagentId}/commands/{commandId}": {
            "get": {
                "tags": [
                    "commands"
                ],
                "summary": "GetCommandAsync",
                "description": "Gets test message that is in queue after lastMessageId.",
                "operationId": "getCommandAsync",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "testAgentId",
                        "description": "The test agent which calls this api.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "commandId",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "task",
                            "items": {
                                "$ref": "#/definitions/testExecutionServiceCommand"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/test/distributedtestruns": {
            "patch": {
                "tags": [
                    "distributedTestRuns"
                ],
                "summary": "UpdateTestRun",
                "description": "http://(tfsserver):8080/tfs/DefaultCollection/_apis/test/DistributedTestRuns/ Request: Json of TestRun",
                "operationId": "updateTestRun",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/distributedTestRun"
                        }
                    },
                    {
                        "in": "query",
                        "name": "projectName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/distributedTestRun"
                        }
                    }
                }
            }
        },
        "/_apis/test/slices": {
            "patch": {
                "tags": [
                    "slices"
                ],
                "summary": "UpdateSlice",
                "description": "",
                "operationId": "updateSlice",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/testAutomationRunSlice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/test/slices/{testAgentId}": {
            "get": {
                "tags": [
                    "slices"
                ],
                "summary": "GetSlice",
                "description": "http://(tfsserver):8080/tfs/DefaultCollection/_apis/test/slices/[?testAgentId=1]",
                "operationId": "getSlice",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "testAgentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/testAutomationRunSlice"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "distributedTestRun": {
            "type": "object",
            "properties": {
                "distributedTestRunCreateModel": {
                    "$ref": "#/definitions/distributedTestRunCreateModel"
                },
                "environmentUri": {
                    "description": "DTA Environment Uri",
                    "type": "string"
                },
                "testRunId": {
                    "description": "Test Run Id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "distributedTestRunCreateModel": {
            "type": "object",
            "properties": {
                "autEnvironmentUrl": {
                    "type": "string"
                },
                "automated": {
                    "type": "boolean"
                },
                "build": {
                    "$ref": "#/definitions/shallowReference"
                },
                "buildDropLocation": {
                    "type": "string"
                },
                "buildFlavor": {
                    "type": "string"
                },
                "buildPlatform": {
                    "type": "string"
                },
                "configurationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "environmentUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/definitions/shallowReference"
                },
                "pointIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "releaseEnvironmentUri": {
                    "type": "string"
                },
                "releaseUri": {
                    "type": "string"
                },
                "runTimeout": {
                    "type": "string",
                    "format": "timeSpan"
                },
                "sourceFilter": {
                    "type": "string"
                },
                "testCaseFilter": {
                    "type": "string"
                },
                "testConfigurationsMapping": {
                    "type": "string"
                },
                "testSettings": {
                    "$ref": "#/definitions/shallowReference"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "message": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "none",
                        "error",
                        "warning",
                        "info"
                    ]
                }
            }
        },
        "runFilter": {
            "type": "object",
            "properties": {
                "sourceFilter": {
                    "description": "filter for the test case sources (test containers)",
                    "type": "string"
                },
                "testCaseFilter": {
                    "description": "filter for the test cases",
                    "type": "string"
                }
            }
        },
        "shallowReference": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id of the resource",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "Name of the resource",
                    "type": "string"
                },
                "url": {
                    "description": "Full http link to the resource",
                    "type": "string"
                }
            }
        },
        "slicedTestData": {
            "type": "object",
            "properties": {
                "executorUri": {
                    "description": "ExecutorUri of Executor of testcase",
                    "type": "string"
                },
                "fullyQualifiedName": {
                    "description": "Fully qualified Name of Testcase",
                    "type": "string"
                },
                "source": {
                    "description": "TestContainer of TestCase",
                    "type": "string"
                }
            }
        },
        "teamProjectReference": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "type": "string",
                    "format": "projectState"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "testAgent": {
            "type": "object",
            "properties": {
                "capabilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dtlEnvironment": {
                    "$ref": "#/definitions/shallowReference"
                },
                "dtlMachine": {
                    "$ref": "#/definitions/shallowReference"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "testRunId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "testAutomationRunSlice": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id of Slice Sent to ExecutionHost",
                    "type": "integer",
                    "format": "int32"
                },
                "lastPhaseResults": {
                    "description": "Results from the previous slice in jason format. e.g. Results from DiscoverySlice can be used by ExecutionSlice.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/slicedTestData"
                    }
                },
                "messages": {
                    "description": "Important messages related to the execution of the slice.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/message"
                    }
                },
                "requirements": {
                    "description": "List of requirements on the slice that should be met for it to be assigned",
                    "type": "string"
                },
                "results": {
                    "description": "Results of the slice",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the slice",
                    "enum": [
                        "none",
                        "pending",
                        "allocated",
                        "completed",
                        "aborted",
                        "cancelled"
                    ]
                },
                "testConfigId": {
                    "description": "config Id of Executing Slice",
                    "type": "integer",
                    "format": "int32"
                },
                "testConfigurationsMapping": {
                    "description": "Test Configurations mapping",
                    "type": "string"
                },
                "testRunInformation": {
                    "description": "TestRunInformation should capture any information related to the TestRun",
                    "$ref": "#/definitions/testRunInformation"
                },
                "type": {
                    "description": "The type of slice being worked on",
                    "enum": [
                        "none",
                        "discovery",
                        "execution",
                        "sessionStart",
                        "sessionStop"
                    ]
                }
            }
        },
        "testExecutionServiceCommand": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "Json string of TestExecutionCommandMessage.",
                    "type": "string"
                },
                "messageId": {
                    "description": "The message id.",
                    "type": "integer",
                    "format": "int64"
                },
                "messageType": {
                    "description": "The message type",
                    "type": "string"
                }
            }
        },
        "testRunInformation": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/runFilter"
                },
                "isTestRunComplete": {
                    "type": "boolean"
                },
                "projectReference": {
                    "$ref": "#/definitions/teamProjectReference"
                },
                "runSettings": {
                    "description": "RunSettings Xml",
                    "type": "string"
                },
                "tcmRun": {
                    "$ref": "#/definitions/shallowReference"
                },
                "testDropPath": {
                    "description": "Location of Test containers on Test agent machine.",
                    "type": "string"
                }
            }
        }
    },
    "parameters": {
        "api-Version": {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
            "required": true,
            "type": "string"
        }
    },
    "externalDocs": {
        "description": "Visual Studio Team Services REST APIs",
        "url": "https://www.visualstudio.com/docs/integrate/api/overview"
    } 
}