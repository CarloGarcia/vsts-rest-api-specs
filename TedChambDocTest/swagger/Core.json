{
    "$schema":Â "http://swagger.io/v2/schema.json#",
    "swagger": "2.0",
    "info": {
        "title": "Core",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "fabrikam-fiber-inc.visualstudio.com",
    "basePath": "/",
    "tags": [
        {
            "name": "connectedServices"
        },
        {
            "name": "identityMru"
        },
        {
            "name": "members"
        },
        {
            "name": "processes"
        },
        {
            "name": "projectCollections"
        },
        {
            "name": "projectHistory"
        },
        {
            "name": "projects"
        },
        {
            "name": "proxies"
        },
        {
            "name": "teams"
        }
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "pat": {
            "type": "basic",
            "description": "Personal access token"
        }
    },
    "security": [
        {
            "pat": []
        }
    ], 
    "paths": {
        "/_apis/core/identitymru/{mruName}": {
            "post": {
                "tags": [
                    "identityMru"
                ],
                "summary": "CreateIdentityMru",
                "description": "",
                "operationId": "createIdentityMru",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentityData"
                        }
                    },
                    {
                        "in": "path",
                        "name": "mruName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "identityMru"
                ],
                "summary": "DeleteIdentityMru",
                "description": "",
                "operationId": "deleteIdentityMru",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentityData"
                        }
                    },
                    {
                        "in": "path",
                        "name": "mruName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "identityMru"
                ],
                "summary": "GetIdentityMru",
                "description": "",
                "operationId": "getIdentityMru",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "mruName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "IdentityRef"
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "identityMru"
                ],
                "summary": "UpdateIdentityMru",
                "description": "",
                "operationId": "updateIdentityMru",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentityData"
                        }
                    },
                    {
                        "in": "path",
                        "name": "mruName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/process/processes": {
            "get": {
                "tags": [
                    "processes"
                ],
                "summary": "GetProcesses",
                "description": "",
                "operationId": "getProcesses",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Process"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/process/processes/{processId}": {
            "get": {
                "tags": [
                    "processes"
                ],
                "summary": "GetProcessById",
                "description": "Retrieve process by id",
                "operationId": "getProcessById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "processId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                }
            }
        },
        "/_apis/projectcollections": {
            "get": {
                "tags": [
                    "projectCollections"
                ],
                "summary": "GetProjectCollections",
                "description": "Get project collection references for this application.",
                "operationId": "getProjectCollections",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "top",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeamProjectCollectionReference"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/projectcollections/{collectionId}": {
            "get": {
                "tags": [
                    "projectCollections"
                ],
                "summary": "GetProjectCollection",
                "description": "Get project collection with the specified id or name.",
                "operationId": "getProjectCollection",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TeamProjectCollection"
                        }
                    }
                }
            }
        },
        "/_apis/projecthistory": {
            "get": {
                "tags": [
                    "projectHistory"
                ],
                "summary": "GetProjectHistory",
                "description": "",
                "operationId": "getProjectHistory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "minRevision",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeamProjectReference"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/projects": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "GetProjects",
                "description": "Get project references with the specified state",
                "operationId": "getProjects",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "stateFilter",
                        "description": "Filter on team projects in a specific team project state (default: WellFormed).",
                        "required": false,
                        "type": "ProjectState"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeamProjectReference"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "projects"
                ],
                "summary": "QueueCreateProject",
                "description": "Queue a project creation.",
                "operationId": "queueCreateProject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The project to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TeamProject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "OperationReference"
                        }
                    }
                }
            }
        },
        "/_apis/projects/{projectId}": {
            "get": {
                "tags": [
                    "projects"
                ],
                "summary": "GetProject",
                "description": "Get project with the specified id or name, optionally including capabilities.",
                "operationId": "getProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "includeCapabilities",
                        "description": "Include capabilities (such as source control) in the team project result (default: false).",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "includeHistory",
                        "description": "Search within renamed projects (that had such name in the past).",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TeamProject"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "projects"
                ],
                "summary": "QueueDeleteProject",
                "description": "Queue a project deletion.",
                "operationId": "queueDeleteProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "The project id of the project to delete.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "OperationReference"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "projects"
                ],
                "summary": "UpdateProject",
                "description": "Update an existing project's name, abbreviation, or description.",
                "operationId": "updateProject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The updates for the project.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TeamProject"
                        }
                    },
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "The project id of the project to update.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "OperationReference"
                        }
                    }
                }
            }
        },
        "/_apis/projects/{projectId}/connectedservices": {
            "post": {
                "tags": [
                    "connectedServices"
                ],
                "summary": "CreateConnectedService",
                "description": "",
                "operationId": "createConnectedService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebApiConnectedServiceDetails"
                        }
                    },
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebApiConnectedService"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "connectedServices"
                ],
                "summary": "GetConnectedServices",
                "description": "",
                "operationId": "getConnectedServices",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "kind",
                        "description": "",
                        "required": false,
                        "type": "ConnectedServiceKind"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WebApiConnectedService"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/projects/{projectId}/connectedservices/{name}": {
            "get": {
                "tags": [
                    "connectedServices"
                ],
                "summary": "GetConnectedServiceDetails",
                "description": "",
                "operationId": "getConnectedServiceDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebApiConnectedServiceDetails"
                        }
                    }
                }
            }
        },
        "/_apis/projects/{projectId}/teams": {
            "post": {
                "tags": [
                    "teams"
                ],
                "summary": "CreateTeam",
                "description": "Creates a team",
                "operationId": "createTeam",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The team data used to create the team.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebApiTeam"
                        }
                    },
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "The name or id (GUID) of the team project in which to create the team.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebApiTeam"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "teams"
                ],
                "summary": "GetTeams",
                "description": "",
                "operationId": "getTeams",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WebApiTeam"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/projects/{projectId}/teams/{teamId}": {
            "delete": {
                "tags": [
                    "teams"
                ],
                "summary": "DeleteTeam",
                "description": "Deletes a team",
                "operationId": "deleteTeam",
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "The name or id (GUID) of the team project containing the team to delete.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "teamId",
                        "description": "The name of id of the team to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "teams"
                ],
                "summary": "GetTeam",
                "description": "Gets a team",
                "operationId": "getTeam",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "teamId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebApiTeam"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "teams"
                ],
                "summary": "UpdateTeam",
                "description": "Updates a team's name and/or description",
                "operationId": "updateTeam",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebApiTeam"
                        }
                    },
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "The name or id (GUID) of the team project containing the team to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "teamId",
                        "description": "The name of id of the team to update.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebApiTeam"
                        }
                    }
                }
            }
        },
        "/_apis/projects/{projectId}/teams/{teamId}/members": {
            "get": {
                "tags": [
                    "members"
                ],
                "summary": "GetTeamMembers",
                "description": "",
                "operationId": "getTeamMembers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "teamId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "IdentityRef"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/proxies": {
            "get": {
                "tags": [
                    "proxies"
                ],
                "summary": "GetProxies",
                "description": "",
                "operationId": "getProxies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "proxyUrl",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Proxy"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "IdentityData": {
            "type": "object",
            "properties": {
                "identityIds": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            }
        },
        "Process": {
            "type": "ProcessReference",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "type": {
                    "enum": [
                        "system",
                        "custom",
                        "inherited"
                    ]
                }
            }
        },
        "ProcessReference": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ProjectInfo": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "lastUpdateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "ProjectProperty"
                    }
                },
                "revision": {
                    "description": "Current revision of the project",
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "enum": [
                        "deleting",
                        "new",
                        "wellFormed",
                        "createPending",
                        "all",
                        "unchanged",
                        "deleted"
                    ]
                },
                "uri": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ProjectMessage": {
            "type": "object",
            "properties": {
                "project": {
                    "$ref": "#/definitions/ProjectInfo"
                },
                "projectChangeType": {
                    "enum": [
                        "modified",
                        "deleted",
                        "added"
                    ]
                }
            }
        },
        "ProjectProperty": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Proxy": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "This is a description string",
                    "type": "string"
                },
                "friendlyName": {
                    "description": "The friendly name of the server",
                    "type": "string"
                },
                "globalDefault": {
                    "type": "boolean"
                },
                "site": {
                    "description": "This is a string representation of the site that the proxy server is located in (e.g. \"NA-WA-RED\")",
                    "type": "string"
                },
                "siteDefault": {
                    "type": "boolean"
                },
                "url": {
                    "description": "The URL of the proxy server",
                    "type": "string"
                }
            }
        },
        "TeamContext": {
            "type": "object",
            "properties": {
                "project": {
                    "description": "The team project Id or name.  Ignored if ProjectId is set.",
                    "type": "string"
                },
                "projectId": {
                    "description": "The Team Project ID.  Required if Project is not set.",
                    "type": "string",
                    "format": "uuid"
                },
                "team": {
                    "description": "The Team Id or name.  Ignored if TeamId is set.",
                    "type": "string"
                },
                "teamId": {
                    "description": "The Team Id",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "TeamProject": {
            "type": "TeamProjectReference",
            "properties": {
                "_links": {
                    "description": "The links to other objects related to this object.",
                    "type": "ReferenceLinks"
                },
                "capabilities": {
                    "description": "Set of capabilities this project has (such as process template & version control).",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "defaultTeam": {
                    "description": "The shallow ref to the default team.",
                    "$ref": "#/definitions/WebApiTeamRef"
                }
            }
        },
        "TeamProjectCollection": {
            "type": "TeamProjectCollectionReference",
            "properties": {
                "_links": {
                    "description": "The links to other objects related to this object.",
                    "type": "ReferenceLinks"
                },
                "description": {
                    "description": "Project collection description.",
                    "type": "string"
                },
                "state": {
                    "description": "Project collection state.",
                    "type": "string"
                }
            }
        },
        "TeamProjectCollectionReference": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Collection Id.",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "Collection Name.",
                    "type": "string"
                },
                "url": {
                    "description": "Collection REST Url.",
                    "type": "string"
                }
            }
        },
        "TeamProjectReference": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "description": "Project abbreviation.",
                    "type": "string"
                },
                "description": {
                    "description": "The project's description (if any).",
                    "type": "string"
                },
                "id": {
                    "description": "Project identifier.",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "Project name.",
                    "type": "string"
                },
                "revision": {
                    "description": "Project revision.",
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "description": "Project state.",
                    "enum": [
                        "deleting",
                        "new",
                        "wellFormed",
                        "createPending",
                        "all",
                        "unchanged",
                        "deleted"
                    ]
                },
                "url": {
                    "description": "Url to the full version of the object.",
                    "type": "string"
                }
            }
        },
        "TemporaryDataCreatedDTO": {
            "type": "TemporaryDataDTO",
            "properties": {
                "expirationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "TemporaryDataDTO": {
            "type": "object",
            "properties": {
                "expirationSeconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "origin": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "WebApiConnectedService": {
            "type": "WebApiConnectedServiceRef",
            "properties": {
                "authenticatedBy": {
                    "description": "The user who did the OAuth authentication to created this service",
                    "type": "IdentityRef"
                },
                "description": {
                    "description": "Extra description on the service.",
                    "type": "string"
                },
                "friendlyName": {
                    "description": "Friendly Name of service connection",
                    "type": "string"
                },
                "id": {
                    "description": "Id/Name of the connection service. For Ex: Subscription Id for Azure Connection",
                    "type": "string"
                },
                "kind": {
                    "description": "The kind of service.",
                    "type": "string"
                },
                "project": {
                    "description": "The project associated with this service",
                    "$ref": "#/definitions/TeamProjectReference"
                },
                "serviceUri": {
                    "description": "Optional uri to connect directly to the service such as https://windows.azure.com",
                    "type": "string"
                }
            }
        },
        "WebApiConnectedServiceDetails": {
            "type": "WebApiConnectedServiceRef",
            "properties": {
                "connectedServiceMetaData": {
                    "description": "Meta data for service connection",
                    "$ref": "#/definitions/WebApiConnectedService"
                },
                "credentialsXml": {
                    "description": "Credential info",
                    "type": "string"
                },
                "endPoint": {
                    "description": "Optional uri to connect directly to the service such as https://windows.azure.com",
                    "type": "string"
                }
            }
        },
        "WebApiConnectedServiceRef": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "WebApiCreateTagRequestData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "WebApiProject": {
            "type": "TeamProjectReference",
            "properties": {
                "capabilities": {
                    "description": "Set of capabilities this project has",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "collection": {
                    "description": "Reference to collection which contains this project",
                    "$ref": "#/definitions/WebApiProjectCollectionRef"
                },
                "defaultTeam": {
                    "description": "Default team for this project",
                    "$ref": "#/definitions/WebApiTeamRef"
                }
            }
        },
        "WebApiProjectCollection": {
            "type": "WebApiProjectCollectionRef",
            "properties": {
                "description": {
                    "description": "Project collection description",
                    "type": "string"
                },
                "state": {
                    "description": "Project collection state",
                    "type": "string"
                }
            }
        },
        "WebApiProjectCollectionRef": {
            "type": "object",
            "properties": {
                "collectionUrl": {
                    "description": "Collection Tfs Url (Host Url)",
                    "type": "string"
                },
                "id": {
                    "description": "Collection Guid",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "Collection Name",
                    "type": "string"
                },
                "url": {
                    "description": "Collection REST Url",
                    "type": "string"
                }
            }
        },
        "WebApiTagDefinition": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "WebApiTeam": {
            "type": "WebApiTeamRef",
            "properties": {
                "description": {
                    "description": "Team description",
                    "type": "string"
                },
                "identityUrl": {
                    "description": "Identity REST API Url to this team",
                    "type": "string"
                }
            }
        },
        "WebApiTeamRef": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Team (Identity) Guid. A Team Foundation ID.",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "Team name",
                    "type": "string"
                },
                "url": {
                    "description": "Team REST API Url",
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Visual Studio Team Services REST APIs",
        "url": "https://www.visualstudio.com/docs/integrate/api/overview"
    } 
}