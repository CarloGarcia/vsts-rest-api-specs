{
  "swagger": "2.0",
  "info": {
    "title": "Task",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.0"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "attachments"
    },
    {
      "name": "feed"
    },
    {
      "name": "logs"
    },
    {
      "name": "metrics"
    },
    {
      "name": "plangroupsqueue"
    },
    {
      "name": "plans"
    },
    {
      "name": "records"
    },
    {
      "name": "timelines"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/distributedtask/hubs/{hubName}/plangroupsqueue": {
      "get": {
        "tags": [
          "plangroupsqueue"
        ],
        "summary": "GetQueuedPlanGroups",
        "description": "",
        "operationId": "GetQueuedPlanGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "statusFilter",
            "description": "",
            "required": false,
            "type": "string",
            "format": "PlanGroupStatus"
          },
          {
            "in": "query",
            "name": "count",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskOrchestrationQueuedPlanGroup"
              }
            }
         }
        }
      }
    },
    "/_apis/distributedtask/hubs/{hubName}/plangroupsqueue/metrics": {
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "GetPlanGroupsQueueMetrics",
        "description": "",
        "operationId": "GetPlanGroupsQueueMetrics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskOrchestrationPlanGroupsQueueMetrics"
              }
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plangroupsqueue/{planGroup}": {
      "get": {
        "tags": [
          "plangroupsqueue"
        ],
        "summary": "GetQueuedPlanGroup",
        "description": "",
        "operationId": "GetQueuedPlanGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planGroup",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskOrchestrationQueuedPlanGroup"
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}": {
      "get": {
        "tags": [
          "plans"
        ],
        "summary": "GetPlan",
        "description": "",
        "operationId": "GetPlan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskOrchestrationPlan"
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/attachments/{type}": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "GetPlanAttachments",
        "description": "",
        "operationId": "GetPlanAttachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAttachment"
              }
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/logs": {
      "post": {
        "tags": [
          "logs"
        ],
        "summary": "CreateLog",
        "description": "",
        "operationId": "CreateLog",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskLog"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskLog"
            }
         }
        }
      },
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "GetLogs",
        "description": "",
        "operationId": "GetLogs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskLog"
              }
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/logs/{logId}": {
      "post": {
        "tags": [
          "logs"
        ],
        "summary": "AppendLogContent",
        "description": "",
        "operationId": "AppendLogContent",
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "logId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskLog"
            }
         }
        }
      },
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "GetLog",
        "description": "",
        "operationId": "GetLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "logId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startLine",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "endLine",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/timelines": {
      "post": {
        "tags": [
          "timelines"
        ],
        "summary": "CreateTimeline",
        "description": "",
        "operationId": "CreateTimeline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Timeline"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Timeline"
            }
         }
        }
      },
      "get": {
        "tags": [
          "timelines"
        ],
        "summary": "GetTimelines",
        "description": "",
        "operationId": "GetTimelines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Timeline"
              }
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/timelines/{timelineId}": {
      "delete": {
        "tags": [
          "timelines"
        ],
        "summary": "DeleteTimeline",
        "description": "",
        "operationId": "DeleteTimeline",
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      },
      "get": {
        "tags": [
          "timelines"
        ],
        "summary": "GetTimeline",
        "description": "",
        "operationId": "GetTimeline",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "changeId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeRecords",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Timeline"
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/timelines/{timelineId}/records": {
      "get": {
        "tags": [
          "records"
        ],
        "summary": "GetRecords",
        "description": "",
        "operationId": "GetRecords",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "changeId",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimelineRecord"
              }
            }
         }
        }
      },
      "patch": {
        "tags": [
          "records"
        ],
        "summary": "UpdateRecords",
        "description": "",
        "operationId": "UpdateRecords",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VssJsonCollectionWrapper"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimelineRecord"
              }
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/timelines/{timelineId}/records/{recordId}/attachments/{type}": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "GetAttachments",
        "description": "",
        "operationId": "GetAttachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAttachment"
              }
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/timelines/{timelineId}/records/{recordId}/attachments/{type}/{name}": {
      "put": {
        "tags": [
          "attachments"
        ],
        "summary": "CreateAttachment",
        "description": "",
        "operationId": "CreateAttachment",
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAttachment"
            }
         }
        }
      },
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "GetAttachment",
        "description": "",
        "operationId": "GetAttachment",
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAttachment"
            }
         }
        }
      }
    },
    "/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/timelines/{timelineId}/records/{recordId}/feed": {
      "post": {
        "tags": [
          "feed"
        ],
        "summary": "AppendTimelineRecordFeed",
        "description": "",
        "operationId": "AppendTimelineRecordFeed",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VssJsonCollectionWrapper"
            }
          },
          {
            "in": "path",
            "name": "scopeIdentifier",
            "description": "The project GUID to scope the request",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "hubName",
            "description": "The name of the server hub: \"build\" for the Build server or \"rm\" for the Release Management server",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "planId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timelineId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      }
    }
  },
  "definitions": {
    "Issue": {
      "description": "",
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "data": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "error",
            "warning"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.IssueType"
          }
        }
      }
    },
    "JobOption": {
      "description": "Represents an option that may affect the way an agent runs the job.",
      "type": "object",
      "properties": {
        "data": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "Gets the id of the option.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "MaskHint": {
      "description": "",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "variable",
            "regex"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.MaskType"
          }
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PlanEnvironment": {
      "description": "",
      "type": "object",
      "properties": {
        "mask": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaskHint"
          }
        },
        "options": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobOption"
          }
        },
        "variables": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProjectReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.  Example: { self: { href: \"http://localhost:8080/tfs/DefaultCollection/_apis/wit/workItems/1\" } }",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "TaskAttachment": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "createdOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "lastChangedBy": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "lastChangedOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "recordId": {
          "type": "string",
          "format": "uuid"
        },
        "timelineId": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TaskLog": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskLogReference"
        }
      ],
      "properties": {
        "createdOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "indexLocation": {
          "type": "string"
        },
        "lastChangedOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "lineCount": {
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "TaskLogReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "TaskOrchestrationContainer": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskOrchestrationItem"
        }
      ],
      "properties": {
        "children": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOrchestrationItem"
          }
        },
        "continueOnError": {
          "type": "boolean"
        },
        "data": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "maxConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "parallel": {
          "type": "boolean"
        },
        "rollback": {
          "$ref": "#/definitions/TaskOrchestrationContainer"
        }
      }
    },
    "TaskOrchestrationItem": {
      "description": "",
      "type": "object",
      "properties": {
        "itemType": {
          "readOnly": true,
          "enum": [
            "container",
            "job"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskOrchestrationItemType"
          }
        }
      }
    },
    "TaskOrchestrationOwner": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TaskOrchestrationPlan": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskOrchestrationPlanReference"
        }
      ],
      "properties": {
        "environment": {
          "$ref": "#/definitions/PlanEnvironment"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "implementation": {
          "$ref": "#/definitions/TaskOrchestrationContainer"
        },
        "planGroup": {
          "type": "string"
        },
        "requestedById": {
          "type": "string",
          "format": "uuid"
        },
        "requestedForId": {
          "type": "string",
          "format": "uuid"
        },
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult"
          }
        },
        "resultCode": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "enum": [
            "inProgress",
            "queued",
            "completed"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskOrchestrationPlanState"
          }
        },
        "timeline": {
          "$ref": "#/definitions/TimelineReference"
        }
      }
    },
    "TaskOrchestrationPlanGroupsQueueMetrics": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "enum": [
            "running",
            "queued",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.PlanGroupStatus"
          }
        }
      }
    },
    "TaskOrchestrationPlanReference": {
      "description": "",
      "type": "object",
      "properties": {
        "artifactLocation": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        },
        "planType": {
          "type": "string"
        },
        "scopeIdentifier": {
          "type": "string",
          "format": "uuid"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskOrchestrationQueuedPlan": {
      "description": "",
      "type": "object",
      "properties": {
        "assignTime": {
          "type": "string",
          "format": "date-time"
        },
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planGroup": {
          "type": "string"
        },
        "planId": {
          "type": "string",
          "format": "uuid"
        },
        "poolId": {
          "type": "integer",
          "format": "int32"
        },
        "queuePosition": {
          "type": "integer",
          "format": "int32"
        },
        "queueTime": {
          "type": "string",
          "format": "date-time"
        },
        "scopeIdentifier": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TaskOrchestrationQueuedPlanGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "definition": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "owner": {
          "$ref": "#/definitions/TaskOrchestrationOwner"
        },
        "planGroup": {
          "readOnly": true,
          "type": "string"
        },
        "plans": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOrchestrationQueuedPlan"
          }
        },
        "project": {
          "$ref": "#/definitions/ProjectReference"
        },
        "queuePosition": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskReference": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "inputs": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "Timeline": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TimelineReference"
        }
      ],
      "properties": {
        "lastChangedBy": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "lastChangedOn": {
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "records": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineRecord"
          }
        }
      }
    },
    "TimelineRecord": {
      "description": "",
      "type": "object",
      "properties": {
        "changeId": {
          "type": "integer",
          "format": "int32"
        },
        "currentOperation": {
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/TimelineReference"
        },
        "errorCount": {
          "type": "integer",
          "format": "int32"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "issues": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue"
          }
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "location": {
          "type": "string"
        },
        "log": {
          "$ref": "#/definitions/TaskLogReference"
        },
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "parentId": {
          "type": "string",
          "format": "uuid"
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "refName": {
          "type": "string"
        },
        "result": {
          "enum": [
            "succeeded",
            "succeededWithIssues",
            "failed",
            "canceled",
            "skipped",
            "abandoned"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TaskResult"
          }
        },
        "resultCode": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "enum": [
            "pending",
            "inProgress",
            "completed"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.DistributedTask.WebApi.TimelineRecordState"
          }
        },
        "task": {
          "$ref": "#/definitions/TaskReference"
        },
        "type": {
          "type": "string"
        },
        "variables": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableValue"
          }
        },
        "warningCount": {
          "type": "integer",
          "format": "int32"
        },
        "workerName": {
          "type": "string"
        }
      }
    },
    "TimelineReference": {
      "description": "",
      "type": "object",
      "properties": {
        "changeId": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "VariableValue": {
      "description": "",
      "type": "object",
      "properties": {
        "isSecret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.0-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}