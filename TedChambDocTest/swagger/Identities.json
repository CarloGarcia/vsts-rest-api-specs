{
  "swagger": "2.0",
  "info": {
    "title": "Identity",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "claims"
    },
    {
      "name": "groups"
    },
    {
      "name": "identities"
    },
    {
      "name": "identity"
    },
    {
      "name": "identityBatch"
    },
    {
      "name": "identitySnapshot"
    },
    {
      "name": "maxSequenceId"
    },
    {
      "name": "me"
    },
    {
      "name": "members"
    },
    {
      "name": "membersOf"
    },
    {
      "name": "scopes"
    },
    {
      "name": "signoutToken"
    },
    {
      "name": "tenant"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/groups": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "CreateGroups",
        "description": "",
        "operationId": "createGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Identity"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "ListGroups",
        "description": "",
        "operationId": "listGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scopeIds",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "recurse",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "deleted",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Identity"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      }
    },
    "/_apis/groups/{groupId}": {
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "DeleteGroup",
        "description": "",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/identities": {
      "get": {
        "tags": [
          "identities"
        ],
        "summary": "GetIdentityChanges",
        "description": "",
        "operationId": "getIdentityChanges",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "identitySequenceId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "groupSequenceId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "scopeId",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ChangedIdentities"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "identities"
        ],
        "summary": "UpdateIdentities",
        "description": "",
        "operationId": "updateIdentities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "VssJsonCollectionWrapperV"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityUpdateData"
              }
            }
          }
        }
      }
    },
    "/_apis/identities/{containerId}/members": {
      "get": {
        "tags": [
          "members"
        ],
        "summary": "ReadMembers",
        "description": "",
        "operationId": "readMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryMembership",
            "description": "",
            "required": false,
            "type": "string",
            "format": "QueryMembership"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityDescriptor"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      }
    },
    "/_apis/identities/{containerId}/members/{memberId}": {
      "put": {
        "tags": [
          "members"
        ],
        "summary": "AddMember",
        "description": "",
        "operationId": "addMember",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "memberId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      },
      "get": {
        "tags": [
          "members"
        ],
        "summary": "ReadMember",
        "description": "",
        "operationId": "readMember",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "memberId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryMembership",
            "description": "",
            "required": false,
            "type": "string",
            "format": "QueryMembership"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentityDescriptor"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "members"
        ],
        "summary": "RemoveMember",
        "description": "",
        "operationId": "removeMember",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "memberId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/_apis/identities/{identityId}": {
      "get": {
        "tags": [
          "identities"
        ],
        "summary": "ReadIdentity",
        "description": "",
        "operationId": "readIdentity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identityId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryMembership",
            "description": "",
            "required": false,
            "type": "string",
            "format": "QueryMembership"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "identities"
        ],
        "summary": "UpdateIdentity",
        "description": "",
        "operationId": "updateIdentity",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          },
          {
            "in": "path",
            "name": "identityId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/identities/{memberId}/membersof": {
      "get": {
        "tags": [
          "membersOf"
        ],
        "summary": "ReadMembersOf",
        "description": "",
        "operationId": "readMembersOf",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "memberId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryMembership",
            "description": "",
            "required": false,
            "type": "string",
            "format": "QueryMembership"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityDescriptor"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      }
    },
    "/_apis/identities/{memberId}/membersof/{containerId}": {
      "get": {
        "tags": [
          "membersOf"
        ],
        "summary": "ReadMemberOf",
        "description": "",
        "operationId": "readMemberOf",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "memberId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "containerId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queryMembership",
            "description": "",
            "required": false,
            "type": "string",
            "format": "QueryMembership"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentityDescriptor"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      }
    },
    "/_apis/identities/claims": {
      "put": {
        "tags": [
          "claims"
        ],
        "summary": "CreateOrBindWithClaims",
        "description": "",
        "operationId": "createOrBindWithClaims",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          }
        }
      }
    },
    "/_apis/identities/identity": {
      "put": {
        "tags": [
          "identity"
        ],
        "summary": "CreateIdentity",
        "description": "",
        "operationId": "createIdentity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrameworkIdentityInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          }
        }
      }
    },
    "/_apis/identities/maxsequenceid": {
      "get": {
        "tags": [
          "maxSequenceId"
        ],
        "summary": "GetMaxSequenceId",
        "description": "",
        "operationId": "getMaxSequenceId",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      }
    },
    "/_apis/identities/me": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "GetSelf",
        "description": "",
        "operationId": "getSelf",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentitySelf"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      }
    },
    "/_apis/identities/tenant/{tenantId}": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "GetTenant",
        "description": "",
        "operationId": "getTenant",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenantId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TenantInfo"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      }
    },
    "/_apis/identitybatch": {
      "post": {
        "tags": [
          "identityBatch"
        ],
        "summary": "ReadIdentityBatch",
        "description": "",
        "operationId": "readIdentityBatch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityBatchInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Identity"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      }
    },
    "/_apis/identitysnapshot/{scopeId}": {
      "get": {
        "tags": [
          "identitySnapshot"
        ],
        "summary": "GetIdentitySnapshot",
        "description": "",
        "operationId": "getIdentitySnapshot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeId",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentitySnapshot"
            }
          }
        }
      }
    },
    "/_apis/scopes": {
      "get": {
        "tags": [
          "scopes"
        ],
        "summary": "GetScopeByName",
        "description": "",
        "operationId": "getScopeByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scopeName",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentityScope"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      }
    },
    "/_apis/scopes/{scopeId}": {
      "put": {
        "tags": [
          "scopes"
        ],
        "summary": "CreateScope",
        "description": "",
        "operationId": "createScope",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateScopeInfo"
            }
          },
          {
            "in": "path",
            "name": "scopeId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentityScope"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "scopes"
        ],
        "summary": "DeleteScope",
        "description": "",
        "operationId": "deleteScope",
        "parameters": [
          {
            "in": "path",
            "name": "scopeId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "scopes"
        ],
        "summary": "GetScopeById",
        "description": "",
        "operationId": "getScopeById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scopeId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentityScope"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.identity"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "scopes"
        ],
        "summary": "RenameScope",
        "description": "",
        "operationId": "renameScope",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityScope"
            }
          },
          {
            "in": "path",
            "name": "scopeId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/signouttoken": {
      "get": {
        "tags": [
          "signoutToken"
        ],
        "summary": "GetSignoutToken",
        "description": "",
        "operationId": "getSignoutToken",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccessTokenResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenResult": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "format": "JsonWebToken"
        },
        "accessTokenError": {
          "type": "string",
          "format": "TokenError"
        },
        "authorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "errorDescription": {
          "type": "string"
        },
        "hasError": {
          "type": "boolean"
        },
        "refreshToken": {
          "type": "string",
          "format": "RefreshTokenGrant"
        },
        "tokenType": {
          "type": "string"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ChangedIdentities": {
      "type": "object",
      "properties": {
        "identities": {
          "description": "Changed Identities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identity"
          }
        },
        "sequenceContext": {
          "description": "Last Identity SequenceId",
          "$ref": "#/definitions/ChangedIdentitiesContext"
        }
      }
    },
    "ChangedIdentitiesContext": {
      "type": "object",
      "properties": {
        "groupSequenceId": {
          "description": "Last Group SequenceId",
          "type": "integer",
          "format": "int32"
        },
        "identitySequenceId": {
          "description": "Last Identity SequenceId",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateScopeInfo": {
      "type": "object",
      "properties": {
        "adminGroupDescription": {
          "type": "string"
        },
        "adminGroupName": {
          "type": "string"
        },
        "creatorId": {
          "type": "string",
          "format": "uuid"
        },
        "parentScopeId": {
          "type": "string",
          "format": "uuid"
        },
        "scopeName": {
          "type": "string"
        },
        "scopeType": {
          "enum": [
            "generic",
            "serviceHost",
            "teamProject"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Identity.GroupScopeType"
          }
        }
      }
    },
    "FrameworkIdentityInfo": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "identityType": {
          "enum": [
            "none",
            "serviceIdentity",
            "aggregateIdentity",
            "importedIdentity"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Identity.FrameworkIdentityType"
          }
        },
        "role": {
          "type": "string"
        }
      }
    },
    "GroupMembership": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "descriptor": {
          "$ref": "#/definitions/IdentityDescriptor"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "queriedId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Identity": {
      "type": "object",
      "properties": {
        "customDisplayName": {
          "description": "The custom display name for the identity (if any). Setting this property to an empty string will clear the existing custom display name. Setting this property to null will not affect the existing persisted value (since null values do not get sent over the wire or to the database)",
          "type": "string"
        },
        "descriptor": {
          "$ref": "#/definitions/IdentityDescriptor"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isActive": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "masterId": {
          "type": "string",
          "format": "uuid"
        },
        "memberIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "memberOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityDescriptor"
          }
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityDescriptor"
          }
        },
        "metaTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "providerDisplayName": {
          "description": "The display name for the identity as specified by the source identity provider.",
          "type": "string"
        },
        "resourceVersion": {
          "type": "integer",
          "format": "int32"
        },
        "uniqueUserId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "IdentityBatchInfo": {
      "type": "object",
      "properties": {
        "descriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityDescriptor"
          }
        },
        "identityIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "includeRestrictedVisibility": {
          "type": "boolean"
        },
        "propertyNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryMembership": {
          "enum": [
            "none",
            "direct",
            "expanded",
            "expandedUp",
            "expandedDown"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Identity.QueryMembership"
          }
        }
      }
    },
    "IdentityDescriptor": {
      "type": "object",
      "properties": {
        "identifier": {
          "description": "The unique identifier for this identity, not exceeding 256 chars, which will be persisted.",
          "type": "string"
        },
        "identityType": {
          "description": "Type of descriptor (for example, Windows, Passport, etc.).",
          "type": "string"
        }
      }
    },
    "IdentityScope": {
      "type": "object",
      "properties": {
        "administrators": {
          "$ref": "#/definitions/IdentityDescriptor"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isActive": {
          "type": "boolean"
        },
        "isGlobal": {
          "type": "boolean"
        },
        "localScopeId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "parentId": {
          "type": "string",
          "format": "uuid"
        },
        "scopeType": {
          "enum": [
            "generic",
            "serviceHost",
            "teamProject"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Identity.GroupScopeType"
          }
        },
        "securingHostId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "IdentitySelf": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "tenants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantInfo"
          }
        }
      }
    },
    "IdentitySnapshot": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identity"
          }
        },
        "identityIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "memberships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupMembership"
          }
        },
        "scopeId": {
          "type": "string",
          "format": "uuid"
        },
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityScope"
          }
        }
      }
    },
    "IdentityUpdateData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "type": "boolean"
        }
      }
    },
    "JObject": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "JContainer"
        }
      ],
      "properties": {
        "item": {
          "type": "string",
          "format": "JToken"
        },
        "type": {
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "PropertiesCollection": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "object"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TenantInfo": {
      "type": "object",
      "properties": {
        "homeTenant": {
          "type": "boolean"
        },
        "tenantId": {
          "type": "string",
          "format": "uuid"
        },
        "tenantName": {
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "VssJsonCollectionWrapperV": {
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "format": "T"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.identity": "Grants the ability to read identities and groups."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}