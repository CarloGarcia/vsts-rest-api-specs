{
    "swagger": "2.0",
    "info": {
        "title": "FeatureManagement",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "fabrikam-fiber-inc.visualstudio.com",
    "basePath": "/",
    "tags": [
        {
            "name": "features"
        },
        {
            "name": "featureStates"
        },
        {
            "name": "featureStatesQuery"
        }
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "pat": {
            "type": "basic",
            "description": "Personal access token"
        }
    },
    "security": [
        {
            "pat": []
        }
    ], 
    "paths": {
        "/_apis/featuremanagement/features": {
            "get": {
                "tags": [
                    "features"
                ],
                "summary": "GetFeatures",
                "description": "Get a list of all defined features",
                "operationId": "getFeatures",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "targetContributionId",
                        "description": "Optional target contribution. If null/empty, return all features. If specified include the features that target the specified contribution.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contributedFeature"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/featuremanagement/features/{featureId}": {
            "get": {
                "tags": [
                    "features"
                ],
                "summary": "GetFeature",
                "description": "Get a specific feature by its id",
                "operationId": "getFeature",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "featureId",
                        "description": "The contribution id of the feature",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/contributedFeature"
                        }
                    }
                }
            }
        },
        "/_apis/featuremanagement/featurestates/{userScope}/{featureId}": {
            "get": {
                "tags": [
                    "featureStates"
                ],
                "summary": "GetFeatureState",
                "description": "Get the state of the specified feature for the given user/all-users scope",
                "operationId": "getFeatureState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "featureId",
                        "description": "Contribution id of the feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "userScope",
                        "description": "User-Scope at which to get the value. Should be \"me\" for the current user or \"host\" for all users.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureState"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "featureStates"
                ],
                "summary": "SetFeatureState",
                "description": "Set the state of a feature",
                "operationId": "setFeatureState",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Posted feature state object. Should specify the effective value.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureState"
                        }
                    },
                    {
                        "in": "path",
                        "name": "featureId",
                        "description": "Contribution id of the feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "userScope",
                        "description": "User-Scope at which to set the value. Should be \"me\" for the current user or \"host\" for all users.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "description": "Reason for changing the state",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "reasonCode",
                        "description": "Short reason code",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureState"
                        }
                    }
                }
            }
        },
        "/_apis/featuremanagement/featurestates/{userScope}/{scopeName}/{scopeValue}/{featureId}": {
            "get": {
                "tags": [
                    "featureStates"
                ],
                "summary": "GetFeatureStateForScope",
                "description": "Get the state of the specified feature for the given named scope",
                "operationId": "getFeatureStateForScope",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "featureId",
                        "description": "Contribution id of the feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "userScope",
                        "description": "User-Scope at which to get the value. Should be \"me\" for the current user or \"host\" for all users.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "scopeName",
                        "description": "Scope at which to get the feature setting for (e.g. \"project\" or \"team\")",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "scopeValue",
                        "description": "Value of the scope (e.g. the project or team id)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureState"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "featureStates"
                ],
                "summary": "SetFeatureStateForScope",
                "description": "Set the state of a feature at a specific scope",
                "operationId": "setFeatureStateForScope",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Posted feature state object. Should specify the effective value.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureState"
                        }
                    },
                    {
                        "in": "path",
                        "name": "featureId",
                        "description": "Contribution id of the feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "userScope",
                        "description": "User-Scope at which to set the value. Should be \"me\" for the current user or \"host\" for all users.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "scopeName",
                        "description": "Scope at which to get the feature setting for (e.g. \"project\" or \"team\")",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "scopeValue",
                        "description": "Value of the scope (e.g. the project or team id)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "description": "Reason for changing the state",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "reasonCode",
                        "description": "Short reason code",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureState"
                        }
                    }
                }
            }
        },
        "/_apis/featuremanagement/featurestatesquery": {
            "post": {
                "tags": [
                    "featureStatesQuery"
                ],
                "summary": "QueryFeatureStates",
                "description": "Get the effective state for a list of feature ids",
                "operationId": "queryFeatureStates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Features to query along with current scope values",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureStateQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureStateQuery"
                        }
                    }
                }
            }
        },
        "/_apis/featuremanagement/featurestatesquery/{userScope}": {
            "post": {
                "tags": [
                    "featureStatesQuery"
                ],
                "summary": "QueryFeatureStatesForDefaultScope",
                "description": "Get the states of the specified features for the default scope",
                "operationId": "queryFeatureStatesForDefaultScope",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Query describing the features to query.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureStateQuery"
                        }
                    },
                    {
                        "in": "path",
                        "name": "userScope",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureStateQuery"
                        }
                    }
                }
            }
        },
        "/_apis/featuremanagement/featurestatesquery/{userScope}/{scopeName}/{scopeValue}": {
            "post": {
                "tags": [
                    "featureStatesQuery"
                ],
                "summary": "QueryFeatureStatesForNamedScope",
                "description": "Get the states of the specified features for the specific named scope",
                "operationId": "queryFeatureStatesForNamedScope",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Query describing the features to query.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureStateQuery"
                        }
                    },
                    {
                        "in": "path",
                        "name": "userScope",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "scopeName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "scopeValue",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/contributedFeatureStateQuery"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contributedFeature": {
            "type": "object",
            "properties": {
                "defaultState": {
                    "description": "If true, the feature is enabled unless overridden at some scope",
                    "type": "boolean"
                },
                "defaultValueRules": {
                    "description": "Rules for setting the default value if not specified by any setting/scope. Evaluated in order until a rule returns an Enabled or Disabled state (not Undefined)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contributedFeatureDefaultValueRule"
                    }
                },
                "description": {
                    "description": "The description of the feature",
                    "type": "string"
                },
                "id": {
                    "description": "The full contribution id of the feature",
                    "type": "string"
                },
                "name": {
                    "description": "The friendly name of the feature",
                    "type": "string"
                },
                "scopes": {
                    "description": "The scopes/levels at which settings can set the enabled/disabled state of this feature",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contributedFeatureSettingScope"
                    }
                }
            }
        },
        "contributedFeatureDefaultValueRule": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the IContributedFeatureValuePlugin to run",
                    "type": "string"
                },
                "properties": {
                    "description": "Properties to feed to the IContributedFeatureValuePlugin",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "contributedFeatureSettingScope": {
            "type": "object",
            "properties": {
                "settingScope": {
                    "description": "The name of the settings scope to use when reading/writing the setting",
                    "type": "string"
                },
                "userScoped": {
                    "description": "Whether this is a user-scope or this is a host-wide (all users) setting",
                    "type": "boolean"
                }
            }
        },
        "contributedFeatureState": {
            "type": "object",
            "properties": {
                "featureId": {
                    "description": "The full contribution id of the feature",
                    "type": "string"
                },
                "scope": {
                    "description": "The scope at which this state applies",
                    "$ref": "#/definitions/contributedFeatureSettingScope"
                },
                "state": {
                    "description": "The current state of this feature",
                    "enum": [
                        "undefined",
                        "disabled",
                        "enabled"
                    ]
                }
            }
        },
        "contributedFeatureStateQuery": {
            "type": "object",
            "properties": {
                "featureIds": {
                    "description": "The list of feature ids to query",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "featureStates": {
                    "description": "The query result containing the current feature states for each of the queried feature ids",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/contributedFeatureState"
                    }
                },
                "scopeValues": {
                    "description": "A dictionary of scope values (project name, etc.) to use in the query (if querying across scopes)",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "parameters": {
        "api-Version": {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
            "required": true,
            "type": "string"
        }
    },
    "externalDocs": {
        "description": "Visual Studio Team Services REST APIs",
        "url": "https://www.visualstudio.com/docs/integrate/api/overview"
    } 
}