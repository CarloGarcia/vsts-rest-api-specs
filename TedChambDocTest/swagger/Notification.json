{
    "swagger": "2.0",
    "info": {
        "title": "Notification",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "fabrikam-fiber-inc.visualstudio.com",
    "basePath": "/",
    "tags": [
        {
            "name": "batchNotificationOperations"
        },
        {
            "name": "events"
        },
        {
            "name": "eventTypeFieldValuesQuery"
        },
        {
            "name": "eventTypes"
        },
        {
            "name": "follows"
        },
        {
            "name": "statisticsQuery"
        },
        {
            "name": "subscriptionQuery"
        },
        {
            "name": "subscriptions"
        },
        {
            "name": "subscriptionTemplates"
        }
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "pat": {
            "type": "basic",
            "description": "Personal access token"
        }
    },
    "security": [
        {
            "pat": []
        }
    ], 
    "paths": {
        "/_apis/notification/batchnotificationoperations": {
            "post": {
                "tags": [
                    "batchNotificationOperations"
                ],
                "summary": "PerformBatchNotificationOperations",
                "description": "",
                "operationId": "performBatchNotificationOperations",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/batchNotificationOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/notification/events": {
            "post": {
                "tags": [
                    "events"
                ],
                "summary": "PublishEvent",
                "description": "",
                "operationId": "publishEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "vssNotificationEvent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "vssNotificationEvent"
                        }
                    }
                }
            }
        },
        "/_apis/notification/eventtypes": {
            "get": {
                "tags": [
                    "eventTypes"
                ],
                "summary": "GetEventTypes",
                "description": "",
                "operationId": "getEventTypes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "publisherId",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notificationEventType"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/notification/eventtypes/{eventType}": {
            "get": {
                "tags": [
                    "eventTypes"
                ],
                "summary": "GetEventType",
                "description": "",
                "operationId": "getEventType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventType",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/notificationEventType"
                        }
                    }
                }
            }
        },
        "/_apis/notification/eventTypes/{eventType}/fieldValuesQuery": {
            "post": {
                "tags": [
                    "eventTypeFieldValuesQuery"
                ],
                "summary": "QueryEventTypes",
                "description": "",
                "operationId": "queryEventTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fieldValuesQuery"
                        }
                    },
                    {
                        "in": "path",
                        "name": "eventType",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notificationEventField"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/notification/follows": {
            "post": {
                "tags": [
                    "follows"
                ],
                "summary": "FollowArtifact",
                "description": "",
                "operationId": "followArtifact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/artifactSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/artifactSubscription"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "follows"
                ],
                "summary": "GetArtifactSubscription",
                "description": "",
                "operationId": "getArtifactSubscription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "artifactType",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "artifactId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/artifactSubscription"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "follows"
                ],
                "summary": "UnfollowArtifact",
                "description": "",
                "operationId": "unfollowArtifact",
                "parameters": [
                    {
                        "in": "query",
                        "name": "subscriptionId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/notification/statisticsquery": {
            "post": {
                "tags": [
                    "statisticsQuery"
                ],
                "summary": "StatisticsQuery",
                "description": "",
                "operationId": "statisticsQuery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notificationStatisticsQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notificationStatistic"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/notification/subscriptionquery": {
            "post": {
                "tags": [
                    "subscriptionQuery"
                ],
                "summary": "SubscriptionQuery",
                "description": "",
                "operationId": "subscriptionQuery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscriptionQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notificationSubscription"
                            }
                        }
                    }
                }
            }
        },
        "/_apis/notification/subscriptions": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "CreateSubscription",
                "description": "",
                "operationId": "createSubscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notificationSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/notificationSubscription"
                        }
                    }
                }
            }
        },
        "/_apis/notification/subscriptions/{subscriptionId}": {
            "delete": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "DeleteSubscription",
                "description": "",
                "operationId": "deleteSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "GetSubscription",
                "description": "",
                "operationId": "getSubscription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/notificationSubscription"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "UpdateSubscription",
                "description": "",
                "operationId": "updateSubscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notificationSubscription"
                        }
                    },
                    {
                        "in": "path",
                        "name": "subscriptionId",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/notificationSubscription"
                        }
                    }
                }
            }
        },
        "/_apis/notification/subscriptiontemplates": {
            "get": {
                "tags": [
                    "subscriptionTemplates"
                ],
                "summary": "GetSubscriptionTemplates",
                "description": "",
                "operationId": "getSubscriptionTemplates",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notificationSubscriptionTemplate"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "actorFilter": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/roleBasedFilter"
                }
            ],
            "properties": {
            }
        },
        "artifactFilter": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/baseSubscriptionFilter"
                }
            ],
            "properties": {
                "artifactId": {
                    "type": "string"
                },
                "artifactType": {
                    "type": "string"
                },
                "artifactUri": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "artifactSubscription": {
            "type": "object",
            "properties": {
                "artifactId": {
                    "type": "string"
                },
                "artifactType": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "baseSubscriptionFilter": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "batchNotificationOperation": {
            "type": "object",
            "properties": {
                "notificationOperation": {
                    "enum": [
                        "none",
                        "suspendUnprocessed"
                    ]
                },
                "notificationQueryConditions": {
                    "type": "array",
                    "items": {
                        "type": "notificationQueryCondition"
                    }
                }
            }
        },
        "chatRoomSubscriptionChannel": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/subscriptionChannelWithAddress"
                }
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "emailHtmlSubscriptionChannel": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/subscriptionChannelWithAddress"
                }
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "emailPlaintextSubscriptionChannel": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/subscriptionChannelWithAddress"
                }
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "eventBacklogStatus": {
            "type": "object",
            "properties": {
                "eventTypeName": {
                    "type": "string"
                },
                "maxUnprocessedEventAgeMs": {
                    "type": "integer",
                    "format": "int32"
                },
                "unprocessedEvents": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "expressionFilter": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/baseSubscriptionFilter"
                }
            ],
            "properties": {
                "criteria": {
                    "$ref": "#/definitions/expressionFilterModel"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "expressionFilterClause": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "index": {
                    "description": "The order in which this clause appeared in the filter query",
                    "type": "integer",
                    "format": "int32"
                },
                "logicalOperator": {
                    "description": "Logical Operator 'AND', 'OR' or NULL (only for the first clause in the filter)",
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "expressionFilterGroup": {
            "type": "object",
            "properties": {
                "end": {
                    "description": "The index of the last FilterClause in this group",
                    "type": "integer",
                    "format": "int32"
                },
                "level": {
                    "description": "Level of the group, since groups can be nested for each nested group the level will increase by 1",
                    "type": "integer",
                    "format": "int32"
                },
                "start": {
                    "description": "The index of the first FilterClause in this group",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "expressionFilterModel": {
            "type": "object",
            "properties": {
                "clauses": {
                    "description": "Flat list of clauses in this subscription",
                    "type": "array",
                    "items": {
                        "type": "expressionFilterClause"
                    }
                },
                "groups": {
                    "description": "Grouping of clauses in the subscription",
                    "type": "array",
                    "items": {
                        "type": "expressionFilterGroup"
                    }
                },
                "maxGroupLevel": {
                    "description": "Max depth of the Subscription tree",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "fieldInputValues": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/inputValues"
                }
            ],
            "properties": {
                "operators": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            }
        },
        "fieldValuesQuery": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/inputValuesQuery"
                }
            ],
            "properties": {
                "inputValues": {
                    "type": "array",
                    "items": {
                        "type": "fieldInputValues"
                    }
                },
                "scope": {
                    "type": "string"
                }
            }
        },
        "ignoreFilter": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/roleBasedFilter"
                }
            ],
            "properties": {
            }
        },
        "iSubscriptionChannel": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "iSubscriptionFilter": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "messageQueueSubscriptionChannel": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "notificationBacklogStatus": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "maxUnprocessedNotificationAgeMs": {
                    "type": "integer",
                    "format": "int32"
                },
                "unprocessedNotifications": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "notificationEventBacklogStatus": {
            "type": "object",
            "properties": {
                "eventBacklogStatus": {
                    "type": "array",
                    "items": {
                        "type": "eventBacklogStatus"
                    }
                },
                "notificationBacklogStatus": {
                    "type": "array",
                    "items": {
                        "type": "notificationBacklogStatus"
                    }
                }
            }
        },
        "notificationEventField": {
            "type": "object",
            "properties": {
                "fieldType": {
                    "description": "Gets or sets the type of this field.",
                    "$ref": "#/definitions/notificationEventFieldType"
                },
                "id": {
                    "description": "Gets or sets the unique identifier of this field.",
                    "type": "string"
                },
                "name": {
                    "description": "Gets or sets the name of this field.",
                    "type": "string"
                },
                "path": {
                    "description": "Gets or sets the path to the field in the event object. This path can be either Json Path or XPath, depending on if the event will be serialized into Json or XML",
                    "type": "string"
                },
                "supportedScopes": {
                    "description": "Gets or sets the scopes that this field supports. If not specified then the event type scopes apply.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "notificationEventFieldType": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Gets or sets the unique identifier of this field type.",
                    "type": "string"
                },
                "operatorConstraints": {
                    "type": "array",
                    "items": {
                        "type": "operatorConstraint"
                    }
                },
                "operators": {
                    "description": "Gets or sets the list of operators that this type supports.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "description": "Gets or sets the value definition of this field like the getValuesMethod and template to display in the UI",
                    "$ref": "#/definitions/valueDefinition"
                }
            }
        },
        "notificationEventPublisher": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "subscriptionManagementInfo": {
                    "$ref": "#/definitions/subscriptionManagement"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "notificationEventRole": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Gets or sets an Id for that role, this id is used by the event.",
                    "type": "string"
                },
                "name": {
                    "description": "Gets or sets the Name for that role, this name is used for UI display.",
                    "type": "string"
                }
            }
        },
        "notificationEventType": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/notificationEventTypeCategory"
                },
                "color": {
                    "description": "Gets or sets the color representing this event type. Example: rgb(128,245,211) or #fafafa",
                    "type": "string"
                },
                "eventPublisher": {
                    "$ref": "#/definitions/notificationEventPublisher"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/notificationEventField"
                    }
                },
                "hasInitiator": {
                    "type": "boolean"
                },
                "icon": {
                    "description": "Gets or sets the icon representing this event type. Can be a URL or a CSS class. Example: css://some-css-class",
                    "type": "string"
                },
                "id": {
                    "description": "Gets or sets the unique identifier of this event definition.",
                    "type": "string"
                },
                "name": {
                    "description": "Gets or sets the name of this event definition.",
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "notificationEventRole"
                    }
                },
                "supportedScopes": {
                    "description": "Gets or sets the scopes that this event type supports",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "description": "Gets or sets the rest end point to get this event type details (fields, fields types)",
                    "type": "string"
                }
            }
        },
        "notificationEventTypeCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Gets or sets the unique identifier of this category.",
                    "type": "string"
                },
                "name": {
                    "description": "Gets or sets the friendly name of this category.",
                    "type": "string"
                }
            }
        },
        "notificationQueryCondition": {
            "type": "object",
            "properties": {
                "eventInitiator": {
                    "type": "string",
                    "format": "uuid"
                },
                "eventType": {
                    "type": "string"
                },
                "subscriber": {
                    "type": "string",
                    "format": "uuid"
                },
                "subscriptionId": {
                    "type": "string"
                }
            }
        },
        "notificationStatistic": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "hitCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "notificationBySubscription",
                        "eventsByEventType",
                        "notificationByEventType",
                        "eventsByEventTypePerUser",
                        "notificationByEventTypePerUser",
                        "events",
                        "notifications",
                        "hourlyNotificationBySubscription",
                        "hourlyEventsByEventTypePerUser",
                        "hourlyEvents",
                        "hourlyNotifications"
                    ]
                },
                "user": {
                    "type": "identityRef"
                }
            }
        },
        "notificationStatisticsQuery": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "type": "notificationStatisticsQueryConditions"
                    }
                }
            }
        },
        "notificationStatisticsQueryConditions": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "hitCountMinimum": {
                    "type": "integer",
                    "format": "int32"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "notificationBySubscription",
                        "eventsByEventType",
                        "notificationByEventType",
                        "eventsByEventTypePerUser",
                        "notificationByEventTypePerUser",
                        "events",
                        "notifications",
                        "hourlyNotificationBySubscription",
                        "hourlyEventsByEventTypePerUser",
                        "hourlyEvents",
                        "hourlyNotifications"
                    ]
                },
                "user": {
                    "type": "identityRef"
                }
            }
        },
        "notificationSubscription": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/notificationSubscriptionBase"
                }
            ],
            "properties": {
                "_links": {
                    "type": "referenceLinks"
                },
                "adminConfig": {
                    "$ref": "#/definitions/subscriptionAdminConfig"
                },
                "channel": {
                    "$ref": "#/definitions/iSubscriptionChannel"
                },
                "flags": {
                    "enum": [
                        "none",
                        "groupSubscription",
                        "contributedSubscription",
                        "canOptOut"
                    ]
                },
                "lastModifiedBy": {
                    "type": "identityRef"
                },
                "modifiedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "scope": {
                    "$ref": "#/definitions/subscriptionScope"
                },
                "status": {
                    "description": "Raw status of the subscription",
                    "enum": [
                        "jailedByNotificationsVolume",
                        "pendingDeletion",
                        "disabledMissingIdentity",
                        "disabledInvalidRoleExpression",
                        "disabledInvalidPathClause",
                        "disabledAsDuplicateOfDefault",
                        "disabledByAdmin",
                        "disabledByUser",
                        "enabled",
                        "enabledOnProbation"
                    ]
                },
                "statusMessage": {
                    "type": "string"
                },
                "subscriber": {
                    "type": "identityRef"
                },
                "subscriptionProvider": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userConfig": {
                    "$ref": "#/definitions/subscriptionUserConfig"
                }
            }
        },
        "notificationSubscriptionBase": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/iSubscriptionFilter"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "notificationSubscriptionsViewData": {
            "type": "object",
            "properties": {
                "eventTypes": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/notificationEventType"
                    }
                },
                "hasManagePermission": {
                    "description": "Indicates whether the current user generally has permissions to manage (create, delete, etc) subscriptions in the view",
                    "type": "boolean"
                },
                "hasViewPermission": {
                    "description": "Indicates whether the current user generally has permissions to see subscriptions in the view",
                    "type": "boolean"
                },
                "isAdminMode": {
                    "description": "Is the subscription view being presented for the purpose of administration (not for managing personal subscriptions)",
                    "type": "boolean"
                },
                "mapCategoryIdToCategoryName": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "mapCategoryIdToSubscriptionTemplates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array"
                    }
                },
                "mapEventTypeToCategoryId": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "mapEventTypeToPublisherId": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "publishers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/notificationEventPublisher"
                    }
                },
                "scopes": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/subscriptionScope"
                    }
                },
                "subscriber": {
                    "description": "Subscriber to use when creating new subscriptions in the view",
                    "type": "identityRef"
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "type": "notificationSubscription"
                    }
                }
            }
        },
        "notificationSubscriptionTemplate": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/notificationSubscriptionBase"
                }
            ],
            "properties": {
                "notificationEventInformation": {
                    "$ref": "#/definitions/notificationEventType"
                },
                "type": {
                    "enum": [
                        "user",
                        "team",
                        "both",
                        "none"
                    ]
                }
            }
        },
        "operatorConstraint": {
            "type": "object",
            "properties": {
                "operator": {
                    "type": "string"
                },
                "supportedScopes": {
                    "description": "Gets or sets the list of scopes that this type supports.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "roleBasedFilter": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/expressionFilter"
                }
            ],
            "properties": {
                "exclusions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inclusions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "serviceHooksSubscriptionChannel": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "soapSubscriptionChannel": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/subscriptionChannelWithAddress"
                }
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "subscriptionAdminConfig": {
            "type": "object",
            "properties": {
                "blockUserDisable": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "subscriptionChannelWithAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "subscriptionManagement": {
            "type": "object",
            "properties": {
                "serviceInstanceType": {
                    "type": "string",
                    "format": "uuid"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "subscriptionQuery": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "type": "subscriptionQueryCondition"
                    }
                },
                "queryFlags": {
                    "enum": [
                        "none",
                        "includeAllGroupSubscriptions",
                        "includeInvalidSubscriptions",
                        "includeDeletedSubscriptions"
                    ]
                }
            }
        },
        "subscriptionQueryCondition": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/iSubscriptionFilter"
                },
                "scope": {
                    "type": "string"
                },
                "subscriber": {
                    "type": "string",
                    "format": "uuid"
                },
                "subscriptionType": {
                    "enum": [
                        "default",
                        "shared"
                    ]
                }
            }
        },
        "subscriptionScope": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/eventScope"
                }
            ],
            "properties": {
                "name": {
                    "description": "Gets or sets the name of this scope (for example, the name of a project)",
                    "type": "string"
                }
            }
        },
        "subscriptionStatisticViewData": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/notificationEventType"
                    }
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "statistics": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array"
                    }
                },
                "subscriptions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/notificationSubscription"
                    }
                }
            }
        },
        "subscriptionUserConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "unsupportedFilter": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/baseSubscriptionFilter"
                }
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "unsupportedSubscriptionChannel": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "userSubscriptionChannel": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/subscriptionChannelWithAddress"
                }
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "valueDefinition": {
            "type": "object",
            "properties": {
                "dataSource": {
                    "description": "Gets or sets the data source.",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "endPoint": {
                    "description": "Gets or sets the rest end point.",
                    "type": "string"
                },
                "resultTemplate": {
                    "description": "Gets or sets the result template.",
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Visual Studio Team Services REST APIs",
        "url": "https://www.visualstudio.com/docs/integrate/api/overview"
    } 
}