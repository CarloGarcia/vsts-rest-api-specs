{
    "$schema":Â "http://swagger.io/v2/schema.json#",
    "swagger": "2.0",
    "info": {
        "title": "CodeReview",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "fabrikam-fiber-inc.visualstudio.com",
    "basePath": "/",
    "tags": [
        {
            "name": "attachments"
        },
        {
            "name": "changes"
        },
        {
            "name": "comments"
        },
        {
            "name": "contents"
        },
        {
            "name": "contentsBatch"
        },
        {
            "name": "iterations"
        },
        {
            "name": "likes"
        },
        {
            "name": "properties"
        },
        {
            "name": "reviewers"
        },
        {
            "name": "reviews"
        },
        {
            "name": "reviewsBatch"
        },
        {
            "name": "settings"
        },
        {
            "name": "share"
        },
        {
            "name": "statuses"
        },
        {
            "name": "threads"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/{project}/_apis/codereview/reviews": {
            "get": {
                "tags": [
                    "reviews"
                ],
                "summary": "GetReviews",
                "description": "Query reviews based on search criteria. When making subsequent requests that include continuation tokens, be sure to pass the same search criteria. Otherwise the subsequent requests may return unexpected results.",
                "operationId": "getReviews",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "searchCriteria",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReviewSearchCriteria"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "continuationToken",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "reviews"
                ],
                "summary": "CreateReview",
                "description": "",
                "operationId": "createReview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}": {
            "delete": {
                "tags": [
                    "reviews"
                ],
                "summary": "DeleteReview",
                "description": "",
                "operationId": "deleteReview",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "reviews"
                ],
                "summary": "GetReview",
                "description": "",
                "operationId": "getReview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "includeAllProperties",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "maxChangesCount",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "header",
                        "name": "ifModifiedSince",
                        "description": "Fetch latest review data if it was modified after IfModifiedSince timestamp.",
                        "required": false,
                        "type": "DateTimeOffset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "reviews"
                ],
                "summary": "ReplaceReview",
                "description": "",
                "operationId": "replaceReview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "reviews"
                ],
                "summary": "UpdateReview",
                "description": "",
                "operationId": "updateReview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/attachments": {
            "post": {
                "tags": [
                    "attachments"
                ],
                "summary": "AddAttachment",
                "description": "",
                "operationId": "addAttachment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "attachments"
                ],
                "summary": "GetAttachments",
                "description": "",
                "operationId": "getAttachments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "modifiedSince",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/attachments/{attachmentId}": {
            "delete": {
                "tags": [
                    "attachments"
                ],
                "summary": "DeleteAttachment",
                "description": "",
                "operationId": "deleteAttachment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "attachmentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "attachments"
                ],
                "summary": "GetAttachment",
                "description": "",
                "operationId": "getAttachment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "attachmentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/contents": {
            "get": {
                "tags": [
                    "contents"
                ],
                "summary": "DownloadContent",
                "description": "",
                "operationId": "downloadContent",
                "produces": [
                    "application/zip",
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "contentHash",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "downloadFileName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "Stream"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "contents"
                ],
                "summary": "UploadContent",
                "description": "",
                "operationId": "uploadContent",
                "consumes": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Stream to upload",
                        "required": true,
                        "type": "Stream"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "contentHash",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fileType",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/contentsbatch": {
            "post": {
                "tags": [
                    "contentsBatch"
                ],
                "summary": "DownloadContentsBatchZip",
                "description": "Fetch file contents based on criteria. Criteria can be a set of iteration ids or content hashes. POST /_apis/codereview/reviews/{id}/contentsBatch",
                "operationId": "downloadContentsBatchZip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/zip"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DownloadContentsCriteria"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "downloadFileName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReviewFilesZipContent"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/iterations": {
            "post": {
                "tags": [
                    "iterations"
                ],
                "summary": "CreateIteration",
                "description": "",
                "operationId": "createIteration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Iteration"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Iteration"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "iterations"
                ],
                "summary": "GetIterations",
                "description": "",
                "operationId": "getIterations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "includeUnpublished",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Iteration"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/iterations/{iterationId}": {
            "get": {
                "tags": [
                    "iterations"
                ],
                "summary": "GetIteration",
                "description": "",
                "operationId": "getIteration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Iteration"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "iterations"
                ],
                "summary": "UpdateIteration",
                "description": "",
                "operationId": "updateIteration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Iteration"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Iteration"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/changes": {
            "get": {
                "tags": [
                    "changes"
                ],
                "summary": "GetChanges",
                "description": "",
                "operationId": "getChanges",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "compareTo",
                        "description": "",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/IterationChanges"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/changes/{changeId}/{fileTarget}": {
            "get": {
                "tags": [
                    "changes"
                ],
                "summary": "GetContent",
                "description": "",
                "operationId": "getContent",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "changeId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "fileTarget",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "Stream"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/properties": {
            "patch": {
                "tags": [
                    "properties"
                ],
                "summary": "CreateOrUpdateIterationProperties",
                "description": "Create or update review properties collection. PATCH /_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/properties The patch operation can be add, replace or remove. For add operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For replace operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For remove operation, the path cannot be empty. If the path does not exist, no action will be performed.",
                "operationId": "createOrUpdateIterationProperties",
                "consumes": [
                    "application/json-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "JsonPatchDocument"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "PropertiesCollection"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "properties"
                ],
                "summary": "GetIterationProperties",
                "description": "Get iteration properties collection. GET /_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/properties",
                "operationId": "getIterationProperties",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "PropertiesCollection"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/statuses": {
            "post": {
                "tags": [
                    "statuses"
                ],
                "summary": "CreateIterationStatus",
                "description": "Create an iteration status. POST /_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/statuses/{statusId}",
                "operationId": "createIterationStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "statuses"
                ],
                "summary": "GetIterationStatuses",
                "description": "Get all the statuses associated with an iteration. GET /_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/statuses",
                "operationId": "getIterationStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Status"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/statuses/{statusId}": {
            "get": {
                "tags": [
                    "statuses"
                ],
                "summary": "GetIterationStatus",
                "description": "Get the specific iteration status. GET /_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/statuses/{statusId}",
                "operationId": "getIterationStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "statusId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "statuses"
                ],
                "summary": "UpdateIterationStatus",
                "description": "Update an iteration status. PATCH /_apis/codereview/reviews/{reviewId}/iterations/{iterationId}/statuses/{statusId}",
                "operationId": "updateIterationStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "iterationId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "statusId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/properties": {
            "patch": {
                "tags": [
                    "properties"
                ],
                "summary": "CreateOrUpdateReviewProperties",
                "description": "Create or update review properties collection. PATCH /_apis/codereview/reviews/{reviewId}/properties The patch operation can be add, replace or remove. For add operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For replace operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For remove operation, the path cannot be empty. If the path does not exist, no action will be performed.",
                "operationId": "createOrUpdateReviewProperties",
                "consumes": [
                    "application/json-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "JsonPatchDocument"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "PropertiesCollection"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "properties"
                ],
                "summary": "GetReviewProperties",
                "description": "Get review properties collection. GET /_apis/codereview/reviews/{reviewId}/properties",
                "operationId": "getReviewProperties",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "PropertiesCollection"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/reviewers": {
            "post": {
                "tags": [
                    "reviewers"
                ],
                "summary": "AddReviewers",
                "description": "",
                "operationId": "addReviewers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Reviewer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reviewer"
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "reviewers"
                ],
                "summary": "GetReviewers",
                "description": "",
                "operationId": "getReviewers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reviewer"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/reviewers/{reviewerId}": {
            "delete": {
                "tags": [
                    "reviewers"
                ],
                "summary": "DeleteReviewer",
                "description": "",
                "operationId": "deleteReviewer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "reviewerId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "reviewers"
                ],
                "summary": "ReplaceReviewer",
                "description": "",
                "operationId": "replaceReviewer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Reviewer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "reviewerId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Reviewer"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/share": {
            "post": {
                "tags": [
                    "share"
                ],
                "summary": "ShareReview",
                "description": "",
                "operationId": "shareReview",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NotificationContext"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/statuses": {
            "post": {
                "tags": [
                    "statuses"
                ],
                "summary": "CreateReviewStatus",
                "description": "Create a review status. POST /_apis/codereview/reviews/{reviewId}/statuses",
                "operationId": "createReviewStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "statuses"
                ],
                "summary": "GetReviewStatuses",
                "description": "Get all the statuses associated with a review. GET /_apis/codereview/reviews/{reviewId}/statuses",
                "operationId": "getReviewStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Status"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/statuses/{statusId}": {
            "get": {
                "tags": [
                    "statuses"
                ],
                "summary": "GetReviewStatus",
                "description": "Get the specific review status. GET /_apis/codereview/reviews/{reviewId}/statuses/{statusId}",
                "operationId": "getReviewStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "statusId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "statuses"
                ],
                "summary": "UpdateReviewStatus",
                "description": "Update a review status. PATCH /_apis/codereview/reviews/{reviewId}/statuses/{statusId}",
                "operationId": "updateReviewStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "statusId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/threads": {
            "post": {
                "tags": [
                    "threads"
                ],
                "summary": "CreateThread",
                "description": "Create a review comment thread. POST /_apis/CodeReview/reviews/{id}/Threads",
                "operationId": "createThread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CommentThread"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CommentThread"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "threads"
                ],
                "summary": "GetThreads",
                "description": "Get all review comment threads of a review. GET /_apis/CodeReview/reviews/{id}/Threads/ When modifiedSince parameter is passed, fetch threads of a review that were modified after modifiedSince timestamp.",
                "operationId": "getThreads",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "modifiedSince",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "trackingCriteria",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CommentTrackingCriteria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommentThread"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/threads/{threadId}": {
            "get": {
                "tags": [
                    "threads"
                ],
                "summary": "GetThread",
                "description": "Get a review comment thread by id for a review. Return 304 if comment thread hasn't modified based on ifModifiedSince header. GET /_apis/CodeReview/reviews/{id}/Threads/{threadId}",
                "operationId": "getThread",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "trackingCriteria",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CommentTrackingCriteria"
                        }
                    },
                    {
                        "in": "header",
                        "name": "ifModifiedSince",
                        "description": "Fetch latest comment data if it was modified after IfModifiedSince timestamp.",
                        "required": false,
                        "type": "DateTimeOffset"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CommentThread"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "threads"
                ],
                "summary": "UpdateThread",
                "description": "",
                "operationId": "updateThread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CommentThread"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CommentThread"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/threads/{threadId}/comments": {
            "post": {
                "tags": [
                    "comments"
                ],
                "summary": "CreateComment",
                "description": "Create a discussion comment. POST /_apis/CodeReview/reviews/{id}/Threads/{threadId}/comments",
                "operationId": "createComment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "DiscussionComment"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "DiscussionComment"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "comments"
                ],
                "summary": "GetComments",
                "description": "Read all comments for a review comment thread by id for a review. GET /_apis/CodeReview/reviews/{id}/Threads/{threadId}/comments",
                "operationId": "getComments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "DiscussionComment"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/threads/{threadId}/comments/{commentId}": {
            "delete": {
                "tags": [
                    "comments"
                ],
                "summary": "DeleteComment",
                "description": "Soft delete a comment. Deleted(Withdrawn) comments are always returned. Use IsDeleted flag in each comment to detect if its a deleted comment, Delete /_apis/CodeReview/reviews/{id}/Threads/{threadId}/comments/{commentId}",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "commentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int16"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "comments"
                ],
                "summary": "GetComment",
                "description": "Get a comment for a review comment thread by id of a review based on commentId. GET /_apis/CodeReview/reviews/{id}/Threads/{threadId}/comments/{commentId}",
                "operationId": "getComment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "commentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int16"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "DiscussionComment"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "comments"
                ],
                "summary": "UpdateComment",
                "description": "Update a comment. Patch /_apis/CodeReview/reviews/{id}/Threads/{threadId}/comments/{commentId}",
                "operationId": "updateComment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "DiscussionComment"
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "commentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int16"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "DiscussionComment"
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/threads/{threadId}/comments/{commentId}/likes": {
            "post": {
                "tags": [
                    "likes"
                ],
                "summary": "CreateLike",
                "description": "Like a comment in a thread for a review. POST /_apis/CodeReview/reviews/{id}/threads/{id}/comments/{commentId}/likes",
                "operationId": "createLike",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "IdentityRef"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "commentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int16"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "IdentityRef"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "likes"
                ],
                "summary": "GetLikes",
                "description": "Get all likes of a comment in a thread for a review. GET /_apis/CodeReview/reviews/{id}/threads/{id}/comments/{commentId}/likes",
                "operationId": "getLikes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "commentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int16"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "IdentityRef"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviews/{reviewId}/threads/{threadId}/comments/{commentId}/likes/{userId}": {
            "delete": {
                "tags": [
                    "likes"
                ],
                "summary": "DeleteLike",
                "description": "Withdraw like of a comment in a thread for a review. DELETE /_apis/CodeReview/reviews/{id}/threads/{id}/comments/{commentId}/likes/{userId}",
                "operationId": "deleteLike",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "reviewId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "threadId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "commentId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int16"
                    },
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/{project}/_apis/codereview/reviewsbatch": {
            "post": {
                "tags": [
                    "reviewsBatch"
                ],
                "summary": "GetReviewsBatch",
                "description": "Query reviews by sourceArtifactIds. POST /_apis/codereview/reviewsBatch",
                "operationId": "getReviewsBatch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "includeDeleted",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Review"
                            }
                        }
                    }
                }
            }
        },
        "/{project}/_apis/codereview/settings": {
            "post": {
                "tags": [
                    "settings"
                ],
                "summary": "CreateReviewSettings",
                "description": "",
                "operationId": "createReviewSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReviewSettings"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReviewSettings"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "GetReviewSettings",
                "description": "",
                "operationId": "getReviewSettings",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReviewSettings"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "settings"
                ],
                "summary": "UpdateReviewSettings",
                "description": "",
                "operationId": "updateReviewSettings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReviewSettings"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project",
                        "description": "Project ID or project name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReviewSettings"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Attachment": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "author": {
                    "type": "IdentityRef"
                },
                "contentHash": {
                    "description": "Content hash of on-disk representation of file content. Its calculated by the client by using SHA1 hash function.",
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "The description of the attachment, can be null.",
                    "type": "string"
                },
                "displayName": {
                    "description": "The display name of the attachment, can't be null or empty.",
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "properties": {
                    "type": "PropertiesCollection"
                }
            }
        },
        "AttachmentAddedNotification": {
            "type": "AttachmentNotification",
            "properties": {
            }
        },
        "AttachmentDeletedNotification": {
            "type": "AttachmentNotification",
            "properties": {
            }
        },
        "AttachmentNotification": {
            "type": "CodeReviewEventNotification",
            "properties": {
                "attachments": {
                    "description": "The attachment.",
                    "type": "array",
                    "items": {
                        "type": "Attachment"
                    }
                },
                "changeAction": {
                    "description": "Indicates if current notification is due to adding, or deleting attachment(s).",
                    "enum": [
                        "unknown",
                        "added",
                        "updated",
                        "deleted"
                    ]
                }
            }
        },
        "ChangeEntry": {
            "type": "object",
            "properties": {
                "base": {
                    "$ref": "#/definitions/ChangeEntryFileInfo"
                },
                "changeId": {
                    "description": "Uniquely tracks each change in an iteration. Automatically generated in server.",
                    "type": "integer",
                    "format": "int32"
                },
                "changeTrackingId": {
                    "type": "integer",
                    "format": "int32"
                },
                "extendedChangeType": {
                    "description": "Change types as provided by source control. It contains change types that aren't supported by Type field.",
                    "type": "string"
                },
                "iterationId": {
                    "type": "integer",
                    "format": "int32"
                },
                "modified": {
                    "$ref": "#/definitions/ChangeEntryFileInfo"
                },
                "type": {
                    "description": "Specify simplified change types that can be used by client to drive client logic.",
                    "enum": [
                        "none",
                        "add",
                        "edit",
                        "rename",
                        "move",
                        "delete"
                    ]
                }
            }
        },
        "ChangeEntryFileInfo": {
            "type": "ReviewFileContentInfo",
            "properties": {
            }
        },
        "CodeReviewEventNotification": {
            "type": "object",
            "properties": {
                "latestReviewUpdatedTimestamp": {
                    "description": "Last updated timestamp of the review after occurance of the event.",
                    "type": "string",
                    "format": "date-time"
                },
                "priorReviewUpdatedTimestamp": {
                    "description": "Last updated timestamp of the review prior to occurance of the event.",
                    "type": "string",
                    "format": "date-time"
                },
                "projectId": {
                    "description": "The team project Id",
                    "type": "string",
                    "format": "uuid"
                },
                "reviewId": {
                    "description": "Code review Id associated with the notification.",
                    "type": "integer",
                    "format": "int32"
                },
                "sourceArtifactId": {
                    "description": "Artifact id that can relate a code review with an external review. Example: Pull request Id.",
                    "type": "string"
                }
            }
        },
        "CommentNotification": {
            "type": "CodeReviewEventNotification",
            "properties": {
                "thread": {
                    "$ref": "#/definitions/CommentThread"
                }
            }
        },
        "CommentThread": {
            "type": "DiscussionThread",
            "properties": {
                "threadContext": {
                    "description": "Specify thread context such as position in left/right file.",
                    "$ref": "#/definitions/CommentThreadContext"
                }
            }
        },
        "CommentThreadContext": {
            "type": "object",
            "properties": {
                "changeTrackingId": {
                    "description": "Used to track a comment across iterations.",
                    "type": "integer",
                    "format": "int32"
                },
                "filePath": {
                    "description": "File path relative to the root of the repository. It's up to the client to use any path format.",
                    "type": "string"
                },
                "iterationContext": {
                    "description": "Specify comparing iteration Ids when a comment thread is added while comparing 2 iterations.",
                    "$ref": "#/definitions/IterationContext"
                },
                "leftFileEnd": {
                    "description": "Position of last character of the comment in left file.",
                    "$ref": "#/definitions/Position"
                },
                "leftFileStart": {
                    "description": "Position of first character of the comment in left file.",
                    "$ref": "#/definitions/Position"
                },
                "rightFileEnd": {
                    "description": "Position of last character of the comment in right file.",
                    "$ref": "#/definitions/Position"
                },
                "rightFileStart": {
                    "description": "Position of first character of the comment in right file.",
                    "$ref": "#/definitions/Position"
                },
                "trackingCriteria": {
                    "description": "The criteria used to track this thread. If this property is filled out when the thread is returned, then the thread has been tracked from its original location using the given criteria.",
                    "$ref": "#/definitions/CommentTrackingCriteria"
                }
            }
        },
        "CommentTrackingCriteria": {
            "type": "object",
            "properties": {
                "firstComparingIteration": {
                    "description": "The first comparing iteration being viewed. Threads will be tracked if this is greater than 0.",
                    "type": "integer",
                    "format": "int32"
                },
                "secondComparingIteration": {
                    "description": "The second comparing iteration being viewed. Threads will be tracked if this is greater than 0.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DownloadContentsCriteria": {
            "type": "object",
            "properties": {
                "contentHashes": {
                    "description": "If provided, specifies the exact content hashes of the files to fetch. Cannot be combined with other parameters such as IterationIds.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fileType": {
                    "description": "If provided, specifies the file type to fetch. Applicable only for content hashes.",
                    "enum": [
                        "changeEntry",
                        "attachment"
                    ]
                },
                "filterBy": {
                    "description": "If provided, filter iteration files by fetching only base files or modified files. Applicable only for iterations.",
                    "enum": [
                        "base",
                        "modified"
                    ]
                },
                "iterationIds": {
                    "description": "If provided, specifies the iteration ids of the files to fetch. Cannot be combined with Content hashes.",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format: "int32"
                    }
                }
            }
        },
        "EventReviewer": {
            "type": "Reviewer",
            "properties": {
                "isRequiredKind": {
                    "type": "boolean"
                },
                "voteDescription": {
                    "description": "Text representation of vote. This can be null if user hasn't voted yet.",
                    "type": "string"
                }
            }
        },
        "Iteration": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "author": {
                    "type": "IdentityRef"
                },
                "changeList": {
                    "type": "array",
                    "items": {
                        "type": "ChangeEntry"
                    }
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isUnpublished": {
                    "type": "boolean"
                },
                "properties": {
                    "type": "PropertiesCollection"
                },
                "reviewId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "type": "Status"
                    }
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "IterationAddedNotification": {
            "type": "IterationNotification",
            "properties": {
            }
        },
        "IterationChanges": {
            "type": "object",
            "properties": {
                "changeEntries": {
                    "type": "array",
                    "items": {
                        "type": "ChangeEntry"
                    }
                },
                "nextSkip": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nextTop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "IterationContext": {
            "type": "object",
            "properties": {
                "firstComparingIteration": {
                    "description": "First comparing iteration Id. Minimum value is 1.",
                    "type": "integer",
                    "format": "int16"
                },
                "secondComparingIteration": {
                    "description": "Second comparing iteration Id. Minimum value is 1.",
                    "type": "integer",
                    "format": "int16"
                }
            }
        },
        "IterationDeletedNotification": {
            "type": "IterationNotification",
            "properties": {
            }
        },
        "IterationNotification": {
            "type": "CodeReviewEventNotification",
            "properties": {
                "iteration": {
                    "description": "The iteration",
                    "$ref": "#/definitions/Iteration"
                }
            }
        },
        "IterationUpdatedNotification": {
            "type": "IterationNotification",
            "properties": {
            }
        },
        "NotificationContext": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Optional user note or message.",
                    "type": "string"
                },
                "receivers": {
                    "description": "Identities of users who will receive a share notification.",
                    "type": "array",
                    "items": {
                        "type": "IdentityRef"
                    }
                },
                "subject": {
                    "description": "Append text to subject of share notification. Ex: Email subject. When missing, server will set to a default.",
                    "type": "string"
                }
            }
        },
        "Position": {
            "type": "object",
            "properties": {
                "line": {
                    "description": "Position line starting with one.",
                    "type": "integer",
                    "format": "int32"
                },
                "offset": {
                    "description": "Position offset starting with zero.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PropertiesNotification": {
            "type": "CodeReviewEventNotification",
            "properties": {
                "resourceId": {
                    "description": "The id of the resource.",
                    "type": "integer",
                    "format": "int32"
                },
                "resourceType": {
                    "description": "The type of the resource that properties are associated with.",
                    "enum": [
                        "unknown",
                        "review",
                        "iteration",
                        "commentThread"
                    ]
                }
            }
        },
        "Review": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "Attachment"
                    }
                },
                "author": {
                    "type": "IdentityRef"
                },
                "completedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "iterations": {
                    "type": "array",
                    "items": {
                        "type": "Iteration"
                    }
                },
                "projectId": {
                    "type": "string",
                    "format": "uuid"
                },
                "properties": {
                    "type": "PropertiesCollection"
                },
                "reviewers": {
                    "type": "array",
                    "items": {
                        "type": "Reviewer"
                    }
                },
                "sourceArtifactId": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "active",
                        "completed",
                        "abandoned"
                    ]
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "type": "Status"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ReviewDeletedNotification": {
            "type": "ReviewNotification",
            "properties": {
                "destroyed": {
                    "type": "boolean"
                }
            }
        },
        "Reviewer": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "identity": {
                    "type": "IdentityRef"
                },
                "iterationId": {
                    "description": "Id of a valid published iteration. Latest iteration where the reviewer had voted. When a reviewer votes, client provided iterationId must be a published iterationId. When null, latest published iterationId is used.",
                    "type": "integer",
                    "format": "int32"
                },
                "kind": {
                    "description": "Specifies reviewer kind. Its set to \"optional\" if not set for a new reviewer.",
                    "enum": [
                        "optional",
                        "required"
                    ]
                },
                "modifiedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "reviewerStateId": {
                    "description": "Specifies reviewer vote. By default, its set to \"No response\" if not set for a new reviewer. If a reviewer has voted on multiple iterations then it provides vote of latest iteration.",
                    "type": "integer",
                    "format": "int16"
                },
                "votedFor": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format: "uuid"
                    }
                },
                "votedForGroups": {
                    "description": "Specifies the groups (if any) for which this reviewer has voted. It will have length > 0 only if the reviewer is a member of other groups and have voted. Voted means having reviewer state other than the initial \"NotStarted\" state.",
                    "type": "array",
                    "items": {
                        "type": "Reviewer"
                    }
                }
            }
        },
        "ReviewersAddedNotification": {
            "type": "ReviewersNotification",
            "properties": {
            }
        },
        "ReviewersNotification": {
            "type": "CodeReviewEventNotification",
            "properties": {
                "changeAction": {
                    "description": "Indicates if current notification is due to adding, updating or deleting reviewer(s).",
                    "enum": [
                        "unknown",
                        "added",
                        "updated",
                        "deleted"
                    ]
                },
                "reviewers": {
                    "description": "Reviewers that got added/updated or deleted.",
                    "type": "array",
                    "items": {
                        "type": "Reviewer"
                    }
                }
            }
        },
        "ReviewersRemovedNotification": {
            "type": "ReviewersNotification",
            "properties": {
            }
        },
        "ReviewersStateUpdatedNotification": {
            "type": "ReviewersNotification",
            "properties": {
            }
        },
        "ReviewerState": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "value": {
                    "type": "integer",
                    "format": "int16"
                }
            }
        },
        "ReviewFileContentInfo": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "flags": {
                    "description": "A generic way to store metadata about a particular change entry content. This information is later used by the IReviewContentProvider to decide how to retrieve the content.",
                    "type": "string",
                    "format": "byte"
                },
                "path": {
                    "type": "string"
                },
                "reviewId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sHA1Hash": {
                    "description": "Content hash of on-disk representation of file content. Its calculated by the client by using SHA1 hash function. Ensure that uploaded file has same encoding as in source control.",
                    "type": "string"
                }
            }
        },
        "ReviewFilesZipContent": {
            "type": "object",
            "properties": {
                "nextSkip": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nextTop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zipStream": {
                    "type": "Stream"
                }
            }
        },
        "ReviewFilesZipContentMetadata": {
            "type": "object",
            "properties": {
                "filesCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "nextSkip": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nextTop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ReviewNotification": {
            "type": "CodeReviewEventNotification",
            "properties": {
                "review": {
                    "description": "The code review payload from the client",
                    "$ref": "#/definitions/Review"
                }
            }
        },
        "ReviewPublishedNotification": {
            "type": "ReviewNotification",
            "properties": {
            }
        },
        "ReviewSearchCriteria": {
            "type": "object",
            "properties": {
                "creatorIdentity": {
                    "type": "IdentityDescriptor"
                },
                "includeDeleted": {
                    "type": "boolean"
                },
                "maxCreatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "maxUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "minCreatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "minUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderAscending": {
                    "type": "boolean"
                },
                "reviewerIdentity": {
                    "type": "IdentityDescriptor"
                },
                "sourceArtifactPrefix": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "active",
                        "completed",
                        "abandoned"
                    ]
                }
            }
        },
        "ReviewSettings": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "globalSettings": {
                    "description": "The settings shared between all the source control connections.",
                    "type": "JObject"
                },
                "settings": {
                    "description": "The settings that are not shared by all the source control connections.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "JObject"
                    }
                }
            }
        },
        "ReviewUpdatedNotification": {
            "type": "ReviewNotification",
            "properties": {
            }
        },
        "ShareReviewNotification": {
            "type": "ReviewNotification",
            "properties": {
                "shareMessage": {
                    "$ref": "#/definitions/NotificationContext"
                }
            }
        },
        "Status": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "ReferenceLinks"
                },
                "context": {
                    "$ref": "#/definitions/StatusContext"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "The description of the status, can be null.",
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "iterationId": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "enum": [
                        "notSet",
                        "pending",
                        "succeeded",
                        "failed"
                    ]
                },
                "targetUrl": {
                    "description": "The url associated with the status, can be null.",
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "StatusAddedNotification": {
            "type": "StatusNotification",
            "properties": {
            }
        },
        "StatusContext": {
            "type": "object",
            "properties": {
                "genre": {
                    "description": "The genre of the status, can be null.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the status, can't be null or empty.",
                    "type": "string"
                }
            }
        },
        "StatusNotification": {
            "type": "CodeReviewEventNotification",
            "properties": {
                "iterationId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "StatusUpdatedNotification": {
            "type": "StatusNotification",
            "properties": {
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}