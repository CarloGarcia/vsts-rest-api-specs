{
    "swagger": "2.0",
    "info": {
        "title": "FileContainer",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "https://fabrikam-fiber-inc.visualstudio.com",
    "basePath": "",
    "tags": [
        {
            "name": "containers"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "_apis/resources/containers/{containerId}": {
            "post": {
                "tags": [
                    "containers"
                ],
                "summary": "CreateItems",
                "description": "Creates the specified items in in the referenced container.",
                "operationId": "createItems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "type": "Generic"
                    },
                    {
                        "in": "path",
                        "name": "containerId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "A guid representing the scope of the container. This is often the project id.",
                        "required": false,
                        "type": "Guid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileContainerItem"
                            }
                        }
                    }
                }
            }
        },
        "_apis/resources/containers/{containerId}/{itemPath}": {
            "delete": {
                "tags": [
                    "containers"
                ],
                "summary": "DeleteItem",
                "description": "Deletes the specified items in a container.",
                "operationId": "deleteItem",
                "parameters": [
                    {
                        "in": "path",
                        "name": "containerId",
                        "description": "Container Id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "itemPath",
                        "description": "Path to delete.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "A guid representing the scope of the container. This is often the project id.",
                        "required": false,
                        "type": "Guid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "_apis/resources/containers": {
            "get": {
                "tags": [
                    "containers"
                ],
                "summary": "GetContainers",
                "description": "Gets containers filtered by a comma separated list of artifact uris within the same scope, if not specified returns all containers",
                "operationId": "getContainers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "A guid representing the scope of the container. This is often the project id.",
                        "required": false,
                        "type": "Guid"
                    },
                    {
                        "in": "query",
                        "name": "artifactUris",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileContainer"
                            }
                        }
                    }
                }
            }
        },
        "_apis/resources/containers/{containerId}/{*itemPath}": {
            "get": {
                "tags": [
                    "containers"
                ],
                "summary": "GetItems",
                "description": "",
                "operationId": "getItems",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "containerId",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "",
                        "required": false,
                        "type": "Guid"
                    },
                    {
                        "in": "query",
                        "name": "itemPath",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "metadata",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "downloadFileName",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "includeDownloadTickets",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "isShallow",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileContainerItem"
                            }
                        }
                    }
                }
            }
        },
        "_apis/containers/{container}/{*itemPath}": {
            "get": {
                "tags": [
                    "containers"
                ],
                "summary": "BrowseItems",
                "description": "Allow browsing of file ,the contentDisposition is inline and Content-Type is determined by FileExtension",
                "operationId": "browseItems",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "container",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "itemPath",
                        "description": "The path to the item of interest",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileContainerItem"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "FileContainer": {
            "type": "object",
            "properties": {
                "artifactUri": {
                    "description": "Uri of the artifact associated with the container.",
                    "type": "string"
                },
                "contentLocation": {
                    "description": "Download Url for the content of this item.",
                    "type": "string"
                },
                "createdBy": {
                    "description": "Owner.",
                    "type": "Guid"
                },
                "dateCreated": {
                    "description": "Creation date.",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "Description.",
                    "type": "string"
                },
                "id": {
                    "description": "Id.",
                    "type": "integer",
                    "format": "int64"
                },
                "itemLocation": {
                    "description": "Location of the item resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name.",
                    "type": "string"
                },
                "options": {
                    "description": "Options the container can have.",
                    "type": "ContainerOptions",
                    "enum": [
                        "none"
                    ]
                },
                "scopeIdentifier": {
                    "description": "Project Id.",
                    "type": "Guid"
                },
                "securityToken": {
                    "description": "Security token of the artifact associated with the container.",
                    "type": "string"
                },
                "signingKeyId": {
                    "description": "Identifier of the optional encryption key.",
                    "type": "Guid"
                },
                "size": {
                    "description": "Total size of the files in bytes.",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FileContainerItem": {
            "type": "object",
            "properties": {
                "containerId": {
                    "description": "Container Id.",
                    "type": "integer",
                    "format": "int64"
                },
                "contentId": {
                    "type": "array",
                    "items": {
                        "type": "byte"
                    }
                },
                "contentLocation": {
                    "description": "Download Url for the content of this item.",
                    "type": "string"
                },
                "createdBy": {
                    "description": "Creator.",
                    "type": "Guid"
                },
                "dateCreated": {
                    "description": "Creation date.",
                    "type": "string",
                    "format": "date-time"
                },
                "dateLastModified": {
                    "description": "Last modified date.",
                    "type": "string",
                    "format": "date-time"
                },
                "fileEncoding": {
                    "description": "Encoding of the file. Zero if not a file.",
                    "type": "integer",
                    "format": "int32"
                },
                "fileHash": {
                    "description": "Hash value of the file. Null if not a file.",
                    "type": "array",
                    "items": {
                        "type": "byte"
                    }
                },
                "fileLength": {
                    "description": "Length of the file. Zero if not of a file.",
                    "type": "integer",
                    "format": "int64"
                },
                "fileType": {
                    "description": "Type of the file. Zero if not a file.",
                    "type": "integer",
                    "format": "int32"
                },
                "itemLocation": {
                    "description": "Location of the item resource.",
                    "type": "string"
                },
                "itemType": {
                    "description": "Type of the item: Folder, File or String.",
                    "type": "ContainerItemType",
                    "enum": [
                        "any",
                        "folder",
                        "file"
                    ]
                },
                "lastModifiedBy": {
                    "description": "Modifier.",
                    "type": "Guid"
                },
                "path": {
                    "description": "Unique path that identifies the item.",
                    "type": "string"
                },
                "scopeIdentifier": {
                    "description": "Project Id.",
                    "type": "Guid"
                },
                "status": {
                    "description": "Status of the item: Created or Pending Upload.",
                    "type": "ContainerItemStatus",
                    "enum": [
                        "created",
                        "pendingUpload"
                    ]
                },
                "ticket": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}