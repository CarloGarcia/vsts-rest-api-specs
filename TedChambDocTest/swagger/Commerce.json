{
    "swagger": "2.0",
    "info": {
        "title": "Commerce",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "https://fabrikam-fiber-inc.visualstudio.com",
    "basePath": "",
    "tags": [
        {
            "name": "offerMeter"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "_apis/commerce/offermeter": {
            "post": {
                "tags": [
                    "offerMeter"
                ],
                "summary": "CreateOfferMeterDefinition",
                "description": "",
                "operationId": "createOfferMeterDefinition",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OfferMeter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "offerMeter"
                ],
                "summary": "GetOfferMeters",
                "description": "",
                "operationId": "getOfferMeters",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OfferMeter"
                            }
                        }
                    }
                }
            }
        },
        "_apis/commerce/offermeter/{resourceName}": {
            "get": {
                "tags": [
                    "offerMeter"
                ],
                "summary": "GetOfferMeter",
                "description": "Returns resource information like status, committed quantity, included quantity, reset date, etc.",
                "operationId": "getOfferMeter",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceName",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resourceNameResolveMethod",
                        "description": "Method of how to retrieve the resource",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/OfferMeter"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AzureOfferPlanDefinition": {
            "type": "object",
            "properties": {
                "isPublic": {
                    "description": "Determines whether or not this plan is visible to all users",
                    "type": "boolean"
                },
                "meterId": {
                    "description": "The meter id which identifies the offer meter this plan is associated with",
                    "type": "integer",
                    "format": "int32"
                },
                "offerId": {
                    "description": "The offer / product name as defined by the publisher in Azure",
                    "type": "string"
                },
                "offerName": {
                    "description": "The offer / product name as defined by the publisher in Azure",
                    "type": "string"
                },
                "planId": {
                    "description": "The id of the plan, which is usually in the format \"{publisher}:{offer}:{plan}\"",
                    "type": "string"
                },
                "planName": {
                    "description": "The plan name as defined by the publisher in Azure",
                    "type": "string"
                },
                "planVersion": {
                    "description": "The version string which optionally identifies the version of the plan",
                    "type": "string"
                },
                "publisher": {
                    "description": "The publisher of the plan as defined by the publisher in Azure",
                    "type": "string"
                },
                "publisherName": {
                    "description": "get/set publisher name",
                    "type": "string"
                },
                "quantity": {
                    "description": "The number of users associated with the plan as defined in Azure",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ConnectedServerAuthorization": {
            "type": "object",
            "properties": {
                "authorizationUrl": {
                    "description": "Gets or sets the endpoint used to obtain access tokens from the configured token service.",
                    "type": "string"
                },
                "clientId": {
                    "description": "Gets or sets the client identifier for this agent.",
                    "type": "Guid"
                },
                "publicKey": {
                    "description": "Gets or sets the public key used to verify the identity of this connected server.",
                    "type": "string"
                }
            }
        },
        "ConnectedServerPublicKey": {
            "type": "object",
            "properties": {
                "exponent": {
                    "description": "Gets or sets the exponent for the public key.",
                    "type": "array",
                    "items": {
                        "type": "byte"
                    }
                },
                "modulus": {
                    "description": "Gets or sets the modulus for the public key.",
                    "type": "array",
                    "items": {
                        "type": "byte"
                    }
                }
            }
        },
        "OfferMeter": {
            "type": "object",
            "properties": {
                "absoluteMaximumQuantity": {
                    "description": "Gets or sets the value of absolute maximum quantity for the resource",
                    "type": "integer",
                    "format": "int32"
                },
                "assignmentModel": {
                    "description": "Gets or sets the user assignment model.",
                    "type": "OfferMeterAssignmentModel",
                    "enum": [
                        "explicit",
                        "implicit"
                    ]
                },
                "billingEntity": {
                    "description": "Gets or sets the responsible entity/method for billing. Determines how this meter is handled in the backend.",
                    "type": "BillingProvider",
                    "enum": [
                        "selfManaged",
                        "azureStoreManaged"
                    ]
                },
                "billingMode": {
                    "description": "Gets or sets the billing mode of the resource",
                    "type": "ResourceBillingMode",
                    "enum": [
                        "committment",
                        "payAsYouGo"
                    ]
                },
                "billingStartDate": {
                    "description": "Gets or sets the billing start date. If TrialDays + PreviewGraceDays > then, on 'BillingStartDate' it starts the preview Grace and/or trial period.",
                    "type": "string",
                    "format": "date-time"
                },
                "billingState": {
                    "description": "Gets or sets the state of the billing.",
                    "type": "MeterBillingState",
                    "enum": [
                        "free",
                        "paid"
                    ]
                },
                "category": {
                    "description": "Category.",
                    "type": "MeterCategory",
                    "enum": [
                        "legacy",
                        "bundle",
                        "extension"
                    ]
                },
                "committedQuantity": {
                    "description": "Quantity commited by the user, when resources is commitment based.",
                    "type": "integer",
                    "format": "int32"
                },
                "currentQuantity": {
                    "description": "Quantity used by the user, when resources is pay as you go or commitment based.",
                    "type": "integer",
                    "format": "int32"
                },
                "fixedQuantityPlans": {
                    "description": "Gets or sets the map of named quantity varied plans, plans can be purchased that vary only in the number of users included. Null if this offer meter does not support named fixed quantity plans.",
                    "type": "array",
                    "items": {
                        "type": "AzureOfferPlanDefinition"
                    }
                },
                "galleryId": {
                    "description": "Gets or sets Gallery Id.",
                    "type": "string"
                },
                "includedInLicenseLevel": {
                    "description": "Gets or sets the Min license level the offer is free for.",
                    "type": "MinimumRequiredServiceLevel",
                    "enum": [
                        "none",
                        "express",
                        "advanced",
                        "advancedPlus",
                        "stakeholder"
                    ]
                },
                "includedQuantity": {
                    "description": "Quantity included for free.",
                    "type": "integer",
                    "format": "int32"
                },
                "isFirstParty": {
                    "description": "Flag to identify whether the meter is First Party or Third Party based on BillingEntity If the BillingEntity is SelfManaged, the Meter is First Party otherwise its a Third Party Meter",
                    "type": "boolean"
                },
                "maximumQuantity": {
                    "description": "Gets or sets the value of maximum quantity for the resource",
                    "type": "integer",
                    "format": "int32"
                },
                "meterId": {
                    "description": "Meter Id.",
                    "type": "integer",
                    "format": "int32"
                },
                "minimumRequiredAccessLevel": {
                    "description": "Gets or sets the minimum required access level for the meter.",
                    "type": "MinimumRequiredServiceLevel",
                    "enum": [
                        "none",
                        "express",
                        "advanced",
                        "advancedPlus",
                        "stakeholder"
                    ]
                },
                "name": {
                    "description": "Name of the resource",
                    "type": "string"
                },
                "offerScope": {
                    "description": "Gets or sets the offer scope.",
                    "type": "OfferScope",
                    "enum": [
                        "account",
                        "user",
                        "userAccount"
                    ]
                },
                "platformMeterId": {
                    "description": "Gets or sets the identifier representing this meter in commerce platform",
                    "type": "Guid"
                },
                "previewGraceDays": {
                    "description": "Gets or sets the preview grace days.",
                    "type": "string",
                    "format": "byte"
                },
                "renewalFrequency": {
                    "description": "Gets or sets the Renewak Frequency.",
                    "type": "MeterRenewalFrequecy",
                    "enum": [
                        "none",
                        "monthly",
                        "annually"
                    ]
                },
                "status": {
                    "description": "Gets or sets the status.",
                    "type": "MeterState",
                    "enum": [
                        "registered",
                        "active",
                        "retired",
                        "deleted"
                    ]
                },
                "trialCycles": {
                    "description": "Gets or sets the trial cycles.",
                    "type": "integer",
                    "format": "int32"
                },
                "trialDays": {
                    "description": "Gets or sets the trial days.",
                    "type": "string",
                    "format": "byte"
                },
                "unit": {
                    "description": "Measuring unit for this meter.",
                    "type": "string"
                }
            }
        },
        "PurchasableOfferMeter": {
            "type": "object",
            "properties": {
                "currencyCode": {
                    "description": "Currecny code for meter pricing",
                    "type": "string"
                },
                "estimatedRenewalDate": {
                    "description": "Gets or sets the estimated renewal date.",
                    "type": "string",
                    "format": "date-time"
                },
                "localeCode": {
                    "description": "Locale for azure subscription",
                    "type": "string"
                },
                "meterPricing": {
                    "description": "Gets or sets the meter pricing (GraduatedPrice)",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "offerMeterDefinition": {
                    "description": "Gets or sets the offer meter definition.",
                    "$ref": "#/definitions/OfferMeter"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}