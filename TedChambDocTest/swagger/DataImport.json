{
    "swagger": "2.0",
    "info": {
        "title": "DataImport",
        "description": "",
        "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
        "contact": {
            "name": "nugetvss",
            "email": "nugetvss@microsoft.com"
        },
        "license": {
            "name": "MICROSOFT SOFTWARE LICENSE TERMS",
            "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
        },
        "version": "3.1"
    },
    "host": "fabrikam-fiber-inc.visualstudio.com",
    "basePath": "/",
    "tags": [
        {
            "name": "dataImport"
        },
        {
            "name": "dataImportActivate"
        },
        {
            "name": "dataImportDehydrate"
        },
        {
            "name": "dataImportHostMove"
        },
        {
            "name": "dataImportRemove"
        }
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "pat": {
            "type": "basic",
            "description": "Personal access token"
        }
    },
    "security": [
        {
            "pat": []
        }
    ], 
    "paths": {
        "/_apis/dataimport": {
            "post": {
                "tags": [
                    "dataImport"
                ],
                "summary": "QueueDatabaseImportJob",
                "description": "",
                "operationId": "queueDatabaseImportJob",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/databaseDataImportRequest"
                        }
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/dataimport/{requestId}": {
            "delete": {
                "tags": [
                    "dataImport"
                ],
                "summary": "CancelDataImportJob",
                "description": "",
                "operationId": "cancelDataImportJob",
                "parameters": [
                    {
                        "in": "path",
                        "name": "requestId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "dataImport"
                ],
                "summary": "GetDataImportRequestStatus",
                "description": "",
                "operationId": "getDataImportRequestStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "requestId",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/dataImportRequestStatus"
                        }
                    }
                }
            }
        },
        "/_apis/dataimportactivate": {
            "post": {
                "tags": [
                    "dataImportActivate"
                ],
                "summary": "QueueActivateImportJob",
                "description": "",
                "operationId": "queueActivateImportJob",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/activateDataImportRequest"
                        }
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/dataimportdehydrate": {
            "post": {
                "tags": [
                    "dataImportDehydrate"
                ],
                "summary": "QueueDataImportDehydrateJob",
                "description": "",
                "operationId": "queueDataImportDehydrateJob",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dataImportDehydrateRequest"
                        }
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/dataimporthostmove": {
            "post": {
                "tags": [
                    "dataImportHostMove"
                ],
                "summary": "QueueHostMoveImportJob",
                "description": "",
                "operationId": "queueHostMoveImportJob",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hostMoveDataImportRequest"
                        }
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/_apis/dataimportremove": {
            "post": {
                "tags": [
                    "dataImportRemove"
                ],
                "summary": "QueueRemoveImportJob",
                "description": "",
                "operationId": "queueRemoveImportJob",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/removeDataImportRequest"
                        }
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "definitions": {
        "activateDataImportRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkDataImportRequest"
                }
            ],
            "properties": {
                "hostToMovePostImport": {
                    "description": "Which host (if any should be moved) the move should have already happened.",
                    "enum": [
                        "none",
                        "account",
                        "collection",
                        "both"
                    ]
                },
                "targetDatabaseDowngradeSize": {
                    "description": "When moving the Account to the Target Database, the Target Database will be preserved And will need to be downgraded, this is the size to downgrade it too. It should be values from DatabaseServiceObjective enum",
                    "type": "string"
                }
            }
        },
        "completeReparentAccountRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkReparentAccountRequest"
                }
            ],
            "properties": {
            }
        },
        "databaseDataImportRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkDataImportRequest"
                }
            ],
            "properties": {
                "connectionString": {
                    "description": "Read only connection string to the source database.",
                    "type": "string"
                },
                "skipFileContentImport": {
                    "description": "When true, the file content is imported, otherwise empty files will be created.",
                    "type": "boolean"
                },
                "skipPostImportValidation": {
                    "description": "When true, no post import validation checks are done.",
                    "type": "boolean"
                }
            }
        },
        "dataImportDehydrateRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkDataImportRequest"
                }
            ],
            "properties": {
            }
        },
        "dataImportPackage": {
            "type": "object",
            "properties": {
                "properties": {
                    "type": "string",
                    "format": "propertiesCollection"
                },
                "source": {
                    "$ref": "#/definitions/dataImportSource"
                },
                "target": {
                    "$ref": "#/definitions/dataImportTarget"
                },
                "validationData": {
                    "type": "string",
                    "format": "propertiesCollection"
                }
            }
        },
        "dataImportRequestStatus": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/servicingOrchestrationRequestStatus"
                }
            ],
            "properties": {
            }
        },
        "dataImportSource": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "string",
                    "format": "propertiesCollection"
                },
                "location": {
                    "type": "string"
                },
                "properties": {
                    "type": "string",
                    "format": "propertiesCollection"
                }
            }
        },
        "dataImportTarget": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "properties": {
                    "type": "string",
                    "format": "propertiesCollection"
                }
            }
        },
        "finalizeReparentAccountRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkReparentAccountRequest"
                }
            ],
            "properties": {
            }
        },
        "frameworkDataImportRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkServicingOrchestrationRequest"
                }
            ],
            "properties": {
            }
        },
        "frameworkReparentAccountRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkServicingOrchestrationRequest"
                }
            ],
            "properties": {
                "originalOrganizationId": {
                    "type": "string",
                    "format": "uuid"
                },
                "targetOrganizationId": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "frameworkServicingOrchestrationRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/servicingOrchestrationRequest"
                }
            ],
            "properties": {
                "hostId": {
                    "description": "Host Id this request is targeting",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "hostMoveDataImportRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkDataImportRequest"
                }
            ],
            "properties": {
                "collectionHostId": {
                    "description": "Host Id of the collection we are importing. OBSOLETE (remove after M100)  TODO: TAKS 625726 - remove in M105",
                    "type": "string",
                    "format": "uuid"
                },
                "hostToMove": {
                    "description": "Which host to move during this request",
                    "enum": [
                        "none",
                        "account",
                        "collection",
                        "both"
                    ]
                },
                "hostToMovePostImport": {
                    "description": "Describes which host (or hosts) will be moved during the entire import.",
                    "enum": [
                        "none",
                        "account",
                        "collection",
                        "both"
                    ]
                },
                "neighborHostId": {
                    "description": "When HostToMovePostImport is Both, this is the Host Id that will be used to select Database to move them too.",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "initializeReparentAccountRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkReparentAccountRequest"
                }
            ],
            "properties": {
            }
        },
        "performReparentAccountRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkReparentAccountRequest"
                }
            ],
            "properties": {
            }
        },
        "propertyCollection": {
            "type": "object",
            "allOf": [
                {
                    "type": "array"
                }
            ],
            "properties": {
            }
        },
        "propertyPair": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "removeDataImportRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkDataImportRequest"
                }
            ],
            "properties": {
            }
        },
        "rollbackReparentAccountRequest": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/frameworkReparentAccountRequest"
                }
            ],
            "properties": {
            }
        },
        "servicingOrchestrationRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "description": "The Servicing Job Id used to process this particular request",
                    "type": "string",
                    "format": "uuid"
                },
                "properties": {
                    "description": "Property bag for the custom data",
                    "$ref": "#/definitions/propertyCollection"
                },
                "requestId": {
                    "description": "Id of the import request (MUST be the same for all activities of the particular import)",
                    "type": "string",
                    "format": "uuid"
                },
                "typeName": {
                    "description": "Full type name of the payload used to construct proper object during the deserialization",
                    "type": "string"
                }
            }
        },
        "servicingOrchestrationRequestStatus": {
            "type": "object",
            "properties": {
                "completedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "completedStepCount": {
                    "type": "integer",
                    "format": "int16"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "properties": {
                    "$ref": "#/definitions/propertyCollection"
                },
                "requestId": {
                    "type": "string",
                    "format": "uuid"
                },
                "servicingJobId": {
                    "type": "string",
                    "format": "uuid"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "enum": [
                        "created",
                        "queued",
                        "running",
                        "completed",
                        "failed"
                    ]
                },
                "statusMessage": {
                    "type": "string"
                },
                "totalStepCount": {
                    "type": "integer",
                    "format": "int16"
                }
            }
        }
    },
    "parameters": {
        "api-Version": {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
            "required": true,
            "type": "string"
        }
    },
    "externalDocs": {
        "description": "Visual Studio Team Services REST APIs",
        "url": "https://www.visualstudio.com/docs/integrate/api/overview"
    } 
}