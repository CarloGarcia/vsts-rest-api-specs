{
  "swagger": "2.0",
  "info": {
    "title": "DataImport",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "3.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "basePath": "/",
  "tags": [
    {
      "name": "dataImport"
    },
    {
      "name": "dataImportActivate"
    },
    {
      "name": "dataImportDehydrate"
    },
    {
      "name": "dataImportHostMove"
    },
    {
      "name": "dataImportRemove"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/dataimport": {
      "post": {
        "tags": [
          "dataImport"
        ],
        "summary": "QueueDatabaseImportJob",
        "description": "",
        "operationId": "queueDatabaseImportJob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseDataImportRequest"
            }
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/dataimport/{requestId}": {
      "delete": {
        "tags": [
          "dataImport"
        ],
        "summary": "CancelDataImportJob",
        "description": "",
        "operationId": "cancelDataImportJob",
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "dataImport"
        ],
        "summary": "GetDataImportRequestStatus",
        "description": "",
        "operationId": "getDataImportRequestStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataImportRequestStatus"
            }
          }
        }
      }
    },
    "/_apis/dataimportactivate": {
      "post": {
        "tags": [
          "dataImportActivate"
        ],
        "summary": "QueueActivateImportJob",
        "description": "",
        "operationId": "queueActivateImportJob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivateDataImportRequest"
            }
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/dataimportdehydrate": {
      "post": {
        "tags": [
          "dataImportDehydrate"
        ],
        "summary": "QueueDataImportDehydrateJob",
        "description": "",
        "operationId": "queueDataImportDehydrateJob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataImportDehydrateRequest"
            }
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/dataimporthostmove": {
      "post": {
        "tags": [
          "dataImportHostMove"
        ],
        "summary": "QueueHostMoveImportJob",
        "description": "",
        "operationId": "queueHostMoveImportJob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostMoveDataImportRequest"
            }
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/_apis/dataimportremove": {
      "post": {
        "tags": [
          "dataImportRemove"
        ],
        "summary": "QueueRemoveImportJob",
        "description": "",
        "operationId": "queueRemoveImportJob",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveDataImportRequest"
            }
          },
          {
            "in": "query",
            "name": "validateOnly",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "ActivateDataImportRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/frameworkDataImportRequest"
        }
      ],
      "properties": {
        "hostToMovePostImport": {
          "description": "Which host (if any should be moved) the move should have already happened.",
          "enum": [
            "none",
            "account",
            "collection",
            "both"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Cloud.WebApi.DataImportHostMove"
          }
        },
        "keepRegistryData": {
          "description": "Tells to preserve registry settings for this import (used later during the dry-run import removal)",
          "type": "boolean"
        },
        "runType": {
          "description": "Dry Run or Production Run",
          "enum": [
            "none",
            "dryRun",
            "productionRun"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Cloud.WebApi.DataImportRunType"
          }
        },
        "targetDatabaseDowngradeSize": {
          "description": "When moving the Account to the Target Database, the Target Database will be preserved And will need to be downgraded, this is the size to downgrade it too. It should be values from DatabaseServiceObjective enum",
          "type": "string"
        }
      }
    },
    "DatabaseDataImportRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/frameworkDataImportRequest"
        }
      ],
      "properties": {
        "connectionString": {
          "description": "Read only connection string to the source database.",
          "type": "string"
        },
        "hostToMovePostImport": {
          "description": "Which host (if any should be moved) the move will happen later.",
          "enum": [
            "none",
            "account",
            "collection",
            "both"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Cloud.WebApi.DataImportHostMove"
          }
        },
        "neighborHostId": {
          "description": "When HostToMovePostImport is Both, this is the Host Id that will be used to select Database to move them too.",
          "type": "string",
          "format": "uuid"
        },
        "runType": {
          "description": "Dry Run or Production Run",
          "enum": [
            "none",
            "dryRun",
            "productionRun"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Cloud.WebApi.DataImportRunType"
          }
        },
        "skipFileContentImport": {
          "description": "When true, the file content is imported, otherwise empty files will be created.",
          "type": "boolean"
        },
        "skipPostImportValidation": {
          "description": "When true, no post import validation checks are done.",
          "type": "boolean"
        }
      }
    },
    "DataImportDehydrateRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/frameworkDataImportRequest"
        }
      ],
      "properties": {
      }
    },
    "DataImportRequestStatus": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/servicingOrchestrationRequestStatus"
        }
      ],
      "properties": {
      }
    },
    "FrameworkDataImportRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/frameworkServicingOrchestrationRequest"
        }
      ],
      "properties": {
      }
    },
    "FrameworkServicingOrchestrationRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/servicingOrchestrationRequest"
        }
      ],
      "properties": {
        "hostId": {
          "description": "Host Id this request is targeting",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "HostMoveDataImportRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/frameworkDataImportRequest"
        }
      ],
      "properties": {
        "collectionHostId": {
          "description": "Host Id of the collection we are importing. OBSOLETE (remove after M100)  TODO: TAKS 625726 - remove in M105",
          "type": "string",
          "format": "uuid"
        },
        "hostToMove": {
          "description": "Which host to move during this request",
          "enum": [
            "none",
            "account",
            "collection",
            "both"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Cloud.WebApi.DataImportHostMove"
          }
        },
        "hostToMovePostImport": {
          "description": "Describes which host (or hosts) will be moved during the entire import.",
          "enum": [
            "none",
            "account",
            "collection",
            "both"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Cloud.WebApi.DataImportHostMove"
          }
        },
        "neighborHostId": {
          "description": "When HostToMovePostImport is Both, this is the Host Id that will be used to select Database to move them too.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "PropertyCollection": {
      "type": "object",
      "allOf": [
        {
          "type": "array"
        }
      ],
      "properties": {
      }
    },
    "PropertyPair": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "RemoveDataImportRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/frameworkDataImportRequest"
        }
      ],
      "properties": {
        "ignoreImportStatus": {
          "description": "When \"true\" would perform removal even if import successfully completed",
          "type": "boolean"
        }
      }
    },
    "ServicingOrchestrationRequest": {
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The Servicing Job Id used to process this particular request",
          "type": "string",
          "format": "uuid"
        },
        "properties": {
          "description": "Property bag for the custom data",
          "$ref": "#/definitions/PropertyCollection"
        },
        "requestId": {
          "description": "Id of the import request (MUST be the same for all activities of the particular import)",
          "type": "string",
          "format": "uuid"
        },
        "typeName": {
          "description": "Full type name of the payload used to construct proper object during the deserialization",
          "type": "string"
        }
      }
    },
    "ServicingOrchestrationRequestStatus": {
      "type": "object",
      "properties": {
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "completedStepCount": {
          "type": "integer",
          "format": "int16"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "properties": {
          "$ref": "#/definitions/PropertyCollection"
        },
        "requestId": {
          "type": "string",
          "format": "uuid"
        },
        "servicingJobId": {
          "type": "string",
          "format": "uuid"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "enum": [
            "created",
            "queued",
            "running",
            "completed",
            "failed"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Cloud.WebApi.ServicingOrchestrationStatus"
          }
        },
        "statusMessage": {
          "type": "string"
        },
        "totalStepCount": {
          "type": "integer",
          "format": "int16"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '3.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}