{
  "swagger": "2.0",
  "info": {
    "title": "Reporting",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.0"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.visualstudio.com",
    "parameters": [
      {
        "name": "accountName",
        "description": "The name of the Visual Studio Team Services account.",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  },
  "x-ms-vss-area": "Reporting",
  "basePath": "/",
  "tags": [
    {
      "name": "ChartConfiguration"
    },
    {
      "name": "DataServiceCapabilities"
    },
    {
      "name": "TransformQuery"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/reporting/dataservicecapabilities/{scope}": {
      "get": {
        "tags": [
          "DataServiceCapabilities"
        ],
        "x-ms-vss-resource": "dataServiceCapabilities",
        "x-ms-vss-method": "GetDataServiceCapabilities",
        "description": "",
        "operationId": "DataServiceCapabilities_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scope",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataServiceCapabilitiesResponse"
            }
         }
        }
      }
    },
    "/_apis/reporting/transformquery/{scope}": {
      "post": {
        "tags": [
          "TransformQuery"
        ],
        "x-ms-vss-resource": "transformQuery",
        "x-ms-vss-method": "RunTransformQuery",
        "description": "",
        "operationId": "TransformQuery_RunTransformQuery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransformOptions"
              }
            }
          },
          {
            "in": "path",
            "name": "scope",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransformResult"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/reporting/chartconfiguration": {
      "post": {
        "tags": [
          "ChartConfiguration"
        ],
        "x-ms-vss-resource": "chartConfiguration",
        "x-ms-vss-method": "CreateChartConfiguration",
        "description": "",
        "operationId": "ChartConfiguration_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChartConfiguration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ChartConfigurationResponse"
            }
         }
        }
      },
      "get": {
        "tags": [
          "ChartConfiguration"
        ],
        "x-ms-vss-resource": "chartConfiguration",
        "x-ms-vss-method": "GetChartConfigurations",
        "description": "",
        "operationId": "ChartConfiguration_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "scope",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "groupKey",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChartConfigurationResponse"
              }
            }
         }
        }
      },
      "put": {
        "tags": [
          "ChartConfiguration"
        ],
        "x-ms-vss-resource": "chartConfiguration",
        "x-ms-vss-method": "ReplaceChartConfiguration",
        "description": "",
        "operationId": "ChartConfiguration_ReplaceChartConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChartConfiguration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ChartConfigurationResponse"
            }
         }
        }
      }
    },
    "/{project}/_apis/reporting/chartconfiguration/{id}": {
      "delete": {
        "tags": [
          "ChartConfiguration"
        ],
        "x-ms-vss-resource": "chartConfiguration",
        "x-ms-vss-method": "DeleteChartConfiguration",
        "description": "",
        "operationId": "ChartConfiguration_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      },
      "get": {
        "tags": [
          "ChartConfiguration"
        ],
        "x-ms-vss-resource": "chartConfiguration",
        "x-ms-vss-method": "GetChartConfiguration",
        "description": "",
        "operationId": "ChartConfiguration_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ChartConfigurationResponse"
            }
         }
        }
      }
    }
  },
  "definitions": {
    "AggregatedRecord": {
      "description": "Represents a single data point processed from a DataTransformer",
      "type": "object",
      "properties": {
        "group": {
          "type": "object"
        },
        "measure": {
          "type": "string",
          "format": "Single"
        },
        "series": {
          "type": "object"
        }
      }
    },
    "ChartConfiguration": {
      "description": "Chart configuration metadata defining a renderable chart",
      "type": "object",
      "properties": {
        "chartId": {
          "type": "string",
          "format": "uuid"
        },
        "chartType": {
          "description": "The type of chart visualization/renderer to employ on client.",
          "type": "string"
        },
        "groupKey": {
          "description": "Uniquely describes a set \"grouped\" charts in terms of relation to a common entity.  For WIT, a set of charts referencing a stored Query GUID are all \"owned\" and discoverable in relation to that Query.",
          "type": "string"
        },
        "scope": {
          "description": "Describes a feature \"scope\". Scope information is required by charting to properly route REST requests to particular feature implementations.",
          "type": "string"
        },
        "title": {
          "description": "The textual title of the chart.",
          "type": "string"
        },
        "transformOptions": {
          "description": "The options for \"Transforming\" chart data by \"filtering\" data from feature, and \"tabulating\" that data.",
          "$ref": "#/definitions/TransformOptions"
        },
        "userColors": {
          "description": "A set of colors bound to known chart group values in the chart",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColorConfiguration"
          }
        }
      }
    },
    "ChartConfigurationResponse": {
      "description": "Response from RestAPI when saving and editing Chart Configurations",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChartingRestResponseBase"
        }
      ],
      "properties": {
        "chartConfiguration": {
          "description": "The saved Chart Configuration",
          "$ref": "#/definitions/ChartConfiguration"
        }
      }
    },
    "ChartingRestResponseBase": {
      "description": "Encapsulates Rest response policy currently implemented at Charting scope.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI that can GET this element",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ColorConfiguration": {
      "description": "Defines a set of user colors for a specific chart",
      "type": "object",
      "properties": {
        "backgroundColor": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "DataServiceCapabilities": {
      "description": "Read-only manifest of Capabilities supported within the active charting scope.",
      "type": "object",
      "properties": {
        "fields": {
          "description": "The set of supported Fields for Grouping and Aggregation option selection.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldInfo"
          }
        },
        "historyRanges": {
          "description": "The set of supported Range options.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameLabelPair"
          }
        },
        "numericalAggregationFunctions": {
          "description": "The describes the set of numerical Aggregration Functions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameLabelPair"
          }
        },
        "pluralArtifactName": {
          "description": "Provides localized plural name for the artifacts being charted, for Chart labelling ie-\"14 {X}\", and describing count aggregation in UI or on aggregation selection \"Count of {X}\", for which no field applies.",
          "type": "string"
        },
        "scope": {
          "description": "Scope name for the chart data provider supporting these capabilities.",
          "type": "string"
        }
      }
    },
    "DataServiceCapabilitiesResponse": {
      "description": "Response from RestAPI when operating on DataService Capabilities",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChartingRestResponseBase"
        }
      ],
      "properties": {
        "dataServiceCapabilities": {
          "$ref": "#/definitions/DataServiceCapabilities"
        }
      }
    },
    "FieldInfo": {
      "description": "Describes a Field for use on a chart.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NameLabelPair"
        }
      ],
      "properties": {
        "isAggregatable": {
          "description": "Can the field be aggregated with treatment as a numerical value?",
          "type": "boolean"
        },
        "isGroupable": {
          "description": "Can the field be meaningfully used for grouping?",
          "type": "boolean"
        }
      }
    },
    "Measure": {
      "description": "The aggregating function to apply and which column should be aggregated in a data set",
      "type": "object",
      "properties": {
        "aggregation": {
          "description": "Type of Aggregation to apply to the field",
          "type": "string"
        },
        "propertyName": {
          "description": "Data Model Property in the measure",
          "type": "string"
        }
      }
    },
    "NameLabelPair": {
      "description": "Used for describing, presenting and identifying from sets data service capabilities",
      "type": "object",
      "properties": {
        "labelText": {
          "description": "User facing label for client side presentation.",
          "type": "string"
        },
        "name": {
          "description": "Invariant name for unique recognition at scope of a charting provider.",
          "type": "string"
        }
      }
    },
    "OrderBy": {
      "description": "The ordering direction and property which determines the ordering",
      "type": "object",
      "properties": {
        "direction": {
          "description": "The ordering direction",
          "type": "string"
        },
        "propertyName": {
          "description": "The ordering property name",
          "type": "string"
        }
      }
    },
    "TransformOptions": {
      "description": "Defines a means of filtering and transforming a dataset",
      "type": "object",
      "properties": {
        "filter": {
          "description": "Describes feature-aware means of \"querying\" an initial data set. A Query Guid is used by the main WIT provider feature implementation.",
          "type": "string"
        },
        "filterContext": {
          "description": "Describes a feature-aware set of parameters to aid in querying the initial data set. Unlike all other options - this aspect is impermanent/contextual to the client state. WIT uses this to pass WIT query context info like @me, @project value state.",
          "type": "object"
        },
        "groupBy": {
          "description": "Specifies a field with a discrete set of values, for use to group together related data. ie- Priority, AssignedTo, or State",
          "type": "string"
        },
        "historyRange": {
          "description": "Specifies how the data set should be sampled over time. Empty == a transform which will just collect samples at the time of the request. Note: The original Charting implementation treats sampled dates as a grouped field. This means that Trend charts can only be stacked/grouped with 0-1 other dimension, where snapshot charts can use both.",
          "type": "string"
        },
        "measure": {
          "description": "Describes what value to measure against, and how that provided data should be tabulated.",
          "$ref": "#/definitions/Measure"
        },
        "orderBy": {
          "description": "Describes how chart data should be ordered for all groupable dimensions... Except time/History, which ignores this, and always sorts in ascending order.",
          "$ref": "#/definitions/OrderBy"
        },
        "series": {
          "description": "A 2nd field dimension to specify grouping of related data.",
          "type": "string"
        },
        "transformId": {
          "description": "Uniquely identifies *persisted* Transform Data between client, AT and DT. This is determined by the server when persisting a transform/chart. It is irrelevant for standalone transform requests.",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TransformResult": {
      "description": "The result of a single transform",
      "type": "object",
      "properties": {
        "areHistoryOptionsUnmodified": {
          "description": "Indicates if options for this Transform result reflect the state originally supplied from the request. In legacy charting implementation, a History field was injected to act as Series or Group By option.",
          "type": "boolean"
        },
        "options": {
          "description": "The Transform Options that yielded the records of this result",
          "$ref": "#/definitions/TransformOptions"
        },
        "records": {
          "description": "An IEnumerable of the actual results of the transform",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AggregatedRecord"
          }
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.0-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}