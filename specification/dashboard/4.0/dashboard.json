{
  "swagger": "2.0",
  "info": {
    "title": "Dashboard",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.visualstudio.com",
    "parameters": [
      {
        "name": "accountName",
        "description": "The name of the Visual Studio Team Services account.",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  },
  "x-ms-vss-area": "Dashboard",
  "basePath": "/",
  "tags": [
    {
      "name": "Dashboards",
      "description": "Controller for CRUD operations on dashboards"
    },
    {
      "name": "Widgets",
      "description": "Controller for CRUD operations on widgets"
    },
    {
      "name": "Widget Types",
      "description": "Controller for exposing Read-only WidgetTypes"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/dashboard/widgettypes": {
      "get": {
        "tags": [
          "Widget Types"
        ],
        "x-ms-vss-resource": "widgetTypes",
        "x-ms-vss-method": "GetWidgetTypes",
        "x-ms-preview": true,
        "description": "Returns available widgets in alphabetical order.",
        "operationId": "Get Widget Types",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$scope",
            "description": "",
            "required": true,
            "type": "string",
            "format": "WidgetScope"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WidgetTypesResponse"
            }
         }
        }
      }
    },
    "/_apis/dashboard/widgettypes/{contributionId}": {
      "get": {
        "tags": [
          "Widget Types"
        ],
        "x-ms-vss-resource": "widgetTypes",
        "x-ms-vss-method": "GetWidgetMetadata",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Get Widget Metadata",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contributionId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WidgetMetadataResponse"
            }
         }
        }
      }
    },
    "/{project}/{team}/_apis/dashboard/dashboards": {
      "post": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "CreateDashboard",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "GetDashboards",
        "x-ms-preview": true,
        "description": "",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardGroup"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards",
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "ReplaceDashboards",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Replace Dashboards",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardGroup"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardGroup"
            }
         }
        }
      }
    },
    "/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}": {
      "delete": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "DeleteDashboard",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Delete",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "GetDashboard",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards",
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Dashboards"
        ],
        "x-ms-vss-resource": "dashboards",
        "x-ms-vss-method": "ReplaceDashboard",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Replace Dashboard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
         }
        }
      }
    },
    "/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets": {
      "post": {
        "tags": [
          "Widgets"
        ],
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "CreateWidget",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Widgets"
        ],
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "GetWidgets",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Get Widgets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "eTag",
            "description": "Dashboard Widgets Version",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            },
            "headers": {
               "ETag": {
                 "type": "string"
               }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards",
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Widgets"
        ],
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "ReplaceWidgets",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Replace Widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "eTag",
            "description": "Dashboard Widgets Version",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            },
            "headers": {
               "ETag": {
                 "type": "string"
               }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Widgets"
        ],
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "UpdateWidgets",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Update Widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "eTag",
            "description": "Dashboard Widgets Version",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            },
            "headers": {
               "ETag": {
                 "type": "string"
               }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ]
      }
    },
    "/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets/{widgetId}": {
      "delete": {
        "tags": [
          "Widgets"
        ],
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "DeleteWidget",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "widgetId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Widgets"
        ],
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "GetWidget",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Get Widget",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "widgetId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards",
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Widgets"
        ],
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "ReplaceWidget",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Replace Widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "widgetId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Widgets"
        ],
        "x-ms-vss-resource": "widgets",
        "x-ms-vss-method": "UpdateWidget",
        "x-ms-preview": true,
        "description": "",
        "operationId": "Update Widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "dashboardId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "widgetId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "team",
            "description": "Team ID or team name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.dashboards_manage"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Dashboard": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "description": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "ownerId": {
          "description": "Owner for a dashboard. For any legacy dashboards, this would be the unique identifier for the team associated with the dashboard.",
          "type": "string",
          "format": "uuid"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "refreshInterval": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Widget"
          }
        }
      }
    },
    "DashboardGroup": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "dashboardEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardGroupEntry"
          }
        },
        "permission": {
          "enum": [
            "none",
            "edit",
            "manage",
            "managePermissions"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Dashboards.WebApi.GroupMemberPermission"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "DashboardGroupEntry": {
      "description": "Dashboard group entry, wraping around Dashboard (needed?)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Dashboard"
        }
      ],
      "properties": {
      }
    },
    "DashboardGroupEntryResponse": {
      "description": "Response from RestAPI when saving and editing DashboardGroupEntry",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DashboardGroupEntry"
        }
      ],
      "properties": {
      }
    },
    "DashboardResponse": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DashboardGroupEntry"
        }
      ],
      "properties": {
      }
    },
    "LightboxOptions": {
      "description": "Lightbox configuration",
      "type": "object",
      "properties": {
        "height": {
          "description": "Height of desired lightbox, in pixels",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "resizable": {
          "description": "True to allow lightbox resizing, false to disallow lightbox resizing, defaults to false.",
          "readOnly": true,
          "type": "boolean"
        },
        "width": {
          "description": "Width of desired lightbox, in pixels",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "SemanticVersion": {
      "description": "versioning for an artifact as described at: http://semver.org/, of the form major.minor.patch.",
      "type": "object",
      "properties": {
        "major": {
          "description": "Major version when you make incompatible API changes",
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "description": "Minor version when you add functionality in a backwards-compatible manner",
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "description": "Patch version when you make backwards-compatible bug fixes",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TeamContext": {
      "description": "The Team Context for an operation.",
      "type": "object",
      "properties": {
        "project": {
          "description": "The team project Id or name.  Ignored if ProjectId is set.",
          "type": "string"
        },
        "projectId": {
          "description": "The Team Project ID.  Required if Project is not set.",
          "type": "string",
          "format": "uuid"
        },
        "team": {
          "description": "The Team Id or name.  Ignored if TeamId is set.",
          "type": "string"
        },
        "teamId": {
          "description": "The Team Id",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Widget": {
      "description": "Widget data",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "allowedSizes": {
          "description": "Refers to the allowed sizes for the widget. This gets populated when user wants to configure the widget",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetSize"
          }
        },
        "artifactId": {
          "description": "Refers to unique identifier of a feature artifact. Used for pinning+unpinning a specific artifact.",
          "type": "string"
        },
        "configurationContributionId": {
          "readOnly": true,
          "type": "string"
        },
        "configurationContributionRelativeId": {
          "readOnly": true,
          "type": "string"
        },
        "contentUri": {
          "readOnly": true,
          "type": "string"
        },
        "contributionId": {
          "description": "The id of the underlying contribution defining the supplied Widget Configuration.",
          "type": "string"
        },
        "dashboard": {
          "description": "Optional partial dashboard content, to support exchanging dashboard-level version ETag for widget-level APIs",
          "$ref": "#/definitions/Dashboard"
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isEnabled": {
          "readOnly": true,
          "type": "boolean"
        },
        "isNameConfigurable": {
          "readOnly": true,
          "type": "boolean"
        },
        "lightboxOptions": {
          "$ref": "#/definitions/LightboxOptions"
        },
        "loadingImageUrl": {
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "$ref": "#/definitions/WidgetPosition"
        },
        "settings": {
          "type": "string"
        },
        "settingsVersion": {
          "$ref": "#/definitions/SemanticVersion"
        },
        "size": {
          "$ref": "#/definitions/WidgetSize"
        },
        "typeId": {
          "readOnly": true,
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WidgetMetadata": {
      "description": "For V1, this is just a pool of definitions describing our possible Widgets.",
      "type": "object",
      "properties": {
        "allowedSizes": {
          "description": "Sizes supported by the Widget.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetSize"
          }
        },
        "analyticsServiceRequired": {
          "description": "Opt-in boolean that indicates if the widget requires the Analytics Service to function. Widgets requiring the analytics service are hidden from the catalog if the Analytics Service is not available.",
          "type": "boolean"
        },
        "catalogIconUrl": {
          "description": "Resource for an icon in the widget catalog.",
          "type": "string"
        },
        "catalogInfoUrl": {
          "description": "Opt-in URL string pointing at widget information. Defaults to extension marketplace URL if omitted",
          "type": "string"
        },
        "configurationContributionId": {
          "description": "The id of the underlying contribution defining the supplied Widget custom configuration UI. Null if custom configuration UI is not available.",
          "type": "string"
        },
        "configurationContributionRelativeId": {
          "description": "The relative id of the underlying contribution defining the supplied Widget custom configuration UI. Null if custom configuration UI is not available.",
          "type": "string"
        },
        "configurationRequired": {
          "description": "Indicates if the widget requires configuration before being added to dashboard.",
          "type": "boolean"
        },
        "contentUri": {
          "description": "Uri for the WidgetFactory to get the widget",
          "type": "string"
        },
        "contributionId": {
          "description": "The id of the underlying contribution defining the supplied Widget.",
          "type": "string"
        },
        "defaultSettings": {
          "description": "Optional default settings to be copied into widget settings",
          "type": "string"
        },
        "description": {
          "description": "Summary information describing the widget.",
          "type": "string"
        },
        "isEnabled": {
          "description": "Widgets can be disabled by the app store.  We'll need to gracefully handle for: - persistence (Allow) - Requests (Tag as disabled, and provide context)",
          "type": "boolean"
        },
        "isNameConfigurable": {
          "description": "Opt-out boolean that indicates if the widget supports widget name/title configuration. Widgets ignoring the name should set it to false in the manifest.",
          "type": "boolean"
        },
        "isVisibleFromCatalog": {
          "description": "Opt-out boolean indicating if the widget is hidden from the catalog.  For V1, only \"pull\" model widgets can be provided from the catalog.",
          "type": "boolean"
        },
        "lightboxOptions": {
          "description": "Opt-in lightbox properties",
          "$ref": "#/definitions/LightboxOptions"
        },
        "loadingImageUrl": {
          "description": "Resource for a loading placeholder image on dashboard",
          "type": "string"
        },
        "name": {
          "description": "User facing name of the widget type. Each widget must use a unique value here.",
          "type": "string"
        },
        "publisherName": {
          "description": "Publisher Name of this kind of widget.",
          "type": "string"
        },
        "supportedScopes": {
          "description": "Data contract required for the widget to function and to work in its container.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "WidgetScope"
          }
        },
        "targets": {
          "description": "Contribution target IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "typeId": {
          "description": "Dev-facing id of this kind of widget.",
          "type": "string"
        }
      }
    },
    "WidgetMetadataResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        },
        "widgetMetadata": {
          "$ref": "#/definitions/WidgetMetadata"
        }
      }
    },
    "WidgetPosition": {
      "description": "",
      "type": "object",
      "properties": {
        "column": {
          "type": "integer",
          "format": "int32"
        },
        "row": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WidgetResponse": {
      "description": "Response from RestAPI when saving and editing Widget",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Widget"
        }
      ],
      "properties": {
      }
    },
    "WidgetSize": {
      "description": "",
      "type": "object",
      "properties": {
        "columnSpan": {
          "type": "integer",
          "format": "int32"
        },
        "rowSpan": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WidgetsVersionedList": {
      "description": "Wrapper class to support HTTP header generation using CreateResponse, ClientHeaderParameter and ClientResponseType in WidgetV2Controller",
      "type": "object",
      "properties": {
        "eTag": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Widget"
          }
        }
      }
    },
    "WidgetTypesResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "uri": {
          "type": "string"
        },
        "widgetTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetMetadata"
          }
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.dashboards": "Grants the ability to read team dashboard information",
        "vso.dashboards_manage": "Grants the ability to manage team dashboard information"
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}