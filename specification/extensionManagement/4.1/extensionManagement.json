{
  "swagger": "2.0",
  "info": {
    "title": "ExtensionManagement",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.1-preview"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.extmgmt.visualstudio.com",
    "parameters": [
      {
        "name": "accountName",
        "description": "The name of the Visual Studio Team Services account.",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  },
  "x-ms-vss-area": "ExtensionManagement",
  "basePath": "/",
  "tags": [
    {
      "name": "Installed Extensions"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/extensionmanagement/installedextensions": {
      "get": {
        "tags": [
          "Installed Extensions"
        ],
        "x-ms-vss-api-version": "4.1-preview.1",
        "x-ms-vss-resource": "installedExtensions",
        "x-ms-vss-method": "GetInstalledExtensions",
        "x-ms-preview": true,
        "description": "List the installed extensions in the account / project collection.",
        "operationId": "List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "includeDisabledExtensions",
            "description": "If true (the default), include disabled extensions in the results.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeErrors",
            "description": "If true, include installed extensions with errors.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "assetTypes",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "in": "query",
            "name": "includeInstallationIssues",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InstalledExtension"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.extension"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/InstalledExtensions/ListInstalledExtensions.json"
            }
        }
      },
      "patch": {
        "tags": [
          "Installed Extensions"
        ],
        "x-ms-vss-api-version": "4.1-preview.1",
        "x-ms-vss-resource": "installedExtensions",
        "x-ms-vss-method": "UpdateInstalledExtension",
        "x-ms-preview": true,
        "description": "Update an installed extension. Typically this API is used to enable or disable an extension.",
        "operationId": "Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstalledExtension"
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InstalledExtension"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.extension_manage"
            ]
          }
        ]
      }
    },
    "/_apis/extensionmanagement/installedextensionsbyname/{publisherName}/{extensionName}": {
      "get": {
        "tags": [
          "Installed Extensions"
        ],
        "x-ms-vss-api-version": "4.1-preview.1",
        "x-ms-vss-resource": "installedExtensionsByName",
        "x-ms-vss-method": "GetInstalledExtensionByName",
        "x-ms-preview": true,
        "description": "Get an installed extension by its publisher and extension name.",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "publisherName",
            "description": "Name of the publisher. Example: \"fabrikam\".",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "extensionName",
            "description": "Name of the extension. Example: \"ops-tools\".",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "assetTypes",
            "description": "",
            "required": false,
            "type": "string",
            "format": "array (string)"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InstalledExtension"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.extension_manage"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/InstalledExtensionsByName/GetInstalledSampleExtension.json"
            }
        }
      },
      "delete": {
        "tags": [
          "Installed Extensions"
        ],
        "x-ms-vss-api-version": "4.1-preview.1",
        "x-ms-vss-resource": "installedExtensionsByName",
        "x-ms-vss-method": "UninstallExtensionByName",
        "x-ms-preview": true,
        "description": "Uninstall the specified extension from the account / project collection.",
        "operationId": "Uninstall Extension By Name",
        "parameters": [
          {
            "in": "path",
            "name": "publisherName",
            "description": "Name of the publisher. Example: \"fabrikam\".",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "extensionName",
            "description": "Name of the extension. Example: \"ops-tools\".",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "reason",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "reasonCode",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.extension_manage"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/InstalledExtensionsByName/UninstallSampleExtension.json"
            }
        }
      }
    },
    "/_apis/extensionmanagement/installedextensionsbyname/{publisherName}/{extensionName}/{version}": {
      "post": {
        "tags": [
          "Installed Extensions"
        ],
        "x-ms-vss-api-version": "4.1-preview.1",
        "x-ms-vss-resource": "installedExtensionsByName",
        "x-ms-vss-method": "InstallExtensionByName",
        "x-ms-preview": true,
        "description": "Install the specified extension into the account / project collection.",
        "operationId": "Install Extension By Name",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "publisherName",
            "description": "Name of the publisher. Example: \"fabrikam\".",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "extensionName",
            "description": "Name of the extension. Example: \"ops-tools\".",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InstalledExtension"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.extension_manage"
            ]
          }
        ],
        "x-ms-examples": {
            "": {
                "$ref": "./httpExamples/InstalledExtensionsByName/InstallSampleExtension.json"
            }
        }
      }
    }
  },
  "definitions": {
    "AcquisitionOperation": {
      "description": "",
      "type": "object",
      "properties": {
        "operationState": {
          "description": "State of the the AcquisitionOperation for the current user",
          "enum": [
            "disallow",
            "allow",
            "completed"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOperationState"
          }
        },
        "operationType": {
          "description": "AcquisitionOperationType: install, request, buy, etc...",
          "enum": [
            "get",
            "install",
            "buy",
            "try",
            "request",
            "none",
            "purchaseRequest"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOperationType"
          }
        },
        "reason": {
          "description": "Optional reason to justify current state. Typically used with Disallow state.",
          "type": "string"
        },
        "reasons": {
          "description": "List of reasons indicating why the operation is not allowed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AcquisitionOperationDisallowReason"
          }
        }
      }
    },
    "AcquisitionOperationDisallowReason": {
      "description": "",
      "type": "object",
      "properties": {
        "message": {
          "description": "User-friendly message clarifying the reason for disallowance",
          "type": "string"
        },
        "type": {
          "description": "Type of reason for disallowance - AlreadyInstalled, UnresolvedDemand, etc.",
          "type": "string"
        }
      }
    },
    "AcquisitionOptions": {
      "description": "Market item acquisition options (install, buy, etc) for an installation target.",
      "type": "object",
      "properties": {
        "defaultOperation": {
          "description": "Default Operation for the ItemId in this target",
          "$ref": "#/definitions/AcquisitionOperation"
        },
        "itemId": {
          "description": "The item id that this options refer to",
          "type": "string"
        },
        "operations": {
          "description": "Operations allowed for the ItemId in this target",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AcquisitionOperation"
          }
        },
        "properties": {
          "description": "Additional properties which can be added to the request.",
          "$ref": "#/definitions/JObject"
        },
        "target": {
          "description": "The target that this options refer to",
          "type": "string"
        }
      }
    },
    "AnonymousObject": {
      "description": "",
      "type": "object",
      "properties": {
      }
    },
    "ClientDataProviderQuery": {
      "description": "A client data provider are the details needed to make the data provider request from the client.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataProviderQuery"
        }
      ],
      "properties": {
        "queryServiceInstanceType": {
          "description": "The Id of the service instance type that should be communicated with in order to resolve the data providers from the client given the query values.",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Contribution": {
      "description": "An individual contribution made by an extension",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ContributionBase"
        }
      ],
      "properties": {
        "constraints": {
          "description": "List of constraints (filters) that should be applied to the availability of this contribution",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContributionConstraint"
          }
        },
        "includes": {
          "description": "Includes is a set of contributions that should have this contribution included in their targets list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties/attributes of this contribution",
          "$ref": "#/definitions/JObject"
        },
        "targets": {
          "description": "The ids of the contribution(s) that this contribution targets. (parent contributions)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Id of the Contribution Type",
          "type": "string"
        }
      }
    },
    "ContributionBase": {
      "description": "Base class shared by contributions and contribution types",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the contribution/type",
          "type": "string"
        },
        "id": {
          "description": "Fully qualified identifier of the contribution/type",
          "type": "string"
        },
        "visibleTo": {
          "description": "VisibleTo can be used to restrict whom can reference a given contribution/type. This value should be a list of publishers or extensions access is restricted too.  Examples: \"ms\" - Means only the \"ms\" publisher can reference this. \"ms.vss-web\" - Means only the \"vss-web\" extension from the \"ms\" publisher can reference this.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContributionConstraint": {
      "description": "Specifies a constraint that can be used to dynamically include/exclude a given contribution",
      "type": "object",
      "properties": {
        "group": {
          "description": "An optional property that can be specified to group constraints together. All constraints within a group are AND'd together (all must be evaluate to True in order for the contribution to be included). Different groups of constraints are OR'd (only one group needs to evaluate to True for the contribution to be included).",
          "type": "integer",
          "format": "int32"
        },
        "inverse": {
          "description": "If true, negate the result of the filter (include the contribution if the applied filter returns false instead of true)",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the IContributionFilter class",
          "type": "string"
        },
        "properties": {
          "description": "Properties that are fed to the contribution filter class",
          "$ref": "#/definitions/JObject"
        },
        "relationships": {
          "description": "Constraints can be optionally be applied to one or more of the relationships defined in the contribution. If no relationships are defined then all relationships are associated with the constraint. This means the default behaviour will elimiate the contribution from the tree completely if the constraint is applied.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContributionNodeQuery": {
      "description": "A query that can be issued for contribution nodes",
      "type": "object",
      "properties": {
        "contributionIds": {
          "description": "The contribution ids of the nodes to find.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeProviderDetails": {
          "description": "Indicator if contribution provider details should be included in the result.",
          "type": "boolean"
        },
        "queryOptions": {
          "description": "Query options tpo be used when fetching ContributionNodes",
          "enum": [
            "none",
            "includeSelf",
            "includeChildren",
            "includeSubTree",
            "includeAll",
            "ignoreConstraints"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionQueryOptions"
          }
        }
      }
    },
    "ContributionNodeQueryResult": {
      "description": "Result of a contribution node query.  Wraps the resulting contribution nodes and provider details.",
      "type": "object",
      "properties": {
        "nodes": {
          "description": "Map of contribution ids to corresponding node.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SerializedContributionNode"
          }
        },
        "providerDetails": {
          "description": "Map of provder ids to the corresponding provider details object.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ContributionProviderDetails"
          }
        }
      }
    },
    "ContributionPropertyDescription": {
      "description": "Description about a property of a contribution type",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the property",
          "type": "string"
        },
        "name": {
          "description": "Name of the property",
          "type": "string"
        },
        "required": {
          "description": "True if this property is required",
          "type": "boolean"
        },
        "type": {
          "description": "The type of value used for this property",
          "enum": [
            "unknown",
            "string",
            "uri",
            "guid",
            "boolean",
            "integer",
            "double",
            "dateTime",
            "dictionary",
            "array",
            "object"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionPropertyType"
          }
        }
      }
    },
    "ContributionProviderDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Friendly name for the provider.",
          "type": "string"
        },
        "name": {
          "description": "Unique identifier for this provider. The provider name can be used to cache the contribution data and refer back to it when looking for changes",
          "type": "string"
        },
        "properties": {
          "description": "Properties associated with the provider",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version": {
          "description": "Version of contributions assoicated with this contribution provider.",
          "type": "string"
        }
      }
    },
    "ContributionType": {
      "description": "A contribution type, given by a json schema",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ContributionBase"
        }
      ],
      "properties": {
        "indexed": {
          "description": "Controls whether or not contributions of this type have the type indexed for queries. This allows clients to find all extensions that have a contribution of this type.  NOTE: Only TrustedPartners are allowed to specify indexed contribution types.",
          "type": "boolean"
        },
        "name": {
          "description": "Friendly name of the contribution/type",
          "type": "string"
        },
        "properties": {
          "description": "Describes the allowed properties for this contribution type",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ContributionPropertyDescription"
          }
        }
      }
    },
    "DataProviderContext": {
      "description": "Contextual information that data providers can examine when populating their data",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Generic property bag that contains context-specific properties that data providers can use when populating their data dictionary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DataProviderExceptionDetails": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AnonymousObject"
        }
      ],
      "properties": {
        "exceptionType": {
          "description": "The type of the exception that was thrown.",
          "readOnly": true,
          "type": "string"
        },
        "message": {
          "description": "Message that is associated with the exception.",
          "readOnly": true,
          "type": "string"
        },
        "stackTrace": {
          "description": "The StackTrace from the exception turned into a string.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DataProviderQuery": {
      "description": "A query that can be issued for data provider data",
      "type": "object",
      "properties": {
        "context": {
          "description": "Contextual information to pass to the data providers",
          "$ref": "#/definitions/DataProviderContext"
        },
        "contributionIds": {
          "description": "The contribution ids of the data providers to resolve",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataProviderResult": {
      "description": "Result structure from calls to GetDataProviderData",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AnonymousObject"
        }
      ],
      "properties": {
        "clientProviders": {
          "description": "This is the set of data providers that were requested, but either they were defined as client providers, or as remote providers that failed and may be retried by the client.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ClientDataProviderQuery"
          }
        },
        "data": {
          "description": "Property bag of data keyed off of the data provider contribution id",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "exceptions": {
          "description": "Set of exceptions that occurred resolving the data providers.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DataProviderExceptionDetails"
          }
        },
        "resolvedProviders": {
          "description": "List of data providers resolved in the data-provider query",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolvedDataProvider"
          }
        },
        "sharedData": {
          "description": "Property bag of shared data that was contributed to by any of the individual data providers",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DataProviderSharedData": {
      "description": "Data bag that any data provider can contribute to. This shared dictionary is returned in the data provider result.",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      ],
      "properties": {
      }
    },
    "ExtensionAcquisitionRequest": {
      "description": "Contract for handling the extension acquisition process",
      "type": "object",
      "properties": {
        "assignmentType": {
          "description": "How the item is being assigned",
          "enum": [
            "none",
            "me",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionRequest.AcquisitionAssignmentType"
          }
        },
        "billingId": {
          "description": "The id of the subscription used for purchase",
          "type": "string"
        },
        "itemId": {
          "description": "The marketplace id (publisherName.extensionName) for the item",
          "type": "string"
        },
        "operationType": {
          "description": "The type of operation, such as install, request, purchase",
          "enum": [
            "get",
            "install",
            "buy",
            "try",
            "request",
            "none",
            "purchaseRequest"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.AcquisitionOperationType"
          }
        },
        "properties": {
          "description": "Additional properties which can be added to the request.",
          "$ref": "#/definitions/JObject"
        },
        "quantity": {
          "description": "How many licenses should be purchased",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExtensionAuditAction": {
      "description": "Represents the state of an extension request",
      "type": "object",
      "properties": {
      }
    },
    "ExtensionAuditLog": {
      "description": "Audit log for an extension",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Collection of audit log entries",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionAuditLogEntry"
          }
        },
        "extensionName": {
          "description": "Extension that the change was made for",
          "type": "string"
        },
        "publisherName": {
          "description": "Publisher that the extension is part of",
          "type": "string"
        }
      }
    },
    "ExtensionAuditLogEntry": {
      "description": "An audit log entry for an extension",
      "type": "object",
      "properties": {
        "auditAction": {
          "description": "Change that was made to extension",
          "type": "string"
        },
        "auditDate": {
          "description": "Date at which the change was made",
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "description": "Extra information about the change",
          "type": "string"
        },
        "updatedBy": {
          "description": "Represents the user who made the change",
          "$ref": "#/definitions/IdentityRef"
        }
      }
    },
    "ExtensionAuthorization": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExtensionBadge": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "imgUri": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "ExtensionDataCollection": {
      "description": "Represents a single collection for extension data documents",
      "type": "object",
      "properties": {
        "collectionName": {
          "description": "The name of the collection",
          "type": "string"
        },
        "documents": {
          "description": "A list of documents belonging to the collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JObject"
          }
        },
        "scopeType": {
          "description": "The type of the collection's scope, such as Default or User",
          "type": "string"
        },
        "scopeValue": {
          "description": "The value of the collection's scope, such as Current or Me",
          "type": "string"
        }
      }
    },
    "ExtensionDataCollectionQuery": {
      "description": "Represents a query to receive a set of extension data collections",
      "type": "object",
      "properties": {
        "collections": {
          "description": "A list of collections to query",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionDataCollection"
          }
        }
      }
    },
    "ExtensionEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "extension": {
          "description": "The extension which has been updated",
          "$ref": "#/definitions/PublishedExtension"
        },
        "extensionVersion": {
          "description": "The current version of the extension that was updated",
          "type": "string"
        },
        "host": {
          "description": "Name of the collection for which the extension was requested",
          "$ref": "#/definitions/ExtensionHost"
        },
        "links": {
          "description": "Gallery host url",
          "$ref": "#/definitions/ExtensionEventUrls"
        },
        "modifiedBy": {
          "description": "Represents the user who initiated the update",
          "$ref": "#/definitions/IdentityRef"
        },
        "updateType": {
          "description": "The type of update that was made",
          "enum": [
            "installed",
            "uninstalled",
            "enabled",
            "disabled",
            "versionUpdated",
            "actionRequired",
            "actionResolved"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionUpdateType"
          }
        }
      }
    },
    "ExtensionEventCallback": {
      "description": "Base class for an event callback for an extension",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The uri of the endpoint that is hit when an event occurs",
          "type": "string"
        }
      }
    },
    "ExtensionEventCallbackCollection": {
      "description": "Collection of event callbacks - endpoints called when particular extension events occur.",
      "type": "object",
      "properties": {
        "postDisable": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension disable has occurred.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "postEnable": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension enable has occurred.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "postInstall": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension install has completed.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "postUninstall": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension uninstall has occurred.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "postUpdate": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension update has occurred.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "preInstall": {
          "description": "Optional.  Defines an endpoint that gets called via a POST reqeust to notify that an extension install is about to occur.  Response indicates whether to proceed or abort.",
          "$ref": "#/definitions/ExtensionEventCallback"
        },
        "versionCheck": {
          "description": "For multi-version extensions, defines an endpoint that gets called via an OPTIONS request to determine the particular version of the extension to be used",
          "$ref": "#/definitions/ExtensionEventCallback"
        }
      }
    },
    "ExtensionEventUrls": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionUrls"
        }
      ],
      "properties": {
        "manageExtensionsPage": {
          "description": "Url of the extension management page",
          "type": "string"
        }
      }
    },
    "ExtensionFile": {
      "description": "",
      "type": "object",
      "properties": {
        "assetType": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "fileId": {
          "type": "integer",
          "format": "int32"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isPublic": {
          "type": "boolean"
        },
        "language": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ExtensionHost": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ExtensionIdentifier": {
      "description": "Represents the component pieces of an extensions fully qualified name, along with the fully qualified name.",
      "type": "object",
      "properties": {
        "extensionName": {
          "description": "The ExtensionName component part of the fully qualified ExtensionIdentifier",
          "type": "string"
        },
        "publisherName": {
          "description": "The PublisherName component part of the fully qualified ExtensionIdentifier",
          "type": "string"
        }
      }
    },
    "ExtensionLicensing": {
      "description": "How an extension should handle including contributions based on licensing",
      "type": "object",
      "properties": {
        "overrides": {
          "description": "A list of contributions which deviate from the default licensing behavior",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LicensingOverride"
          }
        }
      }
    },
    "ExtensionManifest": {
      "description": "Base class for extension properties which are shared by the extension manifest and the extension model",
      "type": "object",
      "properties": {
        "baseUri": {
          "description": "Uri used as base for other relative uri's defined in extension",
          "type": "string"
        },
        "contributions": {
          "description": "List of contributions made by this extension",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contribution"
          }
        },
        "contributionTypes": {
          "description": "List of contribution types defined by this extension",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContributionType"
          }
        },
        "demands": {
          "description": "List of explicit demands required by this extension",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "eventCallbacks": {
          "description": "Collection of endpoints that get called when particular extension events occur",
          "$ref": "#/definitions/ExtensionEventCallbackCollection"
        },
        "fallbackBaseUri": {
          "description": "Secondary location that can be used as base for other relative uri's defined in extension",
          "type": "string"
        },
        "language": {
          "description": "Language Culture Name set by the Gallery",
          "type": "string"
        },
        "licensing": {
          "description": "How this extension behaves with respect to licensing",
          "$ref": "#/definitions/ExtensionLicensing"
        },
        "manifestVersion": {
          "description": "Version of the extension manifest format/content",
          "type": "number",
          "format": "double"
        },
        "scopes": {
          "description": "List of all oauth scopes required by this extension",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceInstanceType": {
          "description": "The ServiceInstanceType(Guid) of the VSTS service that must be available to an account in order for the extension to be installed",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ExtensionPolicy": {
      "description": "Policy with a set of permissions on extension operations",
      "type": "object",
      "properties": {
        "install": {
          "description": "Permissions on 'Install' operation",
          "enum": [
            "none",
            "private",
            "public",
            "preview",
            "released",
            "firstParty",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionPolicyFlags"
          }
        },
        "request": {
          "description": "Permission on 'Request' operation",
          "enum": [
            "none",
            "private",
            "public",
            "preview",
            "released",
            "firstParty",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionPolicyFlags"
          }
        }
      }
    },
    "ExtensionRequest": {
      "description": "A request for an extension (to be installed or have a license assigned)",
      "type": "object",
      "properties": {
        "rejectMessage": {
          "description": "Required message supplied if the request is rejected",
          "type": "string"
        },
        "requestDate": {
          "description": "Date at which the request was made",
          "type": "string",
          "format": "date-time"
        },
        "requestedBy": {
          "description": "Represents the user who made the request",
          "$ref": "#/definitions/IdentityRef"
        },
        "requestMessage": {
          "description": "Optional message supplied by the requester justifying the request",
          "type": "string"
        },
        "requestState": {
          "description": "Represents the state of the request",
          "enum": [
            "open",
            "accepted",
            "rejected"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestState"
          }
        },
        "resolveDate": {
          "description": "Date at which the request was resolved",
          "type": "string",
          "format": "date-time"
        },
        "resolvedBy": {
          "description": "Represents the user who resolved the request",
          "$ref": "#/definitions/IdentityRef"
        }
      }
    },
    "ExtensionRequestEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "extension": {
          "description": "The extension which has been requested",
          "$ref": "#/definitions/PublishedExtension"
        },
        "host": {
          "description": "Information about the host for which this extension is requested",
          "$ref": "#/definitions/ExtensionHost"
        },
        "hostName": {
          "description": "Name of the collection for which the extension was requested",
          "type": "string"
        },
        "links": {
          "description": "Gallery host url",
          "$ref": "#/definitions/ExtensionRequestUrls"
        },
        "request": {
          "description": "The extension request object",
          "$ref": "#/definitions/ExtensionRequest"
        },
        "updateType": {
          "description": "The type of update that was made",
          "enum": [
            "created",
            "approved",
            "rejected",
            "deleted"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestUpdateType"
          }
        }
      }
    },
    "ExtensionRequestsEvent": {
      "description": "",
      "type": "object",
      "properties": {
        "extension": {
          "description": "The extension which has been requested",
          "$ref": "#/definitions/PublishedExtension"
        },
        "host": {
          "description": "Information about the host for which this extension is requested",
          "$ref": "#/definitions/ExtensionHost"
        },
        "links": {
          "description": "Gallery host url",
          "$ref": "#/definitions/ExtensionRequestUrls"
        },
        "requests": {
          "description": "The extension request object",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionRequest"
          }
        },
        "updateType": {
          "description": "The type of update that was made",
          "enum": [
            "created",
            "approved",
            "rejected",
            "deleted"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionRequestUpdateType"
          }
        }
      }
    },
    "ExtensionRequestUrls": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionUrls"
        }
      ],
      "properties": {
        "requestPage": {
          "description": "Link to view the extension request",
          "type": "string"
        }
      }
    },
    "ExtensionShare": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ExtensionState": {
      "description": "The state of an extension",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/InstalledExtensionState"
        }
      ],
      "properties": {
        "extensionName": {
          "type": "string"
        },
        "lastVersionCheck": {
          "description": "The time at which the version was last checked",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "publisherName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ExtensionStatistic": {
      "description": "",
      "type": "object",
      "properties": {
        "statisticName": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ExtensionUrls": {
      "description": "",
      "type": "object",
      "properties": {
        "extensionIcon": {
          "description": "Url of the extension icon",
          "type": "string"
        },
        "extensionPage": {
          "description": "Link to view the extension details page",
          "type": "string"
        }
      }
    },
    "ExtensionVersion": {
      "description": "",
      "type": "object",
      "properties": {
        "assetUri": {
          "type": "string"
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionBadge"
          }
        },
        "fallbackAssetUri": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionFile"
          }
        },
        "flags": {
          "enum": [
            "none",
            "validated"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionVersionFlags"
          }
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "validationResultMessage": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "versionDescription": {
          "type": "string"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "properties": {
        "directoryAlias": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "InstallationTarget": {
      "description": "",
      "type": "object",
      "properties": {
        "maxInclusive": {
          "type": "boolean"
        },
        "maxVersion": {
          "type": "string"
        },
        "minInclusive": {
          "type": "boolean"
        },
        "minVersion": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "targetVersion": {
          "type": "string"
        }
      }
    },
    "InstalledExtension": {
      "description": "Represents a VSTS extension along with its installation state",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExtensionManifest"
        }
      ],
      "properties": {
        "extensionId": {
          "description": "The friendly extension id for this extension - unique for a given publisher.",
          "type": "string"
        },
        "extensionName": {
          "description": "The display name of the extension.",
          "type": "string"
        },
        "files": {
          "description": "This is the set of files available from the extension.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionFile"
          }
        },
        "flags": {
          "description": "Extension flags relevant to contribution consumers",
          "enum": [
            "builtIn",
            "trusted"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionFlags"
          }
        },
        "installState": {
          "description": "Information about this particular installation of the extension",
          "$ref": "#/definitions/InstalledExtensionState"
        },
        "lastPublished": {
          "description": "This represents the date/time the extensions was last updated in the gallery. This doesnt mean this version was updated the value represents changes to any and all versions of the extension.",
          "type": "string",
          "format": "date-time"
        },
        "publisherId": {
          "description": "Unique id of the publisher of this extension",
          "type": "string"
        },
        "publisherName": {
          "description": "The display name of the publisher",
          "type": "string"
        },
        "registrationId": {
          "description": "Unique id for this extension (the same id is used for all versions of a single extension)",
          "type": "string",
          "format": "uuid"
        },
        "version": {
          "description": "Version of this extension",
          "type": "string"
        }
      }
    },
    "InstalledExtensionQuery": {
      "description": "",
      "type": "object",
      "properties": {
        "assetTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "monikers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionIdentifier"
          }
        }
      }
    },
    "InstalledExtensionState": {
      "description": "The state of an installed extension",
      "type": "object",
      "properties": {
        "flags": {
          "description": "States of an installed extension",
          "enum": [
            "none",
            "disabled",
            "builtIn",
            "multiVersion",
            "unInstalled",
            "versionCheckError",
            "trusted",
            "error",
            "needsReauthorization",
            "autoUpgradeError",
            "warning"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionStateFlags"
          }
        },
        "installationIssues": {
          "description": "List of installation issues",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstalledExtensionStateIssue"
          }
        },
        "lastUpdated": {
          "description": "The time at which this installation was last updated",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "InstalledExtensionStateIssue": {
      "description": "Represents an installation issue",
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message",
          "type": "string"
        },
        "source": {
          "description": "Source of the installation issue, for example  \"Demands\"",
          "type": "string"
        },
        "type": {
          "description": "Installation issue type (Warning, Error)",
          "enum": [
            "warning",
            "error"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.InstalledExtensionStateIssueType"
          }
        }
      }
    },
    "JObject": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "JContainer"
        }
      ],
      "properties": {
        "item": {
          "type": "string",
          "format": "JToken"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "LicensingOverride": {
      "description": "Maps a contribution to a licensing behavior",
      "type": "object",
      "properties": {
        "behavior": {
          "description": "How the inclusion of this contribution should change based on licensing",
          "enum": [
            "onlyIfLicensed",
            "onlyIfUnlicensed",
            "alwaysInclude"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ContributionLicensingBehaviorType"
          }
        },
        "id": {
          "description": "Fully qualified contribution id which we want to define licensing behavior for",
          "type": "string"
        }
      }
    },
    "PublishedExtension": {
      "description": "",
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deploymentType": {
          "enum": [
            "exe",
            "msi",
            "vsix",
            "referralLink"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDeploymentTechnology"
          }
        },
        "displayName": {
          "type": "string"
        },
        "extensionId": {
          "type": "string",
          "format": "uuid"
        },
        "extensionName": {
          "type": "string"
        },
        "flags": {
          "enum": [
            "none",
            "disabled",
            "builtIn",
            "validated",
            "trusted",
            "paid",
            "public",
            "multiVersion",
            "system",
            "preview",
            "unpublished",
            "trial"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Gallery.WebApi.PublishedExtensionFlags"
          }
        },
        "installationTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstallationTarget"
          }
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "longDescription": {
          "type": "string"
        },
        "publishedDate": {
          "description": "Date on which the extension was first uploaded.",
          "type": "string",
          "format": "date-time"
        },
        "publisher": {
          "$ref": "#/definitions/PublisherFacts"
        },
        "releaseDate": {
          "description": "Date on which the extension first went public.",
          "type": "string",
          "format": "date-time"
        },
        "sharedWith": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionShare"
          }
        },
        "shortDescription": {
          "type": "string"
        },
        "statistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionStatistic"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionVersion"
          }
        }
      }
    },
    "PublisherFacts": {
      "description": "High-level information about the publisher, like id's and names",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "flags": {
          "enum": [
            "unChanged",
            "none",
            "disabled",
            "verified",
            "serviceFlags"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherFlags"
          }
        },
        "publisherId": {
          "type": "string",
          "format": "uuid"
        },
        "publisherName": {
          "type": "string"
        }
      }
    },
    "RequestedExtension": {
      "description": "A request for an extension (to be installed or have a license assigned)",
      "type": "object",
      "properties": {
        "extensionName": {
          "description": "The unique name of the extension",
          "type": "string"
        },
        "extensionRequests": {
          "description": "A list of each request for the extension",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionRequest"
          }
        },
        "publisherDisplayName": {
          "description": "DisplayName of the publisher that owns the extension being published.",
          "type": "string"
        },
        "publisherName": {
          "description": "Represents the Publisher of the requested extension",
          "type": "string"
        },
        "requestCount": {
          "description": "The total number of requests for an extension",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResolvedDataProvider": {
      "description": "Entry for a specific data provider's resulting data",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AnonymousObject"
        }
      ],
      "properties": {
        "duration": {
          "description": "The total time the data provider took to resolve its data (in milliseconds)",
          "type": "string",
          "format": "Single"
        },
        "error": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Scope": {
      "description": "",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SerializedContributionNode": {
      "description": "Representaion of a ContributionNode that can be used for serialized to clients.",
      "type": "object",
      "properties": {
        "children": {
          "description": "List of ids for contributions which are children to the current contribution.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contribution": {
          "description": "Contribution associated with this node.",
          "$ref": "#/definitions/Contribution"
        },
        "parents": {
          "description": "List of ids for contributions which are parents to the current contribution.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SupportedExtension": {
      "description": "Information about the extension",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Unique Identifier for this extension",
          "type": "string"
        },
        "publisher": {
          "description": "Unique Identifier for this publisher",
          "type": "string"
        },
        "version": {
          "description": "Supported version for this extension",
          "type": "string"
        }
      }
    },
    "UserExtensionPolicy": {
      "description": "Represents the extension policy applied to a given user",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "User display name that this policy refers to",
          "type": "string"
        },
        "permissions": {
          "description": "The extension policy applied to the user",
          "$ref": "#/definitions/ExtensionPolicy"
        },
        "userId": {
          "description": "User id that this policy refers to",
          "type": "string"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.1-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.extension": "Grants the ability to read installed extensions.",
        "vso.extension_manage": "Grants the ability to install, uninstall, and perform other administrative actions on installed extensions.",
        "vso.extension.data": "Grants the ability to read data (settings and documents) stored by installed extensions.",
        "vso.extension.data_write": "Grants the ability to read and write data (settings and documents) stored by installed extensions."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}