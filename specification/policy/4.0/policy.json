{
  "swagger": "2.0",
  "info": {
    "title": "Policy",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.visualstudio.com",
    "parameters": [
      {
        "name": "accountName",
        "description": "The name of the Visual Studio Team Services account.",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  },
  "x-ms-vss-area": "Policy",
  "x-ms-vss-resource-area-id": "fb13a388-40dd-4a04-b530-013a739c72ef",
  "basePath": "/",
  "tags": [
    {
      "name": "Configurations"
    },
    {
      "name": "Evaluations"
    },
    {
      "name": "Revisions",
      "description": "This API provides a way to get policy configuration revisions."
    },
    {
      "name": "Types",
      "description": "This API provides a way to list the available policy types."
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{project}/_apis/policy/configurations": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "GetPolicyConfigurations",
        "description": "",
        "operationId": "Configurations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "scope",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyConfiguration"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/policy/configurations/{configurationId}": {
      "post": {
        "tags": [
          "Configurations"
        ],
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "CreatePolicyConfiguration",
        "description": "",
        "operationId": "Configurations_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "configurationId",
            "description": "",
            "required": true,
            "x-ms-required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
         }
        }
      },
      "delete": {
        "tags": [
          "Configurations"
        ],
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "DeletePolicyConfiguration",
        "description": "",
        "operationId": "Configurations_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "configurationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
         }
        }
      },
      "get": {
        "tags": [
          "Configurations"
        ],
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "GetPolicyConfiguration",
        "description": "",
        "operationId": "Configurations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "configurationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
         }
        }
      },
      "put": {
        "tags": [
          "Configurations"
        ],
        "x-ms-vss-resource": "configurations",
        "x-ms-vss-method": "UpdatePolicyConfiguration",
        "description": "",
        "operationId": "Configurations_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "configurationId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
         }
        }
      }
    },
    "/{project}/_apis/policy/configurations/{configurationId}/revisions": {
      "get": {
        "tags": [
          "Revisions"
        ],
        "x-ms-vss-resource": "revisions",
        "x-ms-vss-method": "GetPolicyConfigurationRevisions",
        "description": "Retrieve all revisions for a given policy.",
        "operationId": "Revisions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "configurationId",
            "description": "The policy configuration ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "The number of revisions to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$skip",
            "description": "The number of revisions to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyConfiguration"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/policy/configurations/{configurationId}/revisions/{revisionId}": {
      "get": {
        "tags": [
          "Revisions"
        ],
        "x-ms-vss-resource": "revisions",
        "x-ms-vss-method": "GetPolicyConfigurationRevision",
        "description": "Retrieve a specific revision of a given policy by ID.",
        "operationId": "Revisions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "configurationId",
            "description": "The policy configuration ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "revisionId",
            "description": "The revision ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
         }
        }
      }
    },
    "/{project}/_apis/policy/evaluations": {
      "get": {
        "tags": [
          "Evaluations"
        ],
        "x-ms-vss-resource": "evaluations",
        "x-ms-vss-method": "GetPolicyEvaluations",
        "description": "",
        "operationId": "Evaluations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "artifactId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeNotApplicable",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyEvaluationRecord"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/policy/evaluations/{evaluationId}": {
      "get": {
        "tags": [
          "Evaluations"
        ],
        "x-ms-vss-resource": "evaluations",
        "x-ms-vss-method": "GetPolicyEvaluation",
        "description": "",
        "operationId": "Evaluations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "evaluationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyEvaluationRecord"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Evaluations"
        ],
        "x-ms-vss-resource": "evaluations",
        "x-ms-vss-method": "RequeuePolicyEvaluation",
        "description": "",
        "operationId": "Evaluations_RequeuePolicyEvaluation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "evaluationId",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyEvaluationRecord"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code_write"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/policy/types": {
      "get": {
        "tags": [
          "Types"
        ],
        "x-ms-vss-resource": "types",
        "x-ms-vss-method": "GetPolicyTypes",
        "description": "Retrieve all available policy types.",
        "operationId": "Types_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyType"
              }
            }
         }
        }
      }
    },
    "/{project}/_apis/policy/types/{typeId}": {
      "get": {
        "tags": [
          "Types"
        ],
        "x-ms-vss-resource": "types",
        "x-ms-vss-method": "GetPolicyType",
        "description": "Retrieve a specific policy type by ID.",
        "operationId": "Types_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "typeId",
            "description": "The policy ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyType"
            }
         }
        }
      }
    }
  },
  "definitions": {
    "IdentityRef": {
      "description": "",
      "type": "object",
      "properties": {
        "directoryAlias": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "JObject": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "JContainer"
        }
      ],
      "properties": {
        "item": {
          "type": "string",
          "format": "JToken"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "format": "JTokenType"
        }
      }
    },
    "PolicyConfiguration": {
      "description": "The full policy configuration with settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VersionedPolicyConfigurationRef"
        }
      ],
      "properties": {
        "_links": {
          "description": "The links to other objects related to this object.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "createdBy": {
          "description": "A reference to the identity that created the policy.",
          "$ref": "#/definitions/IdentityRef"
        },
        "createdDate": {
          "description": "The date and time when the policy was created.",
          "type": "string",
          "format": "date-time"
        },
        "isBlocking": {
          "description": "Indicates whether the policy is blocking.",
          "type": "boolean"
        },
        "isDeleted": {
          "description": "Indicates whether the policy has been (soft) deleted.",
          "type": "boolean"
        },
        "isEnabled": {
          "description": "Indicates whether the policy is enabled.",
          "type": "boolean"
        },
        "settings": {
          "description": "The policy configuration settings.",
          "$ref": "#/definitions/JObject"
        }
      }
    },
    "PolicyConfigurationRef": {
      "description": "Policy configuration reference.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The policy configuration ID.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The policy configuration type.",
          "$ref": "#/definitions/PolicyTypeRef"
        },
        "url": {
          "description": "The URL where the policy configuration can be retrieved.",
          "type": "string"
        }
      }
    },
    "PolicyEvaluationRecord": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "artifactId": {
          "type": "string"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "configuration": {
          "$ref": "#/definitions/PolicyConfiguration"
        },
        "context": {
          "$ref": "#/definitions/JObject"
        },
        "evaluationId": {
          "type": "string",
          "format": "uuid"
        },
        "startedDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "enum": [
            "queued",
            "running",
            "approved",
            "rejected",
            "notApplicable",
            "broken"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Policy.WebApi.PolicyEvaluationStatus"
          }
        }
      }
    },
    "PolicyType": {
      "description": "User-friendly policy type with description (used for querying policy types).",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyTypeRef"
        }
      ],
      "properties": {
        "_links": {
          "description": "The links to other objects related to this object.",
          "$ref": "#/definitions/ReferenceLinks"
        },
        "description": {
          "description": "Detailed description of the policy type.",
          "type": "string"
        }
      }
    },
    "PolicyTypeRef": {
      "description": "Policy type reference.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the policy type.",
          "type": "string"
        },
        "id": {
          "description": "The policy type ID.",
          "type": "string",
          "format": "uuid"
        },
        "url": {
          "description": "The URL where the policy type can be retrieved.",
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "VersionedPolicyConfigurationRef": {
      "description": "A particular revision for a policy configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyConfigurationRef"
        }
      ],
      "properties": {
        "revision": {
          "description": "The policy configuration revision ID.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.code": "Grants the ability to read source code and metadata about commits, changesets, branches, and other version control artifacts. Also grants the ability to get notified about version control events via service hooks.",
        "vso.code_write": "Grants the ability to read, update, and delete source code, access metadata about commits, changesets, branches, and other version control artifacts. Also grants the ability to create and manage pull requests and code reviews and to receive notifications about version control events via service hooks."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}