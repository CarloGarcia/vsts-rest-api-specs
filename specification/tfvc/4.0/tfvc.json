{
  "swagger": "2.0",
  "info": {
    "title": "Tfvc",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.visualstudio.com",
    "parameters": [
      {
        "name": "accountName",
        "description": "The name of the Visual Studio Team Services account.",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  },
  "x-ms-vss-area": "Tfvc",
  "basePath": "/",
  "tags": [
    {
      "name": "Branches"
    },
    {
      "name": "ChangesetChanges"
    },
    {
      "name": "Changesets"
    },
    {
      "name": "ChangesetsBatch"
    },
    {
      "name": "ChangesetWorkItems"
    },
    {
      "name": "ItemBatch"
    },
    {
      "name": "Items"
    },
    {
      "name": "LabelItems"
    },
    {
      "name": "Labels"
    },
    {
      "name": "ShelvesetChanges"
    },
    {
      "name": "Shelvesets"
    },
    {
      "name": "ShelvesetWorkItems"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/tfvc/changesets/{id}/changes": {
      "get": {
        "tags": [
          "ChangesetChanges"
        ],
        "x-ms-vss-resource": "changesetChanges",
        "x-ms-vss-method": "GetChangesetChanges",
        "description": "Retrieve Tfvc changes for a given changeset",
        "operationId": "ChangesetChanges_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "x-ms-required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcChange"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/_apis/tfvc/changesets/{id}/workItems": {
      "get": {
        "tags": [
          "ChangesetWorkItems"
        ],
        "x-ms-vss-resource": "changesetWorkItems",
        "x-ms-vss-method": "GetChangesetWorkItems",
        "description": "",
        "operationId": "ChangesetWorkItems_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "x-ms-required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssociatedWorkItem"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/_apis/tfvc/changesetsbatch": {
      "post": {
        "tags": [
          "ChangesetsBatch"
        ],
        "x-ms-vss-resource": "changesetsBatch",
        "x-ms-vss-method": "GetBatchedChangesets",
        "description": "",
        "operationId": "ChangesetsBatch_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TfvcChangesetsRequestData"
            }
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcChangesetRef"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/_apis/tfvc/labels/{labelId}/items": {
      "get": {
        "tags": [
          "LabelItems"
        ],
        "x-ms-vss-resource": "labelItems",
        "x-ms-vss-method": "GetLabelItems",
        "description": "Get items under a label.",
        "operationId": "LabelItems_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "labelId",
            "description": "Unique identifier of label",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Max number of items to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of items to skip",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcItem"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/_apis/tfvc/shelvesets": {
      "get": {
        "tags": [
          "Shelvesets"
        ],
        "x-ms-vss-resource": "shelvesets",
        "x-ms-vss-method": "GetShelveset",
        "description": "Get a single deep shelveset.",
        "operationId": "Shelvesets_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "shelvesetId",
            "description": "Shelveset's unique ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "requestData",
            "description": "includeDetails, includeWorkItems, maxChangeCount, and maxCommentLength",
            "required": false,
            "type": "string",
            "format": "TfvcShelvesetRequestData"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcShelveset"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/_apis/tfvc/shelvesets/changes": {
      "get": {
        "tags": [
          "ShelvesetChanges"
        ],
        "x-ms-vss-resource": "shelvesetChanges",
        "x-ms-vss-method": "GetShelvesetChanges",
        "description": "Get changes included in a shelveset.",
        "operationId": "ShelvesetChanges_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "shelvesetId",
            "description": "Shelveset's unique ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Max number of changes to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of changes to skip",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcChange"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/_apis/tfvc/shelvesets/workitems": {
      "get": {
        "tags": [
          "ShelvesetWorkItems"
        ],
        "x-ms-vss-resource": "shelvesetWorkItems",
        "x-ms-vss-method": "GetShelvesetWorkItems",
        "description": "Get work items associated with a shelveset.",
        "operationId": "ShelvesetWorkItems_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "shelvesetId",
            "description": "Shelveset's unique ID",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssociatedWorkItem"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/tfvc/branches": {
      "get": {
        "tags": [
          "Branches"
        ],
        "x-ms-vss-resource": "branches",
        "x-ms-vss-method": "GetBranches",
        "description": "Get a collection of branch roots -- first-level children, branches with no parents",
        "operationId": "Branches_GetBranches",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeParent",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeChildren",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLinks",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcBranch"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/tfvc/branches/{path}": {
      "get": {
        "tags": [
          "Branches"
        ],
        "x-ms-vss-resource": "branches",
        "x-ms-vss-method": "GetBranch",
        "description": "Get a single branch hierarchy at the given path with parents or children (if specified)",
        "operationId": "Branches_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeParent",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeChildren",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcBranch"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/tfvc/changesets": {
      "post": {
        "tags": [
          "Changesets"
        ],
        "x-ms-vss-resource": "changesets",
        "x-ms-vss-method": "CreateChangeset",
        "description": "Create a new changeset.",
        "operationId": "Changesets_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TfvcChangeset"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcChangesetRef"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code_write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Changesets"
        ],
        "x-ms-vss-resource": "changesets",
        "x-ms-vss-method": "GetChangesets",
        "description": "Retrieve Tfvc changesets Note: This is a new version of the GetChangesets API that doesn't expose the unneeded queryParams present in the 1.0 version of the API.",
        "operationId": "Changesets_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxCommentLength",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "orderby",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchCriteria",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TfvcChangesetSearchCriteria"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcChangesetRef"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/tfvc/changesets/{id}": {
      "get": {
        "tags": [
          "Changesets"
        ],
        "x-ms-vss-resource": "changesets",
        "x-ms-vss-method": "GetChangeset",
        "description": "Retrieve a Tfvc Changeset",
        "operationId": "Changesets_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxChangeCount",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeDetails",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeWorkItems",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "maxCommentLength",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeSourceRename",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "top",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "orderby",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchCriteria",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TfvcChangesetSearchCriteria"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcChangeset"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/tfvc/itembatch": {
      "post": {
        "tags": [
          "ItemBatch"
        ],
        "x-ms-vss-resource": "itemBatch",
        "x-ms-vss-method": "GetItemsBatch",
        "description": "Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.",
        "operationId": "ItemBatch_GetItemsBatch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/zip",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TfvcItemRequestData"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "array"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/tfvc/items": {
      "get": {
        "tags": [
          "Items"
        ],
        "x-ms-vss-resource": "items",
        "x-ms-vss-method": "GetItems",
        "description": "Get a list of Tfvc items",
        "operationId": "Items_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "scopePath",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "recursionLevel",
            "description": "",
            "required": false,
            "type": "string",
            "format": "VersionControlRecursionType"
          },
          {
            "in": "query",
            "name": "includeLinks",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "versionDescriptor",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TfvcVersionDescriptor"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcItem"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/tfvc/items/{path}": {
      "get": {
        "tags": [
          "Items"
        ],
        "x-ms-vss-resource": "items",
        "x-ms-vss-method": "GetItem",
        "description": "Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.",
        "operationId": "Items_GetItem",
        "produces": [
          "application/octet-stream",
          "text/plain",
          "application/zip",
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileName",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "download",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "scopePath",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "recursionLevel",
            "description": "",
            "required": false,
            "type": "string",
            "format": "VersionControlRecursionType"
          },
          {
            "in": "query",
            "name": "versionDescriptor",
            "description": "",
            "required": false,
            "type": "string",
            "format": "TfvcVersionDescriptor"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcItem"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/tfvc/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "x-ms-vss-resource": "labels",
        "x-ms-vss-method": "GetLabels",
        "description": "Get a collection of shallow label references.",
        "operationId": "Labels_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "requestData",
            "description": "labelScope, name, owner, and itemLabelFilter",
            "required": true,
            "type": "string",
            "format": "TfvcLabelRequestData"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "description": "Max number of labels to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of labels to skip",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcLabelRef"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    },
    "/{project}/_apis/tfvc/labels/{labelId}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "x-ms-vss-resource": "labels",
        "x-ms-vss-method": "GetLabel",
        "description": "Get a single deep label.",
        "operationId": "Labels_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "labelId",
            "description": "Unique identifier of label",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "requestData",
            "description": "maxItemCount",
            "required": true,
            "type": "string",
            "format": "TfvcLabelRequestData"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcLabel"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.code"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "AssociatedWorkItem": {
      "description": "",
      "type": "object",
      "properties": {
        "assignedTo": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "description": "REST url",
          "type": "string"
        },
        "webUrl": {
          "type": "string"
        },
        "workItemType": {
          "type": "string"
        }
      }
    },
    "Change": {
      "description": "",
      "type": "object",
      "properties": {
        "changeType": {
          "enum": [
            "none",
            "add",
            "edit",
            "encoding",
            "rename",
            "delete",
            "undelete",
            "branch",
            "merge",
            "lock",
            "rollback",
            "sourceRename",
            "targetRename",
            "property",
            "all"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlChangeType"
          }
        },
        "item": {
          "type": "string",
          "format": "T"
        },
        "newContent": {
          "$ref": "#/definitions/ItemContent"
        },
        "sourceServerItem": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "CheckinNote": {
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FileContentMetadata": {
      "description": "",
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "encoding": {
          "type": "integer",
          "format": "int32"
        },
        "extension": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "isBinary": {
          "type": "boolean"
        },
        "isImage": {
          "type": "boolean"
        },
        "vsLink": {
          "type": "string"
        }
      }
    },
    "GitForkSyncRequestParameters": {
      "description": "Parameters for creating a fork request",
      "type": "object",
      "properties": {
        "source": {
          "description": "Fully-qualified identifier for the source repository.",
          "$ref": "#/definitions/GlobalGitRepositoryKey"
        },
        "sourceToTargetRefs": {
          "description": "If supplied, the set of ref mappings to use when performing a \"sync\" or create. If missing, all refs will be synchronized.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceToTargetRef"
          }
        }
      }
    },
    "GitRepository": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "createdByForking": {
          "description": "True if the repository was created as a fork",
          "type": "boolean"
        },
        "defaultBranch": {
          "type": "string"
        },
        "forkOptions": {
          "description": "If set, options for creating this repo as a fork of another one. If unset, this repo is unrelated to any existing forks.",
          "$ref": "#/definitions/GitForkSyncRequestParameters"
        },
        "forkParent": {
          "description": "Only set when querying repositories. If set, the \"parent\" fork of this repository.",
          "$ref": "#/definitions/GlobalGitRepositoryKey"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isFork": {
          "description": "True if the repository was created as a fork",
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parentRepository": {
          "$ref": "#/definitions/GitRepositoryRef"
        },
        "project": {
          "$ref": "#/definitions/TeamProjectReference"
        },
        "remoteUrl": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "validRemoteUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GitRepositoryRef": {
      "description": "",
      "type": "object",
      "properties": {
        "collection": {
          "description": "Team Project Collection where this Fork resides",
          "$ref": "#/definitions/TeamProjectCollectionReference"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/TeamProjectReference"
        },
        "remoteUrl": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "GlobalGitRepositoryKey": {
      "description": "Globally unique key for a repository.",
      "type": "object",
      "properties": {
        "collectionId": {
          "type": "string",
          "format": "uuid"
        },
        "projectId": {
          "type": "string",
          "format": "uuid"
        },
        "repositoryId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "IdentityRef": {
      "description": "",
      "type": "object",
      "properties": {
        "directoryAlias": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "isAadIdentity": {
          "type": "boolean"
        },
        "isContainer": {
          "type": "boolean"
        },
        "profileUrl": {
          "type": "string"
        },
        "uniqueName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ItemContent": {
      "description": "",
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "contentType": {
          "enum": [
            "rawText",
            "base64Encoded"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.SourceControl.WebApi.ItemContentType"
          }
        }
      }
    },
    "ItemModel": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "contentMetadata": {
          "$ref": "#/definitions/FileContentMetadata"
        },
        "isFolder": {
          "type": "boolean"
        },
        "isSymLink": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ReferenceLinks": {
      "description": "The class to represent a collection of REST reference links.  Example: { self: { href: \"http://localhost:8080/tfs/DefaultCollection/_apis/wit/workItems/1\" } }",
      "type": "object",
      "properties": {
        "links": {
          "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "SourceToTargetRef": {
      "description": "",
      "type": "object",
      "properties": {
        "sourceRef": {
          "description": "The source ref to copy. For example, refs/heads/master.",
          "type": "string"
        },
        "targetRef": {
          "description": "The target ref to update. For example, refs/heads/master",
          "type": "string"
        }
      }
    },
    "TeamProjectCollectionReference": {
      "description": "Reference object for a TeamProjectCollection.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Collection Id.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Collection Name.",
          "type": "string"
        },
        "url": {
          "description": "Collection REST Url.",
          "type": "string"
        }
      }
    },
    "TeamProjectReference": {
      "description": "Represents a shallow reference to a TeamProject.",
      "type": "object",
      "properties": {
        "abbreviation": {
          "description": "Project abbreviation.",
          "type": "string"
        },
        "description": {
          "description": "The project's description (if any).",
          "type": "string"
        },
        "id": {
          "description": "Project identifier.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Project name.",
          "type": "string"
        },
        "revision": {
          "description": "Project revision.",
          "type": "integer",
          "format": "int64"
        },
        "state": {
          "description": "Project state.",
          "enum": [
            "deleting",
            "new",
            "wellFormed",
            "createPending",
            "all",
            "unchanged",
            "deleted"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Core.WebApi.ProjectState"
          }
        },
        "url": {
          "description": "Url to the full version of the object.",
          "type": "string"
        },
        "visibility": {
          "description": "Project visibility.",
          "enum": [
            "unchanged",
            "private",
            "organization",
            "public"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Core.WebApi.ProjectVisibility"
          }
        }
      }
    },
    "TfvcBranch": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TfvcBranchRef"
        }
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TfvcBranch"
          }
        },
        "mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TfvcBranchMapping"
          }
        },
        "parent": {
          "$ref": "#/definitions/TfvcShallowBranchRef"
        },
        "relatedBranches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TfvcShallowBranchRef"
          }
        }
      }
    },
    "TfvcBranchMapping": {
      "description": "",
      "type": "object",
      "properties": {
        "depth": {
          "type": "string"
        },
        "serverItem": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "TfvcBranchRef": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TfvcShallowBranchRef"
        }
      ],
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "owner": {
          "$ref": "#/definitions/IdentityRef"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "TfvcChange": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "type": "string",
          "format": "Change"
        }
      ],
      "properties": {
        "mergeSources": {
          "description": "List of merge sources in case of rename or branch creation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TfvcMergeSource"
          }
        },
        "pendingVersion": {
          "description": "Version at which a (shelved) change was pended against",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TfvcChangeset": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TfvcChangesetRef"
        }
      ],
      "properties": {
        "accountId": {
          "type": "string",
          "format": "uuid"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TfvcChange"
          }
        },
        "checkinNotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckinNote"
          }
        },
        "collectionId": {
          "type": "string",
          "format": "uuid"
        },
        "hasMoreChanges": {
          "type": "boolean"
        },
        "policyOverride": {
          "$ref": "#/definitions/TfvcPolicyOverrideInfo"
        },
        "teamProjectIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "workItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssociatedWorkItem"
          }
        }
      }
    },
    "TfvcChangesetRef": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "author": {
          "$ref": "#/definitions/IdentityRef"
        },
        "changesetId": {
          "type": "integer",
          "format": "int32"
        },
        "checkedInBy": {
          "$ref": "#/definitions/IdentityRef"
        },
        "comment": {
          "type": "string"
        },
        "commentTruncated": {
          "type": "boolean"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "TfvcChangesetSearchCriteria": {
      "description": "Criteria used in a search for change lists",
      "type": "object",
      "properties": {
        "author": {
          "description": "Alias or display name of user who made the changes",
          "type": "string"
        },
        "followRenames": {
          "description": "Whether or not to follow renames for the given item being queried",
          "type": "boolean"
        },
        "fromDate": {
          "description": "If provided, only include changesets created after this date (string) Think of a better name for this.",
          "type": "string"
        },
        "fromId": {
          "description": "If provided, only include changesets after this changesetID",
          "type": "integer",
          "format": "int32"
        },
        "includeLinks": {
          "description": "Whether to include the _links field on the shallow references",
          "type": "boolean"
        },
        "itemPath": {
          "description": "Path of item to search under",
          "type": "string"
        },
        "toDate": {
          "description": "If provided, only include changesets created before this date (string) Think of a better name for this.",
          "type": "string"
        },
        "toId": {
          "description": "If provided, a version descriptor for the latest change list to include",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TfvcChangesetsRequestData": {
      "description": "",
      "type": "object",
      "properties": {
        "changesetIds": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "commentLength": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "includeLinks": {
          "description": "Whether to include the _links field on the shallow references",
          "type": "boolean"
        }
      }
    },
    "TfvcItem": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ItemModel"
        }
      ],
      "properties": {
        "changeDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionId": {
          "type": "integer",
          "format": "int32"
        },
        "hashValue": {
          "description": "MD5 hash as a base 64 string, applies to files only.",
          "type": "string"
        },
        "isBranch": {
          "type": "boolean"
        },
        "isPendingChange": {
          "type": "boolean"
        },
        "size": {
          "description": "The size of the file, if applicable.",
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TfvcItemDescriptor": {
      "description": "Item path and Version descriptor properties",
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "recursionLevel": {
          "enum": [
            "none",
            "oneLevel",
            "oneLevelPlusNestedEmptyFolders",
            "full"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType"
          }
        },
        "version": {
          "type": "string"
        },
        "versionOption": {
          "enum": [
            "none",
            "previous",
            "useRename"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionOption"
          }
        },
        "versionType": {
          "enum": [
            "none",
            "changeset",
            "shelveset",
            "change",
            "date",
            "latest",
            "tip",
            "mergeSource"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionType"
          }
        }
      }
    },
    "TfvcItemRequestData": {
      "description": "",
      "type": "object",
      "properties": {
        "includeContentMetadata": {
          "description": "If true, include metadata about the file type",
          "type": "boolean"
        },
        "includeLinks": {
          "description": "Whether to include the _links field on the shallow references",
          "type": "boolean"
        },
        "itemDescriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TfvcItemDescriptor"
          }
        }
      }
    },
    "TfvcLabel": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TfvcLabelRef"
        }
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TfvcItem"
          }
        }
      }
    },
    "TfvcLabelRef": {
      "description": "",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "labelScope": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/IdentityRef"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "TfvcLabelRequestData": {
      "description": "",
      "type": "object",
      "properties": {
        "includeLinks": {
          "description": "Whether to include the _links field on the shallow references",
          "type": "boolean"
        },
        "itemLabelFilter": {
          "type": "string"
        },
        "labelScope": {
          "type": "string"
        },
        "maxItemCount": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "TfvcMergeSource": {
      "description": "",
      "type": "object",
      "properties": {
        "isRename": {
          "description": "Indicates if this a rename source. If false, it is a merge source.",
          "type": "boolean"
        },
        "serverItem": {
          "description": "The server item of the merge source",
          "type": "string"
        },
        "versionFrom": {
          "description": "Start of the version range",
          "type": "integer",
          "format": "int32"
        },
        "versionTo": {
          "description": "End of the version range",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TfvcPolicyFailureInfo": {
      "description": "",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        }
      }
    },
    "TfvcPolicyOverrideInfo": {
      "description": "",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "policyFailures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TfvcPolicyFailureInfo"
          }
        }
      }
    },
    "TfvcShallowBranchRef": {
      "description": "",
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "TfvcShelveset": {
      "description": "This is the deep shelveset class",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TfvcShelvesetRef"
        }
      ],
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TfvcChange"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckinNote"
          }
        },
        "policyOverride": {
          "$ref": "#/definitions/TfvcPolicyOverrideInfo"
        },
        "workItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssociatedWorkItem"
          }
        }
      }
    },
    "TfvcShelvesetRef": {
      "description": "This is the shallow shelveset class",
      "type": "object",
      "properties": {
        "_links": {
          "$ref": "#/definitions/ReferenceLinks"
        },
        "comment": {
          "type": "string"
        },
        "commentTruncated": {
          "type": "boolean"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/IdentityRef"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "TfvcShelvesetRequestData": {
      "description": "",
      "type": "object",
      "properties": {
        "includeDetails": {
          "description": "Whether to include policyOverride and notes Only applies when requesting a single deep shelveset",
          "type": "boolean"
        },
        "includeLinks": {
          "description": "Whether to include the _links field on the shallow references. Does not apply when requesting a single deep shelveset object. Links will always be included in the deep shelveset.",
          "type": "boolean"
        },
        "includeWorkItems": {
          "description": "Whether to include workItems",
          "type": "boolean"
        },
        "maxChangeCount": {
          "description": "Max number of changes to include",
          "type": "integer",
          "format": "int32"
        },
        "maxCommentLength": {
          "description": "Max length of comment",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Shelveset's name",
          "type": "string"
        },
        "owner": {
          "description": "Owner's ID. Could be a name or a guid.",
          "type": "string"
        }
      }
    },
    "TfvcVersionDescriptor": {
      "description": "",
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "versionOption": {
          "enum": [
            "none",
            "previous",
            "useRename"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionOption"
          }
        },
        "versionType": {
          "enum": [
            "none",
            "changeset",
            "shelveset",
            "change",
            "date",
            "latest",
            "tip",
            "mergeSource"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionType"
          }
        }
      }
    },
    "VersionControlProjectInfo": {
      "description": "",
      "type": "object",
      "properties": {
        "defaultSourceControlType": {
          "enum": [
            "tfvc",
            "git"
          ],
          "x-ms-enum": {
            "name": "Microsoft.TeamFoundation.Core.WebApi.SourceControlTypes"
          }
        },
        "project": {
          "$ref": "#/definitions/TeamProjectReference"
        },
        "supportsGit": {
          "type": "boolean"
        },
        "supportsTFVC": {
          "type": "boolean"
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.code": "Grants the ability to read source code and metadata about commits, changesets, branches, and other version control artifacts. Also grants the ability to get notified about version control events via service hooks.",
        "vso.code_write": "Grants the ability to read, update, and delete source code, access metadata about commits, changesets, branches, and other version control artifacts. Also grants the ability to create and manage pull requests and code reviews and to receive notifications about version control events via service hooks."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}