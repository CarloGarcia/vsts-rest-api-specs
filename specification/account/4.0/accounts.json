{
  "swagger": "2.0",
  "info": {
    "title": "Account",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "4.1"
  },
  "host": "fabrikam-fiber-inc.visualstudio.com",
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.visualstudio.com",
    "parameters": [
      {
        "name": "accountName",
        "description": "The name of the Visual Studio Team Services account.",
        "required": true,
        "type": "string",
        "in": "path"
      }
    ]
  },
  "x-ms-vss-area": "Accounts",
  "basePath": "/",
  "tags": [
    {
      "name": "Accounts"
    },
    {
      "name": "Settings"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/_apis/account/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "x-ms-vss-resource": "settings",
        "x-ms-vss-method": "GetAccountSettings",
        "description": "",
        "operationId": "Settings_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/accounts": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "x-ms-vss-resource": "accounts",
        "x-ms-vss-method": "CreateAccount",
        "description": "",
        "operationId": "Accounts_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountCreateInfoInternal"
            }
          },
          {
            "in": "query",
            "name": "usePrecreated",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
         }
        }
      },
      "get": {
        "tags": [
          "Accounts"
        ],
        "x-ms-vss-resource": "accounts",
        "x-ms-vss-method": "GetAccounts",
        "description": "A new version GetAccounts API. Only supports limited set of parameters, returns a list of account ref objects that only contains AccountUrl, AccountName and AccountId information, will use collection host Id as the AccountId.",
        "operationId": "Accounts_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ownerId",
            "description": "Owner Id to query for",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "memberId",
            "description": "Member Id to query for",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Only support service URL properties",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    },
    "/_apis/accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "x-ms-vss-resource": "accounts",
        "x-ms-vss-method": "GetAccount",
        "description": "",
        "operationId": "Accounts_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
         }
        },
        "security": [
          {
            "oauth2": [
              "vso.profile"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Account": {
      "description": "",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Identifier for an Account",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "accountName": {
          "description": "Name for an account",
          "type": "string"
        },
        "accountOwner": {
          "description": "Owner of account",
          "type": "string",
          "format": "uuid"
        },
        "accountStatus": {
          "description": "Current account status",
          "enum": [
            "none",
            "enabled",
            "disabled",
            "deleted",
            "moved"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Account.AccountStatus"
          }
        },
        "accountType": {
          "description": "Type of account: Personal, Organization",
          "enum": [
            "personal",
            "organization"
          ],
          "x-ms-enum": {
            "name": "Microsoft.VisualStudio.Services.Account.AccountType"
          }
        },
        "accountUri": {
          "description": "Uri for an account",
          "type": "string"
        },
        "createdBy": {
          "description": "Who created the account",
          "type": "string",
          "format": "uuid"
        },
        "createdDate": {
          "description": "Date account was created",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "hasMoved": {
          "readOnly": true,
          "type": "boolean"
        },
        "lastUpdatedBy": {
          "description": "Identity of last person to update the account",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "lastUpdatedDate": {
          "description": "Date account was last updated",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "namespaceId": {
          "description": "Namespace for an account",
          "type": "string",
          "format": "uuid"
        },
        "newCollectionId": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "organizationName": {
          "description": "Organization that created the account",
          "type": "string"
        },
        "properties": {
          "description": "Extended properties",
          "$ref": "#/definitions/PropertiesCollection"
        },
        "statusReason": {
          "description": "Reason for current status",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "AccountCreateInfoInternal": {
      "description": "",
      "type": "object",
      "properties": {
        "accountName": {
          "readOnly": true,
          "type": "string"
        },
        "creator": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "organization": {
          "readOnly": true,
          "type": "string"
        },
        "preferences": {
          "$ref": "#/definitions/AccountPreferencesInternal"
        },
        "properties": {
          "$ref": "#/definitions/PropertiesCollection"
        },
        "serviceDefinitions": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "AccountPreferencesInternal": {
      "description": "",
      "type": "object",
      "properties": {
        "culture": {
          "readOnly": true,
          "type": "string",
          "format": "CultureInfo"
        },
        "language": {
          "readOnly": true,
          "type": "string",
          "format": "CultureInfo"
        },
        "timeZone": {
          "readOnly": true,
          "type": "string",
          "format": "TimeZoneInfo"
        }
      }
    },
    "PropertiesCollection": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "description": "The count of properties in the collection.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "item": {
          "type": "object"
        },
        "keys": {
          "description": "The set of keys in the collection.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "description": "The set of values in the collection.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VssJsonCollectionWrapper": {
      "description": "This class is used to serialized collections as a single JSON object on the wire, to avoid serializing JSON arrays directly to the client, which can be a security hole",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VssJsonCollectionWrapperBase"
        }
      ],
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "format": "T"
        }
      }
    },
    "VssJsonCollectionWrapperBase": {
      "description": "",
      "type": "object",
      "properties": {
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {
    "api-Version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '4.1-preview' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
     },
     "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
      "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
      "scopes": {
        "vso.profile": "Grants the ability to read your profile, accounts, collections, projects, teams, and other top-level organizational artifacts."
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Visual Studio Team Services REST APIs",
    "url": "https://www.visualstudio.com/docs/integrate/api/overview"
  }
}